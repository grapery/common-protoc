// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: error.proto
// Protobuf Java Version: 4.32.1

package com.rankquantity.voyager.api;

@com.google.protobuf.Generated
public interface ErrorDescriptionsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:rankquantity.voyager.api.ErrorDescriptions)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 系统级错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; system_errors = 1 [json_name = "systemErrors"];</code>
   */
  int getSystemErrorsCount();
  /**
   * <pre>
   * 系统级错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; system_errors = 1 [json_name = "systemErrors"];</code>
   */
  boolean containsSystemErrors(
      int key);
  /**
   * Use {@link #getSystemErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getSystemErrors();
  /**
   * <pre>
   * 系统级错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; system_errors = 1 [json_name = "systemErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getSystemErrorsMap();
  /**
   * <pre>
   * 系统级错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; system_errors = 1 [json_name = "systemErrors"];</code>
   */
  /* nullable */
java.lang.String getSystemErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 系统级错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; system_errors = 1 [json_name = "systemErrors"];</code>
   */
  java.lang.String getSystemErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 认证和授权错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; auth_errors = 2 [json_name = "authErrors"];</code>
   */
  int getAuthErrorsCount();
  /**
   * <pre>
   * 认证和授权错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; auth_errors = 2 [json_name = "authErrors"];</code>
   */
  boolean containsAuthErrors(
      int key);
  /**
   * Use {@link #getAuthErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getAuthErrors();
  /**
   * <pre>
   * 认证和授权错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; auth_errors = 2 [json_name = "authErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getAuthErrorsMap();
  /**
   * <pre>
   * 认证和授权错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; auth_errors = 2 [json_name = "authErrors"];</code>
   */
  /* nullable */
java.lang.String getAuthErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 认证和授权错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; auth_errors = 2 [json_name = "authErrors"];</code>
   */
  java.lang.String getAuthErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 参数验证错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; validation_errors = 3 [json_name = "validationErrors"];</code>
   */
  int getValidationErrorsCount();
  /**
   * <pre>
   * 参数验证错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; validation_errors = 3 [json_name = "validationErrors"];</code>
   */
  boolean containsValidationErrors(
      int key);
  /**
   * Use {@link #getValidationErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getValidationErrors();
  /**
   * <pre>
   * 参数验证错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; validation_errors = 3 [json_name = "validationErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getValidationErrorsMap();
  /**
   * <pre>
   * 参数验证错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; validation_errors = 3 [json_name = "validationErrors"];</code>
   */
  /* nullable */
java.lang.String getValidationErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 参数验证错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; validation_errors = 3 [json_name = "validationErrors"];</code>
   */
  java.lang.String getValidationErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 资源错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; resource_errors = 4 [json_name = "resourceErrors"];</code>
   */
  int getResourceErrorsCount();
  /**
   * <pre>
   * 资源错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; resource_errors = 4 [json_name = "resourceErrors"];</code>
   */
  boolean containsResourceErrors(
      int key);
  /**
   * Use {@link #getResourceErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getResourceErrors();
  /**
   * <pre>
   * 资源错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; resource_errors = 4 [json_name = "resourceErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getResourceErrorsMap();
  /**
   * <pre>
   * 资源错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; resource_errors = 4 [json_name = "resourceErrors"];</code>
   */
  /* nullable */
java.lang.String getResourceErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 资源错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; resource_errors = 4 [json_name = "resourceErrors"];</code>
   */
  java.lang.String getResourceErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 用户相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; user_errors = 5 [json_name = "userErrors"];</code>
   */
  int getUserErrorsCount();
  /**
   * <pre>
   * 用户相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; user_errors = 5 [json_name = "userErrors"];</code>
   */
  boolean containsUserErrors(
      int key);
  /**
   * Use {@link #getUserErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getUserErrors();
  /**
   * <pre>
   * 用户相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; user_errors = 5 [json_name = "userErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getUserErrorsMap();
  /**
   * <pre>
   * 用户相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; user_errors = 5 [json_name = "userErrors"];</code>
   */
  /* nullable */
java.lang.String getUserErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 用户相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; user_errors = 5 [json_name = "userErrors"];</code>
   */
  java.lang.String getUserErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 组织相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; group_errors = 6 [json_name = "groupErrors"];</code>
   */
  int getGroupErrorsCount();
  /**
   * <pre>
   * 组织相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; group_errors = 6 [json_name = "groupErrors"];</code>
   */
  boolean containsGroupErrors(
      int key);
  /**
   * Use {@link #getGroupErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getGroupErrors();
  /**
   * <pre>
   * 组织相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; group_errors = 6 [json_name = "groupErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getGroupErrorsMap();
  /**
   * <pre>
   * 组织相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; group_errors = 6 [json_name = "groupErrors"];</code>
   */
  /* nullable */
java.lang.String getGroupErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 组织相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; group_errors = 6 [json_name = "groupErrors"];</code>
   */
  java.lang.String getGroupErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 项目相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; project_errors = 7 [json_name = "projectErrors"];</code>
   */
  int getProjectErrorsCount();
  /**
   * <pre>
   * 项目相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; project_errors = 7 [json_name = "projectErrors"];</code>
   */
  boolean containsProjectErrors(
      int key);
  /**
   * Use {@link #getProjectErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getProjectErrors();
  /**
   * <pre>
   * 项目相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; project_errors = 7 [json_name = "projectErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getProjectErrorsMap();
  /**
   * <pre>
   * 项目相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; project_errors = 7 [json_name = "projectErrors"];</code>
   */
  /* nullable */
java.lang.String getProjectErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 项目相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; project_errors = 7 [json_name = "projectErrors"];</code>
   */
  java.lang.String getProjectErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 故事相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; story_errors = 8 [json_name = "storyErrors"];</code>
   */
  int getStoryErrorsCount();
  /**
   * <pre>
   * 故事相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; story_errors = 8 [json_name = "storyErrors"];</code>
   */
  boolean containsStoryErrors(
      int key);
  /**
   * Use {@link #getStoryErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getStoryErrors();
  /**
   * <pre>
   * 故事相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; story_errors = 8 [json_name = "storyErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getStoryErrorsMap();
  /**
   * <pre>
   * 故事相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; story_errors = 8 [json_name = "storyErrors"];</code>
   */
  /* nullable */
java.lang.String getStoryErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 故事相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; story_errors = 8 [json_name = "storyErrors"];</code>
   */
  java.lang.String getStoryErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 故事板相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; storyboard_errors = 9 [json_name = "storyboardErrors"];</code>
   */
  int getStoryboardErrorsCount();
  /**
   * <pre>
   * 故事板相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; storyboard_errors = 9 [json_name = "storyboardErrors"];</code>
   */
  boolean containsStoryboardErrors(
      int key);
  /**
   * Use {@link #getStoryboardErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getStoryboardErrors();
  /**
   * <pre>
   * 故事板相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; storyboard_errors = 9 [json_name = "storyboardErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getStoryboardErrorsMap();
  /**
   * <pre>
   * 故事板相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; storyboard_errors = 9 [json_name = "storyboardErrors"];</code>
   */
  /* nullable */
java.lang.String getStoryboardErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 故事板相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; storyboard_errors = 9 [json_name = "storyboardErrors"];</code>
   */
  java.lang.String getStoryboardErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 角色相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; role_errors = 10 [json_name = "roleErrors"];</code>
   */
  int getRoleErrorsCount();
  /**
   * <pre>
   * 角色相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; role_errors = 10 [json_name = "roleErrors"];</code>
   */
  boolean containsRoleErrors(
      int key);
  /**
   * Use {@link #getRoleErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getRoleErrors();
  /**
   * <pre>
   * 角色相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; role_errors = 10 [json_name = "roleErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getRoleErrorsMap();
  /**
   * <pre>
   * 角色相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; role_errors = 10 [json_name = "roleErrors"];</code>
   */
  /* nullable */
java.lang.String getRoleErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 角色相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; role_errors = 10 [json_name = "roleErrors"];</code>
   */
  java.lang.String getRoleErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 内容相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; content_errors = 11 [json_name = "contentErrors"];</code>
   */
  int getContentErrorsCount();
  /**
   * <pre>
   * 内容相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; content_errors = 11 [json_name = "contentErrors"];</code>
   */
  boolean containsContentErrors(
      int key);
  /**
   * Use {@link #getContentErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getContentErrors();
  /**
   * <pre>
   * 内容相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; content_errors = 11 [json_name = "contentErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getContentErrorsMap();
  /**
   * <pre>
   * 内容相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; content_errors = 11 [json_name = "contentErrors"];</code>
   */
  /* nullable */
java.lang.String getContentErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 内容相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; content_errors = 11 [json_name = "contentErrors"];</code>
   */
  java.lang.String getContentErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 操作相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; operation_errors = 12 [json_name = "operationErrors"];</code>
   */
  int getOperationErrorsCount();
  /**
   * <pre>
   * 操作相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; operation_errors = 12 [json_name = "operationErrors"];</code>
   */
  boolean containsOperationErrors(
      int key);
  /**
   * Use {@link #getOperationErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getOperationErrors();
  /**
   * <pre>
   * 操作相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; operation_errors = 12 [json_name = "operationErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getOperationErrorsMap();
  /**
   * <pre>
   * 操作相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; operation_errors = 12 [json_name = "operationErrors"];</code>
   */
  /* nullable */
java.lang.String getOperationErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 操作相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; operation_errors = 12 [json_name = "operationErrors"];</code>
   */
  java.lang.String getOperationErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 限制相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; limit_errors = 13 [json_name = "limitErrors"];</code>
   */
  int getLimitErrorsCount();
  /**
   * <pre>
   * 限制相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; limit_errors = 13 [json_name = "limitErrors"];</code>
   */
  boolean containsLimitErrors(
      int key);
  /**
   * Use {@link #getLimitErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getLimitErrors();
  /**
   * <pre>
   * 限制相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; limit_errors = 13 [json_name = "limitErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getLimitErrorsMap();
  /**
   * <pre>
   * 限制相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; limit_errors = 13 [json_name = "limitErrors"];</code>
   */
  /* nullable */
java.lang.String getLimitErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 限制相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; limit_errors = 13 [json_name = "limitErrors"];</code>
   */
  java.lang.String getLimitErrorsOrThrow(
      int key);

  /**
   * <pre>
   * AI生成相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; ai_errors = 14 [json_name = "aiErrors"];</code>
   */
  int getAiErrorsCount();
  /**
   * <pre>
   * AI生成相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; ai_errors = 14 [json_name = "aiErrors"];</code>
   */
  boolean containsAiErrors(
      int key);
  /**
   * Use {@link #getAiErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getAiErrors();
  /**
   * <pre>
   * AI生成相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; ai_errors = 14 [json_name = "aiErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getAiErrorsMap();
  /**
   * <pre>
   * AI生成相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; ai_errors = 14 [json_name = "aiErrors"];</code>
   */
  /* nullable */
java.lang.String getAiErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * AI生成相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; ai_errors = 14 [json_name = "aiErrors"];</code>
   */
  java.lang.String getAiErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 评论相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; comment_errors = 15 [json_name = "commentErrors"];</code>
   */
  int getCommentErrorsCount();
  /**
   * <pre>
   * 评论相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; comment_errors = 15 [json_name = "commentErrors"];</code>
   */
  boolean containsCommentErrors(
      int key);
  /**
   * Use {@link #getCommentErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getCommentErrors();
  /**
   * <pre>
   * 评论相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; comment_errors = 15 [json_name = "commentErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getCommentErrorsMap();
  /**
   * <pre>
   * 评论相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; comment_errors = 15 [json_name = "commentErrors"];</code>
   */
  /* nullable */
java.lang.String getCommentErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 评论相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; comment_errors = 15 [json_name = "commentErrors"];</code>
   */
  java.lang.String getCommentErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 点赞相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; like_errors = 16 [json_name = "likeErrors"];</code>
   */
  int getLikeErrorsCount();
  /**
   * <pre>
   * 点赞相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; like_errors = 16 [json_name = "likeErrors"];</code>
   */
  boolean containsLikeErrors(
      int key);
  /**
   * Use {@link #getLikeErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getLikeErrors();
  /**
   * <pre>
   * 点赞相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; like_errors = 16 [json_name = "likeErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getLikeErrorsMap();
  /**
   * <pre>
   * 点赞相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; like_errors = 16 [json_name = "likeErrors"];</code>
   */
  /* nullable */
java.lang.String getLikeErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 点赞相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; like_errors = 16 [json_name = "likeErrors"];</code>
   */
  java.lang.String getLikeErrorsOrThrow(
      int key);

  /**
   * <pre>
   * VIP/充值相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; vip_errors = 17 [json_name = "vipErrors"];</code>
   */
  int getVipErrorsCount();
  /**
   * <pre>
   * VIP/充值相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; vip_errors = 17 [json_name = "vipErrors"];</code>
   */
  boolean containsVipErrors(
      int key);
  /**
   * Use {@link #getVipErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getVipErrors();
  /**
   * <pre>
   * VIP/充值相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; vip_errors = 17 [json_name = "vipErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getVipErrorsMap();
  /**
   * <pre>
   * VIP/充值相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; vip_errors = 17 [json_name = "vipErrors"];</code>
   */
  /* nullable */
java.lang.String getVipErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * VIP/充值相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; vip_errors = 17 [json_name = "vipErrors"];</code>
   */
  java.lang.String getVipErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 支付相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; payment_errors = 18 [json_name = "paymentErrors"];</code>
   */
  int getPaymentErrorsCount();
  /**
   * <pre>
   * 支付相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; payment_errors = 18 [json_name = "paymentErrors"];</code>
   */
  boolean containsPaymentErrors(
      int key);
  /**
   * Use {@link #getPaymentErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getPaymentErrors();
  /**
   * <pre>
   * 支付相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; payment_errors = 18 [json_name = "paymentErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getPaymentErrorsMap();
  /**
   * <pre>
   * 支付相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; payment_errors = 18 [json_name = "paymentErrors"];</code>
   */
  /* nullable */
java.lang.String getPaymentErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 支付相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; payment_errors = 18 [json_name = "paymentErrors"];</code>
   */
  java.lang.String getPaymentErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 订单相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; order_errors = 19 [json_name = "orderErrors"];</code>
   */
  int getOrderErrorsCount();
  /**
   * <pre>
   * 订单相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; order_errors = 19 [json_name = "orderErrors"];</code>
   */
  boolean containsOrderErrors(
      int key);
  /**
   * Use {@link #getOrderErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getOrderErrors();
  /**
   * <pre>
   * 订单相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; order_errors = 19 [json_name = "orderErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getOrderErrorsMap();
  /**
   * <pre>
   * 订单相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; order_errors = 19 [json_name = "orderErrors"];</code>
   */
  /* nullable */
java.lang.String getOrderErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 订单相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; order_errors = 19 [json_name = "orderErrors"];</code>
   */
  java.lang.String getOrderErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 消息相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; message_errors = 20 [json_name = "messageErrors"];</code>
   */
  int getMessageErrorsCount();
  /**
   * <pre>
   * 消息相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; message_errors = 20 [json_name = "messageErrors"];</code>
   */
  boolean containsMessageErrors(
      int key);
  /**
   * Use {@link #getMessageErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getMessageErrors();
  /**
   * <pre>
   * 消息相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; message_errors = 20 [json_name = "messageErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getMessageErrorsMap();
  /**
   * <pre>
   * 消息相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; message_errors = 20 [json_name = "messageErrors"];</code>
   */
  /* nullable */
java.lang.String getMessageErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 消息相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; message_errors = 20 [json_name = "messageErrors"];</code>
   */
  java.lang.String getMessageErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 聊天相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; chat_errors = 21 [json_name = "chatErrors"];</code>
   */
  int getChatErrorsCount();
  /**
   * <pre>
   * 聊天相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; chat_errors = 21 [json_name = "chatErrors"];</code>
   */
  boolean containsChatErrors(
      int key);
  /**
   * Use {@link #getChatErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getChatErrors();
  /**
   * <pre>
   * 聊天相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; chat_errors = 21 [json_name = "chatErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getChatErrorsMap();
  /**
   * <pre>
   * 聊天相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; chat_errors = 21 [json_name = "chatErrors"];</code>
   */
  /* nullable */
java.lang.String getChatErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 聊天相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; chat_errors = 21 [json_name = "chatErrors"];</code>
   */
  java.lang.String getChatErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 文件上传相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; upload_errors = 22 [json_name = "uploadErrors"];</code>
   */
  int getUploadErrorsCount();
  /**
   * <pre>
   * 文件上传相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; upload_errors = 22 [json_name = "uploadErrors"];</code>
   */
  boolean containsUploadErrors(
      int key);
  /**
   * Use {@link #getUploadErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getUploadErrors();
  /**
   * <pre>
   * 文件上传相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; upload_errors = 22 [json_name = "uploadErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getUploadErrorsMap();
  /**
   * <pre>
   * 文件上传相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; upload_errors = 22 [json_name = "uploadErrors"];</code>
   */
  /* nullable */
java.lang.String getUploadErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 文件上传相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; upload_errors = 22 [json_name = "uploadErrors"];</code>
   */
  java.lang.String getUploadErrorsOrThrow(
      int key);

  /**
   * <pre>
   * 搜索相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; search_errors = 23 [json_name = "searchErrors"];</code>
   */
  int getSearchErrorsCount();
  /**
   * <pre>
   * 搜索相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; search_errors = 23 [json_name = "searchErrors"];</code>
   */
  boolean containsSearchErrors(
      int key);
  /**
   * Use {@link #getSearchErrorsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.String>
  getSearchErrors();
  /**
   * <pre>
   * 搜索相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; search_errors = 23 [json_name = "searchErrors"];</code>
   */
  java.util.Map<java.lang.Integer, java.lang.String>
  getSearchErrorsMap();
  /**
   * <pre>
   * 搜索相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; search_errors = 23 [json_name = "searchErrors"];</code>
   */
  /* nullable */
java.lang.String getSearchErrorsOrDefault(
      int key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * 搜索相关错误描述
   * </pre>
   *
   * <code>map&lt;int32, string&gt; search_errors = 23 [json_name = "searchErrors"];</code>
   */
  java.lang.String getSearchErrorsOrThrow(
      int key);
}
