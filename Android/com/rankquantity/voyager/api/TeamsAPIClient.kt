// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: service.proto
//
package com.rankquantity.voyager.api

import com.connectrpc.Headers
import com.connectrpc.MethodSpec
import com.connectrpc.ProtocolClientInterface
import com.connectrpc.ResponseMessage
import com.connectrpc.StreamType

/**
 * / TeamsAPI - 团队协作服务API
 * / 提供完整的团队、故事、角色管理和用户交互功能
 * / 支持故事创作、角色聊天、AI生成、评论互动等功能
 */
public class TeamsAPIClient(
  private val client: ProtocolClientInterface,
) : TeamsAPIClientInterface {
  /**
   * / 探索推荐内容
   * / 获取平台推荐的热门和优质内容，帮助用户发现有趣的故事和角色
   * / HTTP GET /common.TeamsAPI/Explore
   * / 响应：ExploreResponse (JSON，返回推荐内容列表)
   */
  override suspend fun explore(request: ExploreRequest, headers: Headers): ResponseMessage<ExploreResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/Explore",
      com.rankquantity.voyager.api.ExploreRequest::class,
      com.rankquantity.voyager.api.ExploreResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取API版本信息
   * / 返回当前API的版本号和构建时间信息
   * / HTTP GET /common.TeamsAPI/Version
   * / 响应：VersionResponse (JSON，包含version和build_time)
   */
  override suspend fun version(request: VersionRequest, headers: Headers): ResponseMessage<VersionResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/Version",
      com.rankquantity.voyager.api.VersionRequest::class,
      com.rankquantity.voyager.api.VersionResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取服务关于信息
   * / 返回服务的基本介绍和说明信息
   * / HTTP GET /common.TeamsAPI/About
   * / 响应：AboutResponse (JSON，包含服务描述)
   */
  override suspend fun about(request: AboutRequest, headers: Headers): ResponseMessage<AboutResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/About",
      com.rankquantity.voyager.api.AboutRequest::class,
      com.rankquantity.voyager.api.AboutResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 用户登录
   * /
   * / 【功能说明】
   * / 验证用户凭据并创建会话，支持多种登录方式
   * /
   * / 【支持的登录方式】
   * / - 密码登录：使用账号+密码
   * / - 验证码登录：使用手机号+验证码
   * / - 第三方登录：OAuth2.0授权登录
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/Login
   * / - 请求体：LoginRequest (JSON)
   * / - 响应：LoginResponse (JSON)
   * /
   * / 【请求参数】
   * / - account: &#91;必填&#93; 账号（邮箱/手机号/用户名）
   * / - password: &#91;必填&#93; 密码
   * / - login_type: &#91;必填&#93; 登录类型（1-3）
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - msg: 响应消息
   * / - data.user_id: 用户ID
   * / - data.token: 访问令牌（JWT格式）
   * / - data.expire_at: token过期时间戳
   * /
   * / 【使用示例】
   * / ```json
   * / {
   * /   "account": "user&#64;example.com",
   * /   "password": "password123",
   * /   "login_type": 1
   * / }
   * / ```
   */
  override suspend fun login(request: LoginRequest, headers: Headers): ResponseMessage<LoginResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/Login",
      com.rankquantity.voyager.api.LoginRequest::class,
      com.rankquantity.voyager.api.LoginResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 用户登出
   * / 使当前会话token失效，退出登录状态
   * / HTTP POST /common.TeamsAPI/Logout
   * / 请求体：LogoutRequest (JSON，包含token和用户ID)
   * / 响应：LogoutResponse (JSON)
   */
  override suspend fun logout(request: LogoutRequest, headers: Headers): ResponseMessage<LogoutResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/Logout",
      com.rankquantity.voyager.api.LogoutRequest::class,
      com.rankquantity.voyager.api.LogoutResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 刷新访问令牌
   * / 使用当前有效token生成新的访问令牌，延长会话时间
   * / HTTP POST /common.TeamsAPI/RefreshToken
   * / 请求体：RefreshTokenRequest (JSON，包含当前token)
   * / 响应：RefreshTokenResponse (JSON，返回新的token和用户ID)
   */
  override suspend fun refreshToken(request: RefreshTokenRequest, headers: Headers): ResponseMessage<RefreshTokenResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/RefreshToken",
      com.rankquantity.voyager.api.RefreshTokenRequest::class,
      com.rankquantity.voyager.api.RefreshTokenResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 用户注册
   * / 创建新的用户账号，需要提供账号、密码、邮箱等信息
   * / HTTP POST /common.TeamsAPI/Register
   * / 请求体：RegisterRequest (JSON，包含账号、密码、昵称、邮箱、手机号)
   * / 响应：RegisterResponse (JSON)
   */
  override suspend fun register(request: RegisterRequest, headers: Headers): ResponseMessage<RegisterResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/Register",
      com.rankquantity.voyager.api.RegisterRequest::class,
      com.rankquantity.voyager.api.RegisterResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 重置密码
   * /
   * / 【功能说明】
   * / 允许用户重置登录密码，需要验证原密码
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/ResetPwd
   * / - 请求体：ResetPasswordRequest (JSON)
   * / - 响应：ResetPasswordResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "account": "用户账号（邮箱/手机号/用户名）",
   * /   "oldPwd": "原密码（用于验证身份）",
   * /   "newPwd": "新密码（6-128字符）"
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - account: 用户账号
   * / - status: 重置状态（0-成功）
   * / - timestamp: 操作时间戳
   */
  override suspend fun resetPwd(request: ResetPasswordRequest, headers: Headers): ResponseMessage<ResetPasswordResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/ResetPwd",
      com.rankquantity.voyager.api.ResetPasswordRequest::class,
      com.rankquantity.voyager.api.ResetPasswordResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 用户初始化
   * /
   * / 【功能说明】
   * / 为新注册用户执行初始化设置，创建默认资料和配置
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UserInit
   * / - 请求体：UserInitRequest (JSON)
   * / - 响应：UserInitResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,        // &#91;必填&#93; 用户ID
   * /   "name": "用户昵称",     // &#91;可选&#93; 显示名称
   * /   "avatar": "头像URL",   // &#91;可选&#93; 头像地址
   * /   "timezone": "时区"     // &#91;可选&#93; 用户时区
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - user: 初始化后的用户信息
   */
  override suspend fun userInit(request: UserInitRequest, headers: Headers): ResponseMessage<UserInitResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UserInit",
      com.rankquantity.voyager.api.UserInitRequest::class,
      com.rankquantity.voyager.api.UserInitResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户信息
   * /
   * / 【功能说明】
   * / 获取指定用户的详细信息，包括基本资料、统计数据等
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UserInfo
   * / - 请求体：UserInfoRequest (JSON)
   * / - 响应：UserInfoResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,              // &#91;必填&#93; 用户ID
   * /   "account": "user&#64;email.com"  // &#91;可选&#93; 用户账号（二选一）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - user: 用户详细信息对象
   */
  override suspend fun userInfo(request: UserInfoRequest, headers: Headers): ResponseMessage<UserInfoResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UserInfo",
      com.rankquantity.voyager.api.UserInfoRequest::class,
      com.rankquantity.voyager.api.UserInfoResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新用户头像
   * /
   * / 【功能说明】
   * / 更新用户的个人头像图片
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UpdateUserAvator
   * / - 请求体：UpdateUserAvatorRequest (JSON)
   * / - 响应：UpdateUserAvatorResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,                      // &#91;必填&#93; 用户ID
   * /   "avator": "https://cdn.com/img.jpg"  // &#91;必填&#93; 新头像URL
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   */
  override suspend fun updateUserAvator(request: UpdateUserAvatorRequest, headers: Headers): ResponseMessage<UpdateUserAvatorResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateUserAvator",
      com.rankquantity.voyager.api.UpdateUserAvatorRequest::class,
      com.rankquantity.voyager.api.UpdateUserAvatorResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户关注的项目
   * /
   * / 【功能说明】
   * / 获取用户关注的所有项目（故事）列表
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UserWatching
   * / - 请求体：UserWatchingRequest (JSON)
   * / - 响应：UserWatchingResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,      // &#91;必填&#93; 用户ID
   * /   "offset": 0,         // &#91;可选&#93; 分页偏移量，默认0
   * /   "page_size": 20      // &#91;可选&#93; 每页数量，默认20
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - projects: 关注的项目列表
   * / - total: 总数量
   */
  override suspend fun userWatching(request: UserWatchingRequest, headers: Headers): ResponseMessage<UserWatchingResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UserWatching",
      com.rankquantity.voyager.api.UserWatchingRequest::class,
      com.rankquantity.voyager.api.UserWatchingResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户所属群组
   * /
   * / 【功能说明】
   * / 获取用户加入的所有群组列表
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UserGroup
   * / - 请求体：UserGroupRequest (JSON)
   * / - 响应：UserGroupResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,      // &#91;必填&#93; 用户ID
   * /   "offset": 0,         // &#91;可选&#93; 分页偏移量
   * /   "page_size": 20      // &#91;可选&#93; 每页数量
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - groups: 群组列表
   * / - total: 总数量
   */
  override suspend fun userGroup(request: UserGroupRequest, headers: Headers): ResponseMessage<UserGroupResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UserGroup",
      com.rankquantity.voyager.api.UserGroupRequest::class,
      com.rankquantity.voyager.api.UserGroupResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户关注的群组
   * /
   * / 【功能说明】
   * / 获取用户关注但未加入的群组列表
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UserFollowingGroup
   * / - 请求体：UserFollowingGroupRequest (JSON)
   * / - 响应：UserFollowingGroupResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,      // &#91;必填&#93; 用户ID
   * /   "offset": 0,         // &#91;可选&#93; 分页偏移量
   * /   "page_size": 20      // &#91;可选&#93; 每页数量
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - groups: 关注的群组列表
   * / - total: 总数量
   */
  override suspend fun userFollowingGroup(request: UserFollowingGroupRequest, headers: Headers): ResponseMessage<UserFollowingGroupResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UserFollowingGroup",
      com.rankquantity.voyager.api.UserFollowingGroupRequest::class,
      com.rankquantity.voyager.api.UserFollowingGroupResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新用户信息
   * /
   * / 【功能说明】
   * / 更新用户的基本资料信息
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UserUpdate
   * / - 请求体：UserUpdateRequest (JSON)
   * / - 响应：UserUpdateResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,              // &#91;必填&#93; 用户ID
   * /   "name": "新昵称",            // &#91;可选&#93; 用户昵称
   * /   "description": "个人简介",   // &#91;可选&#93; 个人描述
   * /   "location": "所在地",        // &#91;可选&#93; 地理位置
   * /   "email": "new&#64;email.com"     // &#91;可选&#93; 邮箱地址
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - user: 更新后的用户信息
   */
  override suspend fun userUpdate(request: UserUpdateRequest, headers: Headers): ResponseMessage<UserUpdateResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UserUpdate",
      com.rankquantity.voyager.api.UserUpdateRequest::class,
      com.rankquantity.voyager.api.UserUpdateResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 搜索用户
   * / 根据名称搜索用户，支持模糊搜索和精确匹配
   * / HTTP POST /common.TeamsAPI/SearchUser
   * / 请求体：SearchUserRequest (JSON，包含搜索关键词、群组ID和分页参数)
   * / 响应：SearchUserResponse (JSON，返回匹配的用户列表)
   */
  override suspend fun searchUser(request: SearchUserRequest, headers: Headers): ResponseMessage<SearchUserResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/SearchUser",
      com.rankquantity.voyager.api.SearchUserRequest::class,
      com.rankquantity.voyager.api.SearchUserResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 创建群组
   * / 创建新的协作群组或团队，设置名称、描述和头像
   * / HTTP POST /common.TeamsAPI/CreateGroup
   * / 请求体：CreateGroupRequest (JSON，包含群组名称、描述和头像)
   * / 响应：CreateGroupResponse (JSON，返回创建的群组信息)
   */
  override suspend fun createGroup(request: CreateGroupRequest, headers: Headers): ResponseMessage<CreateGroupResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/CreateGroup",
      com.rankquantity.voyager.api.CreateGroupRequest::class,
      com.rankquantity.voyager.api.CreateGroupResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取群组信息
   * / 获取指定群组的详细信息，支持同时获取资料信息
   * / HTTP POST /common.TeamsAPI/GetGroup
   * / 请求体：GetGroupRequest (JSON，包含群组ID和是否获取资料标志)
   * / 响应：GetGroupResponse (JSON，返回群组详细信息)
   */
  override suspend fun getGroup(request: GetGroupRequest, headers: Headers): ResponseMessage<GetGroupResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetGroup",
      com.rankquantity.voyager.api.GetGroupRequest::class,
      com.rankquantity.voyager.api.GetGroupResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取群组动态
   * / 获取群组内的最新活动动态
   * / HTTP POST /common.TeamsAPI/GetGroupActives
   * / 请求体：GetGroupActivesRequest (JSON，包含群组ID和分页参数)
   * / 响应：GetGroupActivesResponse (JSON，返回群组活动列表)
   */
  override suspend fun getGroupActives(request: GetGroupActivesRequest, headers: Headers): ResponseMessage<GetGroupActivesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetGroupActives",
      com.rankquantity.voyager.api.GetGroupActivesRequest::class,
      com.rankquantity.voyager.api.GetGroupActivesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新群组信息
   * / 更新群组的基本信息，如名称、描述等
   * / HTTP POST /common.TeamsAPI/UpdateGroupInfo
   * / 请求体：UpdateGroupInfoRequest (JSON，包含群组ID和更新信息)
   * / 响应：UpdateGroupInfoResponse (JSON，返回更新后的群组信息)
   */
  override suspend fun updateGroupInfo(request: UpdateGroupInfoRequest, headers: Headers): ResponseMessage<UpdateGroupInfoResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateGroupInfo",
      com.rankquantity.voyager.api.UpdateGroupInfoRequest::class,
      com.rankquantity.voyager.api.UpdateGroupInfoResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  GetGroupProfile retrieves the group's profile information
   */
  override suspend fun getGroupProfile(request: GetGroupProfileRequest, headers: Headers): ResponseMessage<GetGroupProfileResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetGroupProfile",
      com.rankquantity.voyager.api.GetGroupProfileRequest::class,
      com.rankquantity.voyager.api.GetGroupProfileResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  UpdateGroupProfile updates the group's profile information
   */
  override suspend fun updateGroupProfile(request: UpdateGroupProfileRequest, headers: Headers): ResponseMessage<UpdateGroupProfileResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateGroupProfile",
      com.rankquantity.voyager.api.UpdateGroupProfileRequest::class,
      com.rankquantity.voyager.api.UpdateGroupProfileResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  DeleteGroup removes a group
   */
  override suspend fun deleteGroup(request: DeleteGroupRequest, headers: Headers): ResponseMessage<DeleteGroupResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/DeleteGroup",
      com.rankquantity.voyager.api.DeleteGroupRequest::class,
      com.rankquantity.voyager.api.DeleteGroupResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取群组成员列表
   * / 分页获取指定群组的所有成员用户列表
   * / HTTP POST /common.TeamsAPI/FetchGroupMembers
   * / 请求体：FetchGroupMembersRequest (JSON，包含群组ID和分页参数)
   * / 响应：FetchGroupMembersResponse (JSON，返回成员列表和总数)
   */
  override suspend fun fetchGroupMembers(request: FetchGroupMembersRequest, headers: Headers): ResponseMessage<FetchGroupMembersResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/FetchGroupMembers",
      com.rankquantity.voyager.api.FetchGroupMembersRequest::class,
      com.rankquantity.voyager.api.FetchGroupMembersResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 加入群组
   * / 用户申请加入指定群组，成为群组成员
   * / HTTP POST /common.TeamsAPI/JoinGroup
   * / 请求体：JoinGroupRequest (JSON，包含群组ID和用户ID)
   * / 响应：JoinGroupResponse (JSON)
   */
  override suspend fun joinGroup(request: JoinGroupRequest, headers: Headers): ResponseMessage<JoinGroupResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/JoinGroup",
      com.rankquantity.voyager.api.JoinGroupRequest::class,
      com.rankquantity.voyager.api.JoinGroupResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 离开群组
   * / 用户退出指定群组，解除成员关系
   * / HTTP POST /common.TeamsAPI/LeaveGroup
   * / 请求体：LeaveGroupRequest (JSON，包含群组ID和用户ID)
   * / 响应：LeaveGroupResponse (JSON)
   */
  override suspend fun leaveGroup(request: LeaveGroupRequest, headers: Headers): ResponseMessage<LeaveGroupResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/LeaveGroup",
      com.rankquantity.voyager.api.LeaveGroupRequest::class,
      com.rankquantity.voyager.api.LeaveGroupResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 创建故事
   * /
   * / 【功能说明】
   * / 创建一个新的故事，设置基本信息和初始配置
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/CreateStory
   * / - 请求体：CreateStoryRequest (JSON)
   * / - 响应：CreateStoryResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,              // &#91;必填&#93; 创建者用户ID
   * /   "group_id": 456,             // &#91;可选&#93; 所属群组ID
   * /   "title": "故事标题",         // &#91;必填&#93; 故事名称
   * /   "description": "故事简介",   // &#91;可选&#93; 故事描述
   * /   "cover": "封面URL",          // &#91;可选&#93; 封面图片
   * /   "is_public": true            // &#91;可选&#93; 是否公开，默认true
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - story: 创建的故事对象
   * / - story_id: 故事ID
   */
  override suspend fun createStory(request: CreateStoryRequest, headers: Headers): ResponseMessage<CreateStoryResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/CreateStory",
      com.rankquantity.voyager.api.CreateStoryRequest::class,
      com.rankquantity.voyager.api.CreateStoryResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事信息
   * /
   * / 【功能说明】
   * / 获取指定故事的详细信息，包括统计数据
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetStoryInfo
   * / - 请求体：GetStoryInfoRequest (JSON)
   * / - 响应：GetStoryInfoResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,     // &#91;必填&#93; 故事ID
   * /   "user_id": 456       // &#91;必填&#93; 请求用户ID（用于权限验证）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - story: 故事详细信息
   * / - stats: 统计数据（浏览、点赞、评论数等）
   */
  override suspend fun getStoryInfo(request: GetStoryInfoRequest, headers: Headers): ResponseMessage<GetStoryInfoResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryInfo",
      com.rankquantity.voyager.api.GetStoryInfoRequest::class,
      com.rankquantity.voyager.api.GetStoryInfoResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 渲染故事
   * /
   * / 【功能说明】
   * / 使用AI为故事生成内容、角色、场景等
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/RenderStory
   * / - 请求体：RenderStoryRequest (JSON)
   * / - 响应：RenderStoryResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,             // &#91;必填&#93; 故事ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "prompt": "渲染提示词",      // &#91;可选&#93; AI生成提示
   * /   "render_type": 1             // &#91;可选&#93; 渲染类型（1-完整，2-增量）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - render_id: 渲染任务ID
   * / - status: 任务状态
   */
  override suspend fun renderStory(request: RenderStoryRequest, headers: Headers): ResponseMessage<RenderStoryResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/RenderStory",
      com.rankquantity.voyager.api.RenderStoryRequest::class,
      com.rankquantity.voyager.api.RenderStoryResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事
   * /
   * / 【功能说明】
   * / 更新故事的基本信息和配置
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UpdateStory
   * / - 请求体：UpdateStoryRequest (JSON)
   * / - 响应：UpdateStoryResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,             // &#91;必填&#93; 故事ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "title": "新标题",           // &#91;可选&#93; 故事标题
   * /   "description": "新简介",     // &#91;可选&#93; 故事描述
   * /   "cover": "新封面URL",        // &#91;可选&#93; 封面图片
   * /   "is_public": true            // &#91;可选&#93; 公开状态
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - story: 更新后的故事信息
   */
  override suspend fun updateStory(request: UpdateStoryRequest, headers: Headers): ResponseMessage<UpdateStoryResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStory",
      com.rankquantity.voyager.api.UpdateStoryRequest::class,
      com.rankquantity.voyager.api.UpdateStoryResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 关注故事
   * /
   * / 【功能说明】
   * / 关注指定故事，接收该故事的更新通知
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/WatchStory
   * / - 请求体：WatchStoryRequest (JSON)
   * / - 响应：WatchStoryResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,     // &#91;必填&#93; 要关注的故事ID
   * /   "user_id": 456       // &#91;必填&#93; 用户ID
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - is_watching: 关注状态（true表示已关注）
   */
  override suspend fun watchStory(request: WatchStoryRequest, headers: Headers): ResponseMessage<WatchStoryResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/WatchStory",
      com.rankquantity.voyager.api.WatchStoryRequest::class,
      com.rankquantity.voyager.api.WatchStoryResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun unWatchStory(request: UnWatchStoryRequest, headers: Headers): ResponseMessage<UnWatchStoryResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UnWatchStory",
      com.rankquantity.voyager.api.UnWatchStoryRequest::class,
      com.rankquantity.voyager.api.UnWatchStoryResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 收藏故事
   * / 将故事添加到用户的个人收藏夹，方便后续查看
   * / HTTP POST /common.TeamsAPI/ArchiveStory
   * / 请求体：ArchiveStoryRequest (JSON，包含故事ID和用户ID)
   * / 响应：ArchiveStoryResponse (JSON)
   */
  override suspend fun archiveStory(request: ArchiveStoryRequest, headers: Headers): ResponseMessage<ArchiveStoryResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/ArchiveStory",
      com.rankquantity.voyager.api.ArchiveStoryRequest::class,
      com.rankquantity.voyager.api.ArchiveStoryResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 创建故事板
   * /
   * / 【功能说明】
   * / 在故事中创建新的故事板（分支剧情）
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/CreateStoryboard
   * / - 请求体：CreateStoryboardRequest (JSON)
   * / - 响应：CreateStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,             // &#91;必填&#93; 所属故事ID
   * /   "user_id": 456,              // &#91;必填&#93; 创建者用户ID
   * /   "parent_board_id": 789,      // &#91;可选&#93; 父故事板ID（分支时提供）
   * /   "title": "故事板标题",       // &#91;必填&#93; 故事板名称
   * /   "content": "剧情内容"        // &#91;可选&#93; 故事板内容
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - storyboard: 创建的故事板对象
   * / - storyboard_id: 故事板ID
   */
  override suspend fun createStoryboard(request: CreateStoryboardRequest, headers: Headers): ResponseMessage<CreateStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/CreateStoryboard",
      com.rankquantity.voyager.api.CreateStoryboardRequest::class,
      com.rankquantity.voyager.api.CreateStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事板
   * /
   * / 【功能说明】
   * / 获取指定故事板的详细信息和内容
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetStoryboard
   * / - 请求体：GetStoryboardRequest (JSON)
   * / - 响应：GetStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,    // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,          // &#91;必填&#93; 请求用户ID
   * /   "include_scenes": true   // &#91;可选&#93; 是否包含场景信息，默认false
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - storyboard: 故事板详细信息
   * / - scenes: 场景列表（如果 include_scenes=true）
   */
  override suspend fun getStoryboard(request: GetStoryboardRequest, headers: Headers): ResponseMessage<GetStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryboard",
      com.rankquantity.voyager.api.GetStoryboardRequest::class,
      com.rankquantity.voyager.api.GetStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 渲染故事板
   * /
   * / 【功能说明】
   * / 使用AI为故事板生成场景、对话和图片
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/RenderStoryboard
   * / - 请求体：RenderStoryboardRequest (JSON)
   * / - 响应：RenderStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,        // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "story_id": 789,             // &#91;必填&#93; 所属故事ID
   * /   "prompt": "渲染提示",        // &#91;可选&#93; AI生成提示词
   * /   "render_scenes": true,       // &#91;可选&#93; 是否渲染场景，默认true
   * /   "render_images": true        // &#91;可选&#93; 是否生成图片，默认true
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - render_id: 渲染任务ID
   * / - status: 渲染状态
   * / - progress: 渲染进度（0-100）
   */
  override suspend fun renderStoryboard(request: RenderStoryboardRequest, headers: Headers): ResponseMessage<RenderStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/RenderStoryboard",
      com.rankquantity.voyager.api.RenderStoryboardRequest::class,
      com.rankquantity.voyager.api.RenderStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 生成故事板文本
   * /
   * / 【功能说明】
   * / 使用AI为故事板生成文本内容（场景描述、对话等）
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GenStoryboardText
   * / - 请求体：GenStoryboardTextRequest (JSON)
   * / - 响应：GenStoryboardTextResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,        // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "prompt": "生成提示",        // &#91;可选&#93; AI生成提示词
   * /   "language": "zh-CN",         // &#91;可选&#93; 语言代码，默认zh-CN
   * /   "style": "现代",             // &#91;可选&#93; 写作风格
   * /   "length": "medium"           // &#91;可选&#93; 文本长度（short/medium/long）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - generated_text: 生成的文本内容
   * / - task_id: 生成任务ID
   */
  override suspend fun genStoryboardText(request: GenStoryboardTextRequest, headers: Headers): ResponseMessage<GenStoryboardTextResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GenStoryboardText",
      com.rankquantity.voyager.api.GenStoryboardTextRequest::class,
      com.rankquantity.voyager.api.GenStoryboardTextResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 生成故事板图片
   * /
   * / 【功能说明】
   * / 使用AI为故事板的场景生成配图
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GenStoryboardImages
   * / - 请求体：GenStoryboardImagesRequest (JSON)
   * / - 响应：GenStoryboardImagesResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,        // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "scene_ids": &#91;1, 2, 3&#93;,      // &#91;可选&#93; 要生成图片的场景ID列表
   * /   "style_id": 5,               // &#91;可选&#93; 图片风格ID
   * /   "quality": "high",           // &#91;可选&#93; 图片质量（low/medium/high）
   * /   "aspect_ratio": "16:9"       // &#91;可选&#93; 宽高比，默认16:9
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - task_ids: 图片生成任务ID列表
   * / - estimated_time: 预计完成时间（秒）
   */
  override suspend fun genStoryboardImages(request: GenStoryboardImagesRequest, headers: Headers): ResponseMessage<GenStoryboardImagesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GenStoryboardImages",
      com.rankquantity.voyager.api.GenStoryboardImagesRequest::class,
      com.rankquantity.voyager.api.GenStoryboardImagesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事板列表
   * /
   * / 【功能说明】
   * / 获取指定故事的所有故事板列表
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetStoryboards
   * / - 请求体：GetStoryboardsRequest (JSON)
   * / - 响应：GetStoryboardsResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,         // &#91;必填&#93; 故事ID
   * /   "user_id": 456,          // &#91;必填&#93; 用户ID
   * /   "status": 1,             // &#91;可选&#93; 状态筛选（0-全部，1-已发布，2-草稿）
   * /   "offset": 0,             // &#91;可选&#93; 分页偏移量，默认0
   * /   "page_size": 20          // &#91;可选&#93; 每页数量，默认20
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - storyboards: 故事板列表
   * / - total: 总数量
   * / - have_more: 是否有更多数据
   */
  override suspend fun getStoryboards(request: GetStoryboardsRequest, headers: Headers): ResponseMessage<GetStoryboardsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryboards",
      com.rankquantity.voyager.api.GetStoryboardsRequest::class,
      com.rankquantity.voyager.api.GetStoryboardsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 删除故事板
   * /
   * / 【功能说明】
   * / 删除指定的故事板
   * /
   * / 【删除规则】
   * / 1. 最后一个故事板可以被删除
   * / 2. 如果故事板是多分支之一则可以被删除
   * / 3. 有子分支的故事板不能直接删除
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/DelStoryboard
   * / - 请求体：DelStoryboardRequest (JSON)
   * / - 响应：DelStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,    // &#91;必填&#93; 要删除的故事板ID
   * /   "user_id": 456,          // &#91;必填&#93; 用户ID（权限验证）
   * /   "story_id": 789,         // &#91;必填&#93; 所属故事ID
   * /   "force": false           // &#91;可选&#93; 是否强制删除，默认false
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   */
  override suspend fun delStoryboard(request: DelStoryboardRequest, headers: Headers): ResponseMessage<DelStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/DelStoryboard",
      com.rankquantity.voyager.api.DelStoryboardRequest::class,
      com.rankquantity.voyager.api.DelStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 复制故事板（分叉）
   * /
   * / 【功能说明】
   * / 基于现有故事板创建分支版本，开启新的剧情线
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/ForkStoryboard
   * / - 请求体：ForkStoryboardRequest (JSON)
   * / - 响应：ForkStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "source_board_id": 123,      // &#91;必填&#93; 源故事板ID（要分叉的故事板）
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "story_id": 789,             // &#91;必填&#93; 所属故事ID
   * /   "new_title": "分支标题",     // &#91;可选&#93; 新故事板标题
   * /   "copy_content": true         // &#91;可选&#93; 是否复制内容，默认true
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - new_storyboard: 新创建的分支故事板
   * / - new_storyboard_id: 新故事板ID
   */
  override suspend fun forkStoryboard(request: ForkStoryboardRequest, headers: Headers): ResponseMessage<ForkStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/ForkStoryboard",
      com.rankquantity.voyager.api.ForkStoryboardRequest::class,
      com.rankquantity.voyager.api.ForkStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事板
   * /
   * / 【功能说明】
   * / 更新故事板的内容和配置信息
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UpdateStoryboard
   * / - 请求体：UpdateStoryboardRequest (JSON)
   * / - 响应：UpdateStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,        // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "title": "新标题",           // &#91;可选&#93; 故事板标题
   * /   "content": "新内容",         // &#91;可选&#93; 故事板内容
   * /   "status": 1                  // &#91;可选&#93; 状态（1-草稿，2-已发布）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - storyboard: 更新后的故事板信息
   */
  override suspend fun updateStoryboard(request: UpdateStoryboardRequest, headers: Headers): ResponseMessage<UpdateStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryboard",
      com.rankquantity.voyager.api.UpdateStoryboardRequest::class,
      com.rankquantity.voyager.api.UpdateStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 点赞故事板
   * /
   * / 【功能说明】
   * / 为故事板点赞，表达对内容的喜欢
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/LikeStoryboard
   * / - 请求体：LikeStoryboardRequest (JSON)
   * / - 响应：LikeStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,    // &#91;必填&#93; 故事板ID
   * /   "user_id": 456           // &#91;必填&#93; 点赞用户ID
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - like_count: 最新点赞总数
   */
  override suspend fun likeStoryboard(request: LikeStoryboardRequest, headers: Headers): ResponseMessage<LikeStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/LikeStoryboard",
      com.rankquantity.voyager.api.LikeStoryboardRequest::class,
      com.rankquantity.voyager.api.LikeStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 取消点赞故事板
   * /
   * / 【功能说明】
   * / 取消对故事板的点赞
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UnLikeStoryboard
   * / - 请求体：UnLikeStoryboardRequest (JSON)
   * / - 响应：UnLikeStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,    // &#91;必填&#93; 故事板ID
   * /   "user_id": 456           // &#91;必填&#93; 用户ID
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - like_count: 最新点赞总数
   */
  override suspend fun unLikeStoryboard(request: UnLikeStoryboardRequest, headers: Headers): ResponseMessage<UnLikeStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UnLikeStoryboard",
      com.rankquantity.voyager.api.UnLikeStoryboardRequest::class,
      com.rankquantity.voyager.api.UnLikeStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 分享故事板
   * /
   * / 【功能说明】
   * / 生成故事板的分享链接，便于在社交媒体传播
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/ShareStoryboard
   * / - 请求体：ShareStoryboardRequest (JSON)
   * / - 响应：ShareStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,        // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,              // &#91;必填&#93; 分享用户ID
   * /   "platform": "wechat",        // &#91;可选&#93; 分享平台（wechat/weibo/twitter等）
   * /   "include_images": true       // &#91;可选&#93; 是否包含图片预览，默认true
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - share_url: 分享链接URL
   * / - qr_code: 二维码图片URL（可选）
   * / - share_id: 分享记录ID
   */
  override suspend fun shareStoryboard(request: ShareStoryboardRequest, headers: Headers): ResponseMessage<ShareStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/ShareStoryboard",
      com.rankquantity.voyager.api.ShareStoryboardRequest::class,
      com.rankquantity.voyager.api.ShareStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取群组故事列表
   * /
   * / 【功能说明】
   * / 获取指定群组内的所有故事
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/FetchGroupStorys
   * / - 请求体：FetchGroupStorysRequest (JSON)
   * / - 响应：FetchGroupStorysResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "group_id": 123,         // &#91;必填&#93; 群组ID
   * /   "user_id": 456,          // &#91;必填&#93; 请求用户ID
   * /   "offset": 0,             // &#91;可选&#93; 分页偏移量，默认0
   * /   "page_size": 20,         // &#91;可选&#93; 每页数量，默认20
   * /   "status": 0              // &#91;可选&#93; 状态筛选（0-全部）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - stories: 故事列表
   * / - total: 总数量
   */
  override suspend fun fetchGroupStorys(request: FetchGroupStorysRequest, headers: Headers): ResponseMessage<FetchGroupStorysResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/FetchGroupStorys",
      com.rankquantity.voyager.api.FetchGroupStorysRequest::class,
      com.rankquantity.voyager.api.FetchGroupStorysResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 上传图片文件
   * /
   * / 【功能说明】
   * / 上传图片到服务器，支持多种图片格式
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UploadImageFile
   * / - 请求体：UploadImageRequest (JSON，使用 base64 编码的图片数据)
   * / - 响应：UploadImageResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "image_data": "base64编码的图片数据",  // &#91;必填&#93; 图片二进制数据（最大10MB）
   * /   "filename": "avatar.jpg",             // &#91;必填&#93; 文件名（含扩展名）
   * /   "content_type": "image/jpeg"          // &#91;必填&#93; MIME类型
   * / }
   * / ```
   * /
   * / 【支持的图片格式】
   * / - image/jpeg, image/jpg
   * / - image/png
   * / - image/gif
   * / - image/webp
   * / - image/bmp
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - url: 上传后的图片URL
   * / - file_id: 文件ID
   * / - size: 文件大小（字节）
   */
  override suspend fun uploadImageFile(request: UploadImageRequest, headers: Headers): ResponseMessage<UploadImageResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UploadImageFile",
      com.rankquantity.voyager.api.UploadImageRequest::class,
      com.rankquantity.voyager.api.UploadImageResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事渲染记录
   * /
   * / 【功能说明】
   * / 获取故事的所有AI渲染记录和历史
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/StoryRender/list
   * / - 请求体：GetStoryRenderRequest (JSON)
   * / - 响应：GetStoryRenderResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,             // &#91;必填&#93; 故事ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "render_status": 0,          // &#91;可选&#93; 渲染状态筛选（0-全部，1-进行中，2-完成，3-失败）
   * /   "render_type": 0,            // &#91;可选&#93; 渲染类型筛选（0-全部，1-角色，2-场景，3-文本）
   * /   "offset": 0,                 // &#91;可选&#93; 分页偏移量
   * /   "page_size": 20              // &#91;可选&#93; 每页数量
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - renders: 渲染记录列表
   * / - total: 总数量
   */
  override suspend fun getStoryRender(request: GetStoryRenderRequest, headers: Headers): ResponseMessage<GetStoryRenderResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryRender",
      com.rankquantity.voyager.api.GetStoryRenderRequest::class,
      com.rankquantity.voyager.api.GetStoryRenderResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事板渲染记录
   * /
   * / 【功能说明】
   * / 获取故事板的所有AI渲染记录和历史
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/StoryBoardRender/list
   * / - 请求体：GetStoryBoardRenderRequest (JSON)
   * / - 响应：GetStoryBoardRenderResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,        // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "render_status": 0,          // &#91;可选&#93; 渲染状态筛选
   * /   "render_type": 0,            // &#91;可选&#93; 渲染类型筛选
   * /   "offset": 0,                 // &#91;可选&#93; 分页偏移量
   * /   "page_size": 20              // &#91;可选&#93; 每页数量
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - renders: 渲染记录列表
   * / - total: 总数量
   */
  override suspend fun getStoryBoardRender(request: GetStoryBoardRenderRequest, headers: Headers): ResponseMessage<GetStoryBoardRenderResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryBoardRender",
      com.rankquantity.voyager.api.GetStoryBoardRenderRequest::class,
      com.rankquantity.voyager.api.GetStoryBoardRenderResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事贡献者列表
   * / 获取参与故事创作的所有贡献者，按贡献度排序
   * / HTTP POST /common.TeamsAPI/GetStoryContributors
   * / 请求体：GetStoryContributorsRequest (JSON，包含故事ID和分页参数)
   * / 响应：GetStoryContributorsResponse (JSON，返回贡献者列表和VIP等级信息)
   */
  override suspend fun getStoryContributors(request: GetStoryContributorsRequest, headers: Headers): ResponseMessage<GetStoryContributorsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryContributors",
      com.rankquantity.voyager.api.GetStoryContributorsRequest::class,
      com.rankquantity.voyager.api.GetStoryContributorsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 继续渲染故事
   * /
   * / 【功能说明】
   * / 在现有基础上继续使用AI生成故事内容
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/ContinueRenderStory
   * / - 请求体：ContinueRenderStoryRequest (JSON)
   * / - 响应：ContinueRenderStoryResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,             // &#91;必填&#93; 故事ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "last_board_id": 789,        // &#91;可选&#93; 上一个故事板ID
   * /   "continue_prompt": "继续...", // &#91;可选&#93; 继续的提示词
   * /   "generate_count": 3          // &#91;可选&#93; 生成场景数量，默认3
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - new_boards: 新生成的故事板列表
   * / - render_id: 渲染任务ID
   */
  override suspend fun continueRenderStory(request: ContinueRenderStoryRequest, headers: Headers): ResponseMessage<ContinueRenderStoryResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/ContinueRenderStory",
      com.rankquantity.voyager.api.ContinueRenderStoryRequest::class,
      com.rankquantity.voyager.api.ContinueRenderStoryResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  渲���故事角色
   */
  override suspend fun renderStoryRoles(request: RenderStoryRolesRequest, headers: Headers): ResponseMessage<RenderStoryRolesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/RenderStoryRoles",
      com.rankquantity.voyager.api.RenderStoryRolesRequest::class,
      com.rankquantity.voyager.api.RenderStoryRolesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事角色
   * /
   * / 【功能说明】
   * / 更新故事角色的基本信息
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UpdateStoryRole
   * / - 请求体：UpdateStoryRoleRequest (JSON)
   * / - 响应：UpdateStoryRoleResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "role_id": 123,              // &#91;必填&#93; 角色ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "name": "新角色名",          // &#91;可选&#93; 角色名称
   * /   "description": "角色描述",   // &#91;可选&#93; 角色描述
   * /   "avatar": "头像URL"          // &#91;可选&#93; 角色头像
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - role: 更新后的角色信息
   */
  override suspend fun updateStoryRole(request: UpdateStoryRoleRequest, headers: Headers): ResponseMessage<UpdateStoryRoleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryRole",
      com.rankquantity.voyager.api.UpdateStoryRoleRequest::class,
      com.rankquantity.voyager.api.UpdateStoryRoleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 渲染故事角色详情
   * /
   * / 【功能说明】
   * / 使用AI为角色生成详细的背景故事和性格特征
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/RenderStoryRoleDetail
   * / - 请求体：RenderStoryRoleDetailRequest (JSON)
   * / - 响应：RenderStoryRoleDetailResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "role_id": 123,              // &#91;必填&#93; 角色ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "story_id": 789,             // &#91;必填&#93; 所属故事ID
   * /   "detail_type": 1,            // &#91;可选&#93; 详情类型（1-完整，2-简要）
   * /   "prompt": "生成提示"         // &#91;可选&#93; AI生成提示词
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - character_detail: 角色详细信息对象
   * / - render_id: 渲染任务ID
   */
  override suspend fun renderStoryRoleDetail(request: RenderStoryRoleDetailRequest, headers: Headers): ResponseMessage<RenderStoryRoleDetailResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/RenderStoryRoleDetail",
      com.rankquantity.voyager.api.RenderStoryRoleDetailRequest::class,
      com.rankquantity.voyager.api.RenderStoryRoleDetailResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事角色列表
   * /
   * / 【功能说明】
   * / 获取指定故事的所有角色列表
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetStoryRoles
   * / - 请求体：GetStoryRolesRequest (JSON)
   * / - 响应：GetStoryRolesResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,         // &#91;必填&#93; 故事ID
   * /   "user_id": 456,          // &#91;必填&#93; 用户ID
   * /   "offset": 0,             // &#91;可选&#93; 分页偏移量，默认0
   * /   "page_size": 20,         // &#91;可选&#93; 每页数量，默认20
   * /   "include_detail": false  // &#91;可选&#93; 是否包含详细信息，默认false
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - roles: 角色列表
   * / - total: 总数量
   */
  override suspend fun getStoryRoles(request: GetStoryRolesRequest, headers: Headers): ResponseMessage<GetStoryRolesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryRoles",
      com.rankquantity.voyager.api.GetStoryRolesRequest::class,
      com.rankquantity.voyager.api.GetStoryRolesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事板角色列表
   * /
   * / 【功能说明】
   * / 获取指定故事板中出现的所有角色
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetStoryBoardRoles
   * / - 请求体：GetStoryBoardRolesRequest (JSON)
   * / - 响应：GetStoryBoardRolesResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,    // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,          // &#91;必填&#93; 用户ID
   * /   "story_id": 789          // &#91;必填&#93; 所属故事ID
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - roles: 角色列表
   * / - total: 角色总数
   */
  override suspend fun getStoryBoardRoles(request: GetStoryBoardRolesRequest, headers: Headers): ResponseMessage<GetStoryBoardRolesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryBoardRoles",
      com.rankquantity.voyager.api.GetStoryBoardRolesRequest::class,
      com.rankquantity.voyager.api.GetStoryBoardRolesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户资料
   * / 获取指定用户的详细个人资料信息
   * / HTTP POST /common.TeamsAPI/GetUserProfile
   * / 请求体：GetUserProfileRequest (JSON，包含用户ID)
   * / 响应：GetUserProfileResponse (JSON，返回用户完整资料)
   */
  override suspend fun getUserProfile(request: GetUserProfileRequest, headers: Headers): ResponseMessage<GetUserProfileResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetUserProfile",
      com.rankquantity.voyager.api.GetUserProfileRequest::class,
      com.rankquantity.voyager.api.GetUserProfileResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新用户资料
   * / 更新用户的个人资料信息，包括昵称、描述、位置等
   * / HTTP POST /common.TeamsAPI/UpdateUserProfile
   * / 请求体：UpdateUserProfileRequest (JSON，包含要更新的资料字段)
   * / 响应：UpdateUserProfileResponse (JSON)
   */
  override suspend fun updateUserProfile(request: UpdateUserProfileRequest, headers: Headers): ResponseMessage<UpdateUserProfileResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateUserProfile",
      com.rankquantity.voyager.api.UpdateUserProfileRequest::class,
      com.rankquantity.voyager.api.UpdateUserProfileResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新用户背景图片
   * / 更新用户个人主页的背景图片
   * / HTTP POST /common.TeamsAPI/UpdateUserBackgroundImage
   * / 请求体：UpdateUserBackgroundImageRequest (JSON，包含背景图片URL)
   * / 响应：UpdateUserBackgroundImageResponse (JSON)
   */
  override suspend fun updateUserBackgroundImage(request: UpdateUserBackgroundImageRequest, headers: Headers): ResponseMessage<UpdateUserBackgroundImageResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateUserBackgroundImage",
      com.rankquantity.voyager.api.UpdateUserBackgroundImageRequest::class,
      com.rankquantity.voyager.api.UpdateUserBackgroundImageResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 创建新的故事角色
   * / 在故事中创建一个新的角色，设置角色的基本信息
   * / HTTP POST /common.TeamsAPI/CreateStoryRole
   * / 请求体：CreateStoryRoleRequest (JSON，包含角色详细信息)
   * / 响应：CreateStoryRoleResponse (JSON)
   */
  override suspend fun createStoryRole(request: CreateStoryRoleRequest, headers: Headers): ResponseMessage<CreateStoryRoleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/CreateStoryRole",
      com.rankquantity.voyager.api.CreateStoryRoleRequest::class,
      com.rankquantity.voyager.api.CreateStoryRoleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取角色详情
   * / 获取故事角色的完整详细信息
   * / HTTP POST /common.TeamsAPI/GetStoryRoleDetail
   * / 请求体：GetStoryRoleDetailRequest (JSON，包含角色ID)
   * / 响应：GetStoryRoleDetailResponse (JSON，返回角色完整信息)
   */
  override suspend fun getStoryRoleDetail(request: GetStoryRoleDetailRequest, headers: Headers): ResponseMessage<GetStoryRoleDetailResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryRoleDetail",
      com.rankquantity.voyager.api.GetStoryRoleDetailRequest::class,
      com.rankquantity.voyager.api.GetStoryRoleDetailResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 渲染生成角色图片
   * / 使用AI为故事角色生成高质量的形象图片
   * / HTTP POST /common.TeamsAPI/RenderStoryRole
   * / 请求体：RenderStoryRoleRequest (JSON，包含渲染提示词和参考图片)
   * / 响应：RenderStoryRoleResponse (JSON，返回渲染详情和图片URL)
   */
  override suspend fun renderStoryRole(request: RenderStoryRoleRequest, headers: Headers): ResponseMessage<RenderStoryRoleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/RenderStoryRole",
      com.rankquantity.voyager.api.RenderStoryRoleRequest::class,
      com.rankquantity.voyager.api.RenderStoryRoleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 点赞故事
   * / 为故事点赞表示喜欢，增加故事人气
   * / HTTP POST /common.TeamsAPI/LikeStory
   * / 请求体：LikeStoryRequest (JSON，包含故事ID和用户ID)
   * / 响应：LikeStoryResponse (JSON)
   */
  override suspend fun likeStory(request: LikeStoryRequest, headers: Headers): ResponseMessage<LikeStoryResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/LikeStory",
      com.rankquantity.voyager.api.LikeStoryRequest::class,
      com.rankquantity.voyager.api.LikeStoryResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 取消点赞故事
   * / 取消对故事的点赞
   * / HTTP POST /common.TeamsAPI/UnLikeStory
   * / 请求体：UnLikeStoryRequest (JSON)
   * / 响应：UnLikeStoryResponse (JSON)
   */
  override suspend fun unLikeStory(request: UnLikeStoryRequest, headers: Headers): ResponseMessage<UnLikeStoryResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UnLikeStory",
      com.rankquantity.voyager.api.UnLikeStoryRequest::class,
      com.rankquantity.voyager.api.UnLikeStoryResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事板场景列表
   * /
   * / 【功能说明】
   * / 获取指定故事板的所有场景
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetStoryBoardSences
   * / - 请求体：GetStoryBoardSencesRequest (JSON)
   * / - 响应：GetStoryBoardSencesResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,    // &#91;必填&#93; 故事板ID
   * /   "user_id": 456           // &#91;必填&#93; 用户ID
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - scenes: 场景列表（按顺序排列）
   */
  override suspend fun getStoryBoardSences(request: GetStoryBoardSencesRequest, headers: Headers): ResponseMessage<GetStoryBoardSencesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryBoardSences",
      com.rankquantity.voyager.api.GetStoryBoardSencesRequest::class,
      com.rankquantity.voyager.api.GetStoryBoardSencesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 创建故事板场景
   * /
   * / 【功能说明】
   * / 在故事板中创建新的场景
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/CreateStoryBoardSence
   * / - 请求体：CreateStoryBoardSenceRequest (JSON)
   * / - 响应：CreateStoryBoardSenceResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,        // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "title": "场景标题",         // &#91;必填&#93; 场景名称
   * /   "description": "场景描述",   // &#91;必填&#93; 场景内容
   * /   "order": 1                   // &#91;可选&#93; 场景顺序
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - scene: 创建的场景对象
   * / - scene_id: 场景ID
   */
  override suspend fun createStoryBoardSence(request: CreateStoryBoardSenceRequest, headers: Headers): ResponseMessage<CreateStoryBoardSenceResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/CreateStoryBoardSence",
      com.rankquantity.voyager.api.CreateStoryBoardSenceRequest::class,
      com.rankquantity.voyager.api.CreateStoryBoardSenceResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事板场景
   * /
   * / 【功能说明】
   * / 更新场景的内容和配置
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UpdateStoryBoardSence
   * / - 请求体：UpdateStoryBoardSenceRequest (JSON)
   * / - 响应：UpdateStoryBoardSenceResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "scene_id": 123,             // &#91;必填&#93; 场景ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "title": "新标题",           // &#91;可选&#93; 场景标题
   * /   "description": "新描述",     // &#91;可选&#93; 场景描述
   * /   "image_url": "新图片URL"     // &#91;可选&#93; 场景图片
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - scene: 更新后的场景信息
   */
  override suspend fun updateStoryBoardSence(request: UpdateStoryBoardSenceRequest, headers: Headers): ResponseMessage<UpdateStoryBoardSenceResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryBoardSence",
      com.rankquantity.voyager.api.UpdateStoryBoardSenceRequest::class,
      com.rankquantity.voyager.api.UpdateStoryBoardSenceResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 删除故事板场景
   * /
   * / 【功能说明】
   * / 删除指定的故事板场景
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/DeleteStoryBoardSence
   * / - 请求体：DeleteStoryBoardSenceRequest (JSON)
   * / - 响应：DeleteStoryBoardSenceResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "scene_id": 123,         // &#91;必填&#93; 要删除的场景ID
   * /   "user_id": 456,          // &#91;必填&#93; 用户ID（权限验证）
   * /   "storyboard_id": 789     // &#91;必填&#93; 所属故事板ID
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   */
  override suspend fun deleteStoryBoardSence(request: DeleteStoryBoardSenceRequest, headers: Headers): ResponseMessage<DeleteStoryBoardSenceResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/DeleteStoryBoardSence",
      com.rankquantity.voyager.api.DeleteStoryBoardSenceRequest::class,
      com.rankquantity.voyager.api.DeleteStoryBoardSenceResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 渲染故事板指定场景
   * /
   * / 【功能说明】
   * / 使用AI为单个场景生成图片
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/RenderStoryBoardSence
   * / - 请求体：RenderStoryBoardSenceRequest (JSON)
   * / - 响应：RenderStoryBoardSenceResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "scene_id": 123,             // &#91;必填&#93; 场景ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "storyboard_id": 789,        // &#91;必填&#93; 所属故事板ID
   * /   "prompt": "渲染提示",        // &#91;可选&#93; AI生成提示词
   * /   "style_id": 5,               // &#91;可选&#93; 图片风格ID
   * /   "quality": "high"            // &#91;可选&#93; 图片质量
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - image_url: 生成的场景图片URL
   * / - task_id: 渲染任务ID
   */
  override suspend fun renderStoryBoardSence(request: RenderStoryBoardSenceRequest, headers: Headers): ResponseMessage<RenderStoryBoardSenceResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/RenderStoryBoardSence",
      com.rankquantity.voyager.api.RenderStoryBoardSenceRequest::class,
      com.rankquantity.voyager.api.RenderStoryBoardSenceResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 批量渲染故事板场景
   * /
   * / 【功能说明】
   * / 使用AI为故事板的所有场景批量生成图片
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/RenderStoryBoardSences
   * / - 请求体：RenderStoryBoardSencesRequest (JSON)
   * / - 响应：RenderStoryBoardSencesResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,        // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "scene_ids": &#91;1, 2, 3&#93;,      // &#91;可选&#93; 要渲染的场景ID列表（不提供则渲染全部）
   * /   "style_id": 5,               // &#91;可选&#93; 统一图片风格ID
   * /   "quality": "high"            // &#91;可选&#93; 图片质量
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - task_ids: 批量渲染任务ID列表
   * / - estimated_time: 预计完成时间（秒）
   */
  override suspend fun renderStoryBoardSences(request: RenderStoryBoardSencesRequest, headers: Headers): ResponseMessage<RenderStoryBoardSencesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/RenderStoryBoardSences",
      com.rankquantity.voyager.api.RenderStoryBoardSencesRequest::class,
      com.rankquantity.voyager.api.RenderStoryBoardSencesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取场景生成状态
   * /
   * / 【功能说明】
   * / 查询场景AI生成任务的实时状态和进度
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetStoryBoardSenceGenerate
   * / - 请求体：GetStoryBoardSenceGenerateRequest (JSON)
   * / - 响应：GetStoryBoardSenceGenerateResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "scene_id": 123,         // &#91;必填&#93; 场景ID
   * /   "user_id": 456,          // &#91;必填&#93; 用户ID
   * /   "task_id": "task_789"    // &#91;可选&#93; 任务ID（查询特定任务）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - status: 生成状态（0-队列中，1-生成中，2-完成，3-失败）
   * / - progress: 进度百分比（0-100）
   * / - result_url: 生成结果URL（完成时）
   */
  override suspend fun getStoryBoardSenceGenerate(request: GetStoryBoardSenceGenerateRequest, headers: Headers): ResponseMessage<GetStoryBoardSenceGenerateResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryBoardSenceGenerate",
      com.rankquantity.voyager.api.GetStoryBoardSenceGenerateRequest::class,
      com.rankquantity.voyager.api.GetStoryBoardSenceGenerateResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事板生成状态
   * /
   * / 【功能说明】
   * / 查询故事板整体AI生成任务的状态
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetStoryBoardGenerate
   * / - 请求体：GetStoryBoardGenerateRequest (JSON)
   * / - 响应：GetStoryBoardGenerateResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,    // &#91;必填&#93; 故事板ID
   * /   "user_id": 456,          // &#91;必填&#93; 用户ID
   * /   "task_id": "task_789"    // &#91;可选&#93; 任务ID
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - status: 整体生成状态
   * / - progress: 总体进度百分比
   * / - scene_status: 各场景的生成状态列表
   */
  override suspend fun getStoryBoardGenerate(request: GetStoryBoardGenerateRequest, headers: Headers): ResponseMessage<GetStoryBoardGenerateResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryBoardGenerate",
      com.rankquantity.voyager.api.GetStoryBoardGenerateRequest::class,
      com.rankquantity.voyager.api.GetStoryBoardGenerateResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 点赞故事角色
   * / 为故事角色点赞，表达对角色的喜爱
   * / HTTP POST /common.TeamsAPI/LikeStoryRole
   * / 请求体：LikeStoryRoleRequest (JSON，包含角色ID和用户ID)
   * / 响应：LikeStoryRoleResponse (JSON)
   */
  override suspend fun likeStoryRole(request: LikeStoryRoleRequest, headers: Headers): ResponseMessage<LikeStoryRoleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/LikeStoryRole",
      com.rankquantity.voyager.api.LikeStoryRoleRequest::class,
      com.rankquantity.voyager.api.LikeStoryRoleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 取消点赞故事角色
   * / 取消对故事角色的点赞
   * / HTTP POST /common.TeamsAPI/UnLikeStoryRole
   * / 请求体：UnLikeStoryRoleRequest (JSON)
   * / 响应：UnLikeStoryRoleResponse (JSON)
   */
  override suspend fun unLikeStoryRole(request: UnLikeStoryRoleRequest, headers: Headers): ResponseMessage<UnLikeStoryRoleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UnLikeStoryRole",
      com.rankquantity.voyager.api.UnLikeStoryRoleRequest::class,
      com.rankquantity.voyager.api.UnLikeStoryRoleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 关注故事角色
   * / 关注指定的故事角色，接收该角色的最新动态通知
   * / HTTP POST /common.TeamsAPI/FollowStoryRole
   * / 请求体：FollowStoryRoleRequest (JSON)
   * / 响应：FollowStoryRoleResponse (JSON)
   */
  override suspend fun followStoryRole(request: FollowStoryRoleRequest, headers: Headers): ResponseMessage<FollowStoryRoleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/FollowStoryRole",
      com.rankquantity.voyager.api.FollowStoryRoleRequest::class,
      com.rankquantity.voyager.api.FollowStoryRoleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 取消关注故事角色
   * / 取消对故事角色的关注，停止接收动态通知
   * / HTTP POST /common.TeamsAPI/UnFollowStoryRole
   * / 请求体：UnFollowStoryRoleRequest (JSON)
   * / 响应：UnFollowStoryRoleResponse (JSON)
   */
  override suspend fun unFollowStoryRole(request: UnFollowStoryRoleRequest, headers: Headers): ResponseMessage<UnFollowStoryRoleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UnFollowStoryRole",
      com.rankquantity.voyager.api.UnFollowStoryRoleRequest::class,
      com.rankquantity.voyager.api.UnFollowStoryRoleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 搜索故事
   * / 根据关键词搜索故事，支持全局搜索和群组内搜索
   * / HTTP POST /common.TeamsAPI/SearchStories
   * / 请求体：SearchStoriesRequest (JSON，包含关键词、范围和分页参数)
   * / 响应：SearchStoriesResponse (JSON，返回匹配的故事列表)
   */
  override suspend fun searchStories(request: SearchStoriesRequest, headers: Headers): ResponseMessage<SearchStoriesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/SearchStories",
      com.rankquantity.voyager.api.SearchStoriesRequest::class,
      com.rankquantity.voyager.api.SearchStoriesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 搜索群组
   * / 根据名称搜索群组，支持模糊搜索
   * / HTTP POST /common.TeamsAPI/SearchGroup
   * / 请求体：SearchGroupRequest (JSON，包含搜索关键词和范围)
   * / 响应：SearchGroupResponse (JSON，返回匹配的群组列表)
   */
  override suspend fun searchGroup(request: SearchGroupRequest, headers: Headers): ResponseMessage<SearchGroupResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/SearchGroup",
      com.rankquantity.voyager.api.SearchGroupRequest::class,
      com.rankquantity.voyager.api.SearchGroupResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 搜索故事角色
   * / 根据关键词搜索故事角色，支持在故事内或全局搜索
   * / HTTP POST /common.TeamsAPI/SearchRoles
   * / 请求体：SearchRolesRequest (JSON，包含关键词、范围和分页参数)
   * / 响应：SearchRolesResponse (JSON，返回匹配的角色列表)
   */
  override suspend fun searchRoles(request: SearchRolesRequest, headers: Headers): ResponseMessage<SearchRolesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/SearchRoles",
      com.rankquantity.voyager.api.SearchRolesRequest::class,
      com.rankquantity.voyager.api.SearchRolesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 恢复故事板状态
   * / 从草稿或历史版本恢复故事板到指定状态
   * / HTTP POST /common.TeamsAPI/RestoreStoryboard
   * / 请求体：RestoreStoryboardRequest (JSON，包含故事板ID和版本信息)
   * / 响应：RestoreStoryboardResponse (JSON，返回恢复后的完整故事板数据)
   */
  override suspend fun restoreStoryboard(request: RestoreStoryboardRequest, headers: Headers): ResponseMessage<RestoreStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/RestoreStoryboard",
      com.rankquantity.voyager.api.RestoreStoryboardRequest::class,
      com.rankquantity.voyager.api.RestoreStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  获取用户创建的故事板
   */
  override suspend fun getUserCreatedStoryboards(request: GetUserCreatedStoryboardsRequest, headers: Headers): ResponseMessage<GetUserCreatedStoryboardsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetUserCreatedStoryboards",
      com.rankquantity.voyager.api.GetUserCreatedStoryboardsRequest::class,
      com.rankquantity.voyager.api.GetUserCreatedStoryboardsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  获取用户创建的角色
   */
  override suspend fun getUserCreatedRoles(request: GetUserCreatedRolesRequest, headers: Headers): ResponseMessage<GetUserCreatedRolesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetUserCreatedRoles",
      com.rankquantity.voyager.api.GetUserCreatedRolesRequest::class,
      com.rankquantity.voyager.api.GetUserCreatedRolesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  获取角色参与的故事板
   */
  override suspend fun getStoryRoleStoryboards(request: GetStoryRoleStoryboardsRequest, headers: Headers): ResponseMessage<GetStoryRoleStoryboardsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryRoleStoryboards",
      com.rankquantity.voyager.api.GetStoryRoleStoryboardsRequest::class,
      com.rankquantity.voyager.api.GetStoryRoleStoryboardsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  获取角色参与的故事
   */
  override suspend fun getStoryRoleStories(request: GetStoryRoleStoriesRequest, headers: Headers): ResponseMessage<GetStoryRoleStoriesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryRoleStories",
      com.rankquantity.voyager.api.GetStoryRoleStoriesRequest::class,
      com.rankquantity.voyager.api.GetStoryRoleStoriesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 创建与角色的对话
   * / 开始一个新的与故事角色的AI聊天会话
   * / HTTP POST /common.TeamsAPI/CreateStoryRoleChat
   * / 请求体：CreateStoryRoleChatRequest (JSON，包含角色ID和用户ID)
   * / 响应：CreateStoryRoleChatResponse (JSON，返回聊天上下文信息)
   */
  override suspend fun createStoryRoleChat(request: CreateStoryRoleChatRequest, headers: Headers): ResponseMessage<CreateStoryRoleChatResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/CreateStoryRoleChat",
      com.rankquantity.voyager.api.CreateStoryRoleChatRequest::class,
      com.rankquantity.voyager.api.CreateStoryRoleChatResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 与角色聊天
   * / 发送消息并获取AI角色的智能回复
   * / HTTP POST /common.TeamsAPI/ChatWithStoryRole
   * / 请求体：ChatWithStoryRoleRequest (JSON，包含历史消息列表)
   * / 响应：ChatWithStoryRoleResponse (JSON，返回角色的回复消息)
   */
  override suspend fun chatWithStoryRole(request: ChatWithStoryRoleRequest, headers: Headers): ResponseMessage<ChatWithStoryRoleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/ChatWithStoryRole",
      com.rankquantity.voyager.api.ChatWithStoryRoleRequest::class,
      com.rankquantity.voyager.api.ChatWithStoryRoleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新角色头像
   * / 更新故事角色的头像图片
   * / HTTP POST /common.TeamsAPI/UpdateStoryRoleAvator
   * / 请求体：UpdateStoryRoleAvatorRequest (JSON，包含新头像URL)
   * / 响应：UpdateStoryRoleAvatorResponse (JSON)
   */
  override suspend fun updateStoryRoleAvator(request: UpdateStoryRoleAvatorRequest, headers: Headers): ResponseMessage<UpdateStoryRoleAvatorResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryRoleAvator",
      com.rankquantity.voyager.api.UpdateStoryRoleAvatorRequest::class,
      com.rankquantity.voyager.api.UpdateStoryRoleAvatorResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新角色详情
   * / 更新故事角色的完整信息，包括描述、性格、能力等
   * / HTTP POST /common.TeamsAPI/UpdateStoryRoleDetail
   * / 请求体：UpdateStoryRoleDetailRequest (JSON，包含角色完整信息)
   * / 响应：UpdateStoryRoleDetailResponse (JSON)
   */
  override suspend fun updateStoryRoleDetail(request: UpdateStoryRoleDetailRequest, headers: Headers): ResponseMessage<UpdateStoryRoleDetailResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryRoleDetail",
      com.rankquantity.voyager.api.UpdateStoryRoleDetailRequest::class,
      com.rankquantity.voyager.api.UpdateStoryRoleDetailResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户的对话列表
   * / 获取用户与各个角色的所有聊天会话列表
   * / HTTP POST /common.TeamsAPI/GetUserWithRoleChatList
   * / 请求体：GetUserWithRoleChatListRequest (JSON，包含用户ID和分页参数)
   * / 响应：GetUserWithRoleChatListResponse (JSON，返回聊天会话列表)
   */
  override suspend fun getUserWithRoleChatList(request: GetUserWithRoleChatListRequest, headers: Headers): ResponseMessage<GetUserWithRoleChatListResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetUserWithRoleChatList",
      com.rankquantity.voyager.api.GetUserWithRoleChatListRequest::class,
      com.rankquantity.voyager.api.GetUserWithRoleChatListResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户与角色的对话
   * / 获取用户与指定角色的完整聊天记录
   * / HTTP POST /common.TeamsAPI/GetUserChatWithRole
   * / 请求体：GetUserChatWithRoleRequest (JSON，包含角色ID和用户ID)
   * / 响应：GetUserChatWithRoleResponse (JSON，返回聊天消息列表和上下文)
   */
  override suspend fun getUserChatWithRole(request: GetUserChatWithRoleRequest, headers: Headers): ResponseMessage<GetUserChatWithRoleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetUserChatWithRole",
      com.rankquantity.voyager.api.GetUserChatWithRoleRequest::class,
      com.rankquantity.voyager.api.GetUserChatWithRoleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户的消息列表
   * / 获取指定聊天会话中的所有消息记录
   * / HTTP POST /common.TeamsAPI/GetUserChatMessages
   * / 请求体：GetUserChatMessagesRequest (JSON，包含聊天ID和时间戳)
   * / 响应：GetUserChatMessagesResponse (JSON，返回消息列表)
   */
  override suspend fun getUserChatMessages(request: GetUserChatMessagesRequest, headers: Headers): ResponseMessage<GetUserChatMessagesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetUserChatMessages",
      com.rankquantity.voyager.api.GetUserChatMessagesRequest::class,
      com.rankquantity.voyager.api.GetUserChatMessagesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取活动动态列表
   * / 获取用户、群组或故事的最新活动动态信息
   * / HTTP POST /common.TeamsAPI/FetchActives
   * / 请求体：FetchActivesRequest (JSON，包含筛选条件和分页参数)
   * / 响应：FetchActivesResponse (JSON，返回活动动态列表)
   */
  override suspend fun fetchActives(request: FetchActivesRequest, headers: Headers): ResponseMessage<FetchActivesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/FetchActives",
      com.rankquantity.voyager.api.FetchActivesRequest::class,
      com.rankquantity.voyager.api.FetchActivesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取下一个故事板
   * /
   * / 【功能说明】
   * / 根据当前故事板ID获取后续的故事板，支持多分支场景
   * /
   * / 【多分支说明】
   * / - 如果有多个分叉，则返回所有分支
   * / - 返回is_multi_branch标记位，标识是否为多分支
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetNextStoryboards
   * / - 请求体：GetNextStoryboardRequest (JSON)
   * / - 响应：GetNextStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,        // &#91;必填&#93; 当前故事板ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "story_id": 789,             // &#91;必填&#93; 所属故事ID
   * /   "is_multi_branch": false,    // &#91;可选&#93; 是否多分支模式
   * /   "offset": 0,                 // &#91;可选&#93; 分页偏移量（多分支时使用）
   * /   "page_size": 20,             // &#91;可选&#93; 每页数量
   * /   "order_by": "CREATE_TIME"    // &#91;可选&#93; 排序方式
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - storyboards: 后续故事板列表
   * / - is_multi_branch: 是否为多分支
   * / - total: 分支总数
   */
  override suspend fun getNextStoryboard(request: GetNextStoryboardRequest, headers: Headers): ResponseMessage<GetNextStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetNextStoryboard",
      com.rankquantity.voyager.api.GetNextStoryboardRequest::class,
      com.rankquantity.voyager.api.GetNextStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 持续渲染故事角色
   * /
   * / 【功能说明】
   * / 持续优化和迭代角色形象，直到达到满意效果
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/RenderStoryRoleContinuously
   * / - 请求体：RenderStoryRoleContinuouslyRequest (JSON)
   * / - 响应：RenderStoryRoleContinuouslyResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "role_id": 123,              // &#91;必填&#93; 角色ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "story_id": 789,             // &#91;必填&#93; 故事ID
   * /   "prompt": "优化提示",        // &#91;可选&#93; 优化方向的提示词
   * /   "reference_image": "参考图"  // &#91;可选&#93; 参考图片URL
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - detail: 渲染详情对象
   * / - have_more: 是否还有更多迭代空间
   */
  override suspend fun renderStoryRoleContinuously(request: RenderStoryRoleContinuouslyRequest, headers: Headers): ResponseMessage<RenderStoryRoleContinuouslyResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/RenderStoryRoleContinuously",
      com.rankquantity.voyager.api.RenderStoryRoleContinuouslyRequest::class,
      com.rankquantity.voyager.api.RenderStoryRoleContinuouslyResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 发布故事板
   * /
   * / 【功能说明】
   * / 将草稿状态的故事板正式发布，其他用户可见
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/PublishStoryboard
   * / - 请求体：PublishStoryboardRequest (JSON)
   * / - 响应：PublishStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,    // &#91;必填&#93; 要发布的故事板ID
   * /   "user_id": 456           // &#91;必填&#93; 用户ID（仅所有者可发布）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - publish_time: 发布时间戳
   */
  override suspend fun publishStoryboard(request: PublishStoryboardRequest, headers: Headers): ResponseMessage<PublishStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/PublishStoryboard",
      com.rankquantity.voyager.api.PublishStoryboardRequest::class,
      com.rankquantity.voyager.api.PublishStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 撤销故事板
   * /
   * / 【功能说明】
   * / 撤销已发布的故事板，保留文本但隐藏场景和图片
   * /
   * / 【撤销规则】
   * / - 保留AI生成的故事板文本内容，用来给用户展示
   * / - 场景和图片不会展示，以保证故事的连贯性
   * / - 可以重新编辑后再次发布
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/CancelStoryboard
   * / - 请求体：CancelStoryboardRequest (JSON)
   * / - 响应：CancelStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "storyboard_id": 123,    // &#91;必填&#93; 要撤销的故事板ID
   * /   "user_id": 456           // &#91;必填&#93; 用户ID（仅所有者可撤销）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   */
  override suspend fun cancelStoryboard(request: CancelStoryboardRequest, headers: Headers): ResponseMessage<CancelStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/CancelStoryboard",
      com.rankquantity.voyager.api.CancelStoryboardRequest::class,
      com.rankquantity.voyager.api.CancelStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户关注故事的活跃故事板
   * /
   * / 【功能说明】
   * / 获取用户关注的故事中最近活跃的故事板
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetUserWatchStoryActiveStoryBoards
   * / - 请求体：GetUserWatchStoryActiveStoryBoardsRequest (JSON)
   * / - 响应：GetUserWatchStoryActiveStoryBoardsResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,              // &#91;必填&#93; 用户ID
   * /   "story_id": 456,             // &#91;必填&#93; 故事ID
   * /   "offset": 0,                 // &#91;可选&#93; 分页偏移量
   * /   "page_size": 20,             // &#91;可选&#93; 每页数量
   * /   "filter": "published"        // &#91;可选&#93; 筛选条件（published/draft）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - storyboards: 活跃故事板列表
   * / - total: 总数量
   */
  override suspend fun getUserWatchStoryActiveStoryBoards(request: GetUserWatchStoryActiveStoryBoardsRequest, headers: Headers): ResponseMessage<GetUserWatchStoryActiveStoryBoardsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetUserWatchStoryActiveStoryBoards",
      com.rankquantity.voyager.api.GetUserWatchStoryActiveStoryBoardsRequest::class,
      com.rankquantity.voyager.api.GetUserWatchStoryActiveStoryBoardsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户关注角色的活跃故事板
   * /
   * / 【功能说明】
   * / 获取用户关注的角色参与的最近活跃故事板
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetUserWatchRoleActiveStoryBoards
   * / - 请求体：GetUserWatchRoleActiveStoryBoardsRequest (JSON)
   * / - 响应：GetUserWatchRoleActiveStoryBoardsResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,              // &#91;必填&#93; 用户ID
   * /   "role_id": 456,              // &#91;必填&#93; 角色ID
   * /   "offset": 0,                 // &#91;可选&#93; 分页偏移量
   * /   "page_size": 20,             // &#91;可选&#93; 每页数量
   * /   "filter": "all"              // &#91;可选&#93; 筛选条件
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - storyboards: 活跃故事板列表
   * / - total: 总数量
   */
  override suspend fun getUserWatchRoleActiveStoryBoards(request: GetUserWatchRoleActiveStoryBoardsRequest, headers: Headers): ResponseMessage<GetUserWatchRoleActiveStoryBoardsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetUserWatchRoleActiveStoryBoards",
      com.rankquantity.voyager.api.GetUserWatchRoleActiveStoryBoardsRequest::class,
      com.rankquantity.voyager.api.GetUserWatchRoleActiveStoryBoardsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取未发布故事板列表
   * /
   * / 【功能说明】
   * / 获取用户所有未发布（草稿）状态的故事板
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GetUnPublishStoryboard
   * / - 请求体：GetUnPublishStoryboardRequest (JSON)
   * / - 响应：GetUnPublishStoryboardResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,          // &#91;必填&#93; 用户ID
   * /   "offset": 0,             // &#91;可选&#93; 分页偏移量
   * /   "page_size": 20          // &#91;可选&#93; 每页数量
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - storyboardactives: 草稿故事板列表
   * / - total: 总数量
   */
  override suspend fun getUnPublishStoryboard(request: GetUnPublishStoryboardRequest, headers: Headers): ResponseMessage<GetUnPublishStoryboardResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetUnPublishStoryboard",
      com.rankquantity.voyager.api.GetUnPublishStoryboardRequest::class,
      com.rankquantity.voyager.api.GetUnPublishStoryboardResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 生成角色描述
   * /
   * / 【功能说明】
   * / 使用AI为角色生成详细的背景描述和性格特征
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GenerateRoleDescription
   * / - 请求体：GenerateRoleDescriptionRequest (JSON)
   * / - 响应：GenerateRoleDescriptionResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,             // &#91;必填&#93; 故事ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "role_id": 789,              // &#91;必填&#93; 角色ID
   * /   "description": "基础描述"    // &#91;可选&#93; 基础描述（AI会扩展）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - character_detail: AI生成的详细角色描述
   */
  override suspend fun generateRoleDescription(request: GenerateRoleDescriptionRequest, headers: Headers): ResponseMessage<GenerateRoleDescriptionResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GenerateRoleDescription",
      com.rankquantity.voyager.api.GenerateRoleDescriptionRequest::class,
      com.rankquantity.voyager.api.GenerateRoleDescriptionResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新角色描述
   * /
   * / 【功能说明】
   * / 更新角色的文本描述信息
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UpdateRoleDescription
   * / - 请求体：UpdateRoleDescriptionRequest (JSON)
   * / - 响应：UpdateRoleDescriptionResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,              // &#91;必填&#93; 用户ID
   * /   "role_id": 456,              // &#91;必填&#93; 角色ID
   * /   "description": "新的描述"    // &#91;必填&#93; 新的角色描述（最大2000字符）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   */
  override suspend fun updateRoleDescription(request: UpdateRoleDescriptionRequest, headers: Headers): ResponseMessage<UpdateRoleDescriptionResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateRoleDescription",
      com.rankquantity.voyager.api.UpdateRoleDescriptionRequest::class,
      com.rankquantity.voyager.api.UpdateRoleDescriptionResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 生成角色提示词
   * /
   * / 【功能说明】
   * / 使用AI为角色生成优化的图片生成提示词
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GenerateRolePrompt
   * / - 请求体：GenerateRolePromptRequest (JSON)
   * / - 响应：GenerateRolePromptResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,             // &#91;必填&#93; 故事ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "role_id": 789,              // &#91;必填&#93; 角色ID
   * /   "prompt": "基础提示词"       // &#91;可选&#93; 基础提示词（AI会优化）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - prompt: AI生成的优化提示词
   */
  override suspend fun generateRolePrompt(request: GenerateRolePromptRequest, headers: Headers): ResponseMessage<GenerateRolePromptResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GenerateRolePrompt",
      com.rankquantity.voyager.api.GenerateRolePromptRequest::class,
      com.rankquantity.voyager.api.GenerateRolePromptResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新角色提示词
   * /
   * / 【功能说明】
   * / 更新角色的AI图片生成提示词
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UpdateRolePrompt
   * / - 请求体：UpdateRolePromptRequest (JSON)
   * / - 响应：UpdateRolePromptResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "user_id": 123,              // &#91;必填&#93; 用户ID
   * /   "role_id": 456,              // &#91;必填&#93; 角色ID
   * /   "prompt": "新提示词"         // &#91;必填&#93; 新的提示词（最大2000字符）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   */
  override suspend fun updateRolePrompt(request: UpdateRolePromptRequest, headers: Headers): ResponseMessage<UpdateRolePromptResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateRolePrompt",
      com.rankquantity.voyager.api.UpdateRolePromptRequest::class,
      com.rankquantity.voyager.api.UpdateRolePromptResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 创建故事评论
   * / 在故事下发表新的评论，支持富文本内容
   * / HTTP POST /common.TeamsAPI/CreateStoryComment
   * / 请求体：CreateStoryCommentRequest (JSON，包含故事ID和评论内容)
   * / 响应：CreateStoryCommentResponse (JSON，返回创建的评论信息)
   */
  override suspend fun createStoryComment(request: CreateStoryCommentRequest, headers: Headers): ResponseMessage<CreateStoryCommentResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/CreateStoryComment",
      com.rankquantity.voyager.api.CreateStoryCommentRequest::class,
      com.rankquantity.voyager.api.CreateStoryCommentResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事评论列表
   * / 分页获取指定故事的所有评论
   * / HTTP POST /common.TeamsAPI/GetStoryComments
   * / 请求体：GetStoryCommentsRequest (JSON，包含故事ID和分页参数)
   * / 响应：GetStoryCommentsResponse (JSON，返回评论列表和分页信息)
   */
  override suspend fun getStoryComments(request: GetStoryCommentsRequest, headers: Headers): ResponseMessage<GetStoryCommentsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryComments",
      com.rankquantity.voyager.api.GetStoryCommentsRequest::class,
      com.rankquantity.voyager.api.GetStoryCommentsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 删除故事评论
   * / 删除指定的故事评论，仅评论作者或管理员可删除
   * / HTTP POST /common.TeamsAPI/DeleteStoryComment
   * / 请求体：DeleteStoryCommentRequest (JSON)
   * / 响应：DeleteStoryCommentResponse (JSON)
   */
  override suspend fun deleteStoryComment(request: DeleteStoryCommentRequest, headers: Headers): ResponseMessage<DeleteStoryCommentResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/DeleteStoryComment",
      com.rankquantity.voyager.api.DeleteStoryCommentRequest::class,
      com.rankquantity.voyager.api.DeleteStoryCommentResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事评论回复列表
   * / 获取指定评论的所有回复
   * / HTTP POST /common.TeamsAPI/GetStoryCommentReplies
   * / 请求体：GetStoryCommentRepliesRequest (JSON，包含评论ID和分页参数)
   * / 响应：GetStoryCommentRepliesResponse (JSON，返回回复列表)
   */
  override suspend fun getStoryCommentReplies(request: GetStoryCommentRepliesRequest, headers: Headers): ResponseMessage<GetStoryCommentRepliesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryCommentReplies",
      com.rankquantity.voyager.api.GetStoryCommentRepliesRequest::class,
      com.rankquantity.voyager.api.GetStoryCommentRepliesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 创建故事评论回复
   * / 回复指定的故事评论
   * / HTTP POST /common.TeamsAPI/CreateStoryCommentReply
   * / 请求体：CreateStoryCommentReplyRequest (JSON，包含评论ID和回复内容)
   * / 响应：CreateStoryCommentReplyResponse (JSON，返回创建的回复信息)
   */
  override suspend fun createStoryCommentReply(request: CreateStoryCommentReplyRequest, headers: Headers): ResponseMessage<CreateStoryCommentReplyResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/CreateStoryCommentReply",
      com.rankquantity.voyager.api.CreateStoryCommentReplyRequest::class,
      com.rankquantity.voyager.api.CreateStoryCommentReplyResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 删除故事评论回复
   * / 删除指定的评论回复，仅回复作者或管理员可删除
   * / HTTP POST /common.TeamsAPI/DeleteStoryCommentReply
   * / 请求体：DeleteStoryCommentReplyRequest (JSON)
   * / 响应：DeleteStoryCommentReplyResponse (JSON)
   */
  override suspend fun deleteStoryCommentReply(request: DeleteStoryCommentReplyRequest, headers: Headers): ResponseMessage<DeleteStoryCommentReplyResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/DeleteStoryCommentReply",
      com.rankquantity.voyager.api.DeleteStoryCommentReplyRequest::class,
      com.rankquantity.voyager.api.DeleteStoryCommentReplyResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  获取故事板评论
   */
  override suspend fun getStoryBoardComments(request: GetStoryBoardCommentsRequest, headers: Headers): ResponseMessage<GetStoryBoardCommentsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryBoardComments",
      com.rankquantity.voyager.api.GetStoryBoardCommentsRequest::class,
      com.rankquantity.voyager.api.GetStoryBoardCommentsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  创建故事板评论
   */
  override suspend fun createStoryBoardComment(request: CreateStoryBoardCommentRequest, headers: Headers): ResponseMessage<CreateStoryBoardCommentResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/CreateStoryBoardComment",
      com.rankquantity.voyager.api.CreateStoryBoardCommentRequest::class,
      com.rankquantity.voyager.api.CreateStoryBoardCommentResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  删除故事板评论
   */
  override suspend fun deleteStoryBoardComment(request: DeleteStoryBoardCommentRequest, headers: Headers): ResponseMessage<DeleteStoryBoardCommentResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/DeleteStoryBoardComment",
      com.rankquantity.voyager.api.DeleteStoryBoardCommentRequest::class,
      com.rankquantity.voyager.api.DeleteStoryBoardCommentResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  获取故事板评论回复
   */
  override suspend fun getStoryBoardCommentReplies(request: GetStoryBoardCommentRepliesRequest, headers: Headers): ResponseMessage<GetStoryBoardCommentRepliesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryBoardCommentReplies",
      com.rankquantity.voyager.api.GetStoryBoardCommentRepliesRequest::class,
      com.rankquantity.voyager.api.GetStoryBoardCommentRepliesResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  点赞故事评论
   */
  override suspend fun likeComment(request: LikeCommentRequest, headers: Headers): ResponseMessage<LikeCommentResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/LikeComment",
      com.rankquantity.voyager.api.LikeCommentRequest::class,
      com.rankquantity.voyager.api.LikeCommentResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  取消点赞故事评论
   */
  override suspend fun dislikeComment(request: DislikeCommentRequest, headers: Headers): ResponseMessage<DislikeCommentResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/DislikeComment",
      com.rankquantity.voyager.api.DislikeCommentRequest::class,
      com.rankquantity.voyager.api.DislikeCommentResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事角色列表
   * / 获取指定故事的所有角色列表，支持搜索和筛选
   * / HTTP POST /common.TeamsAPI/GetStoryRoleList
   * / 请求体：GetStoryRoleListRequest (JSON，包含故事ID、搜索关键词和分页参数)
   * / 响应：GetStoryRoleListResponse (JSON，返回角色列表和总数)
   */
  override suspend fun getStoryRoleList(request: GetStoryRoleListRequest, headers: Headers): ResponseMessage<GetStoryRoleListResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryRoleList",
      com.rankquantity.voyager.api.GetStoryRoleListRequest::class,
      com.rankquantity.voyager.api.GetStoryRoleListResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取热门故事
   * / 获取指定时间段内最热门的故事列表，按热度排序
   * / HTTP POST /common.TeamsAPI/TrendingStory
   * / 请求体：TrendingStoryRequest (JSON，包含时间范围和分页参数)
   * / 响应：TrendingStoryResponse (JSON，返回热门故事列表)
   */
  override suspend fun trendingStory(request: TrendingStoryRequest, headers: Headers): ResponseMessage<TrendingStoryResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/TrendingStory",
      com.rankquantity.voyager.api.TrendingStoryRequest::class,
      com.rankquantity.voyager.api.TrendingStoryResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取热门角色
   * / 获取指定时间段内最热门的故事角色列表，按人气排序
   * / HTTP POST /common.TeamsAPI/TrendingStoryRole
   * / 请求体：TrendingStoryRoleRequest (JSON，包含时间范围和分页参数)
   * / 响应：TrendingStoryRoleResponse (JSON，返回热门角色列表)
   */
  override suspend fun trendingStoryRole(request: TrendingStoryRoleRequest, headers: Headers): ResponseMessage<TrendingStoryRoleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/TrendingStoryRole",
      com.rankquantity.voyager.api.TrendingStoryRoleRequest::class,
      com.rankquantity.voyager.api.TrendingStoryRoleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 关注用户
   * / 关注另一个用户，建立关注关系并接收其动态
   * / HTTP POST /common.TeamsAPI/FollowUser
   * / 请求体：FollowUserRequest (JSON，包含被关注用户的ID)
   * / 响应：FollowUserResponse (JSON)
   */
  override suspend fun followUser(request: FollowUserRequest, headers: Headers): ResponseMessage<FollowUserResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/FollowUser",
      com.rankquantity.voyager.api.FollowUserRequest::class,
      com.rankquantity.voyager.api.FollowUserResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 取消关注用户
   * / 取消对另一个用户的关注，停止接收其动态
   * / HTTP POST /common.TeamsAPI/UnfollowUser
   * / 请求体：UnfollowUserRequest (JSON)
   * / 响应：UnfollowUserResponse (JSON)
   */
  override suspend fun unfollowUser(request: UnfollowUserRequest, headers: Headers): ResponseMessage<UnfollowUserResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UnfollowUser",
      com.rankquantity.voyager.api.UnfollowUserRequest::class,
      com.rankquantity.voyager.api.UnfollowUserResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户关注列表
   * / 获取用户关注的所有其他用户列表
   * / HTTP POST /common.TeamsAPI/GetFollowList
   * / 请求体：GetFollowListRequest (JSON，包含用户ID和分页参数)
   * / 响应：GetFollowListResponse (JSON，返回关注的用户列表)
   */
  override suspend fun getFollowList(request: GetFollowListRequest, headers: Headers): ResponseMessage<GetFollowListResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetFollowList",
      com.rankquantity.voyager.api.GetFollowListRequest::class,
      com.rankquantity.voyager.api.GetFollowListResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户粉丝列表
   * / 获取关注该用户的所有粉丝列表
   * / HTTP POST /common.TeamsAPI/GetFollowerList
   * / 请求体：GetFollowerListRequest (JSON，包含用户ID和分页参数)
   * / 响应：GetFollowerListResponse (JSON，返回粉丝用户列表)
   */
  override suspend fun getFollowerList(request: GetFollowerListRequest, headers: Headers): ResponseMessage<GetFollowerListResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetFollowerList",
      com.rankquantity.voyager.api.GetFollowerListRequest::class,
      com.rankquantity.voyager.api.GetFollowerListResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事角色提示词
   * /
   * / 【功能说明】
   * / 更新角色AI生成时使用的提示词
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UpdateStoryRolePrompt
   * / - 请求体：UpdateStoryRolePromptRequest (JSON)
   * / - 响应：UpdateStoryRolePromptResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,             // &#91;必填&#93; 故事ID
   * /   "role_id": 456,              // &#91;必填&#93; 角色ID
   * /   "user_id": 789,              // &#91;必填&#93; 用户ID
   * /   "prompt": "新提示词"         // &#91;必填&#93; 新的提示词（最大2000字符）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   */
  override suspend fun updateStoryRolePrompt(request: UpdateStoryRolePromptRequest, headers: Headers): ResponseMessage<UpdateStoryRolePromptResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryRolePrompt",
      com.rankquantity.voyager.api.UpdateStoryRolePromptRequest::class,
      com.rankquantity.voyager.api.UpdateStoryRolePromptResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事角色描述详情
   * /
   * / 【功能说明】
   * / 更新角色的完整详细描述信息（CharacterDetail对象）
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UpdateStoryRoleDescriptionDetail
   * / - 请求体：UpdateStoryRoleDescriptionDetailRequest (JSON)
   * / - 响应：UpdateStoryRoleDescriptionDetailResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "story_id": 123,             // &#91;必填&#93; 故事ID
   * /   "role_id": 456,              // &#91;必填&#93; 角色ID
   * /   "user_id": 789,              // &#91;必填&#93; 用户ID
   * /   "character_detail": {        // &#91;必填&#93; 角色详细信息对象
   * /     "personality": "性格特征",
   * /     "background": "背景故事",
   * /     "abilities": "能力列表"
   * /   }
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   */
  override suspend fun updateStoryRoleDescriptionDetail(request: UpdateStoryRoleDescriptionDetailRequest, headers: Headers): ResponseMessage<UpdateStoryRoleDescriptionDetailResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryRoleDescriptionDetail",
      com.rankquantity.voyager.api.UpdateStoryRoleDescriptionDetailRequest::class,
      com.rankquantity.voyager.api.UpdateStoryRoleDescriptionDetailResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 查询任务状态
   * /
   * / 【功能说明】
   * / 查询AI生成任务的实时状态和进度
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/QueryTaskStatus
   * / - 请求体：QueryTaskStatusRequest (JSON)
   * / - 响应：QueryTaskStatusResponse (JSON)
   * /
   * / 【请求体字段】
   * / ```json
   * / {
   * /   "task_id": "task_12345",     // &#91;必填&#93; 任务ID
   * /   "user_id": 456,              // &#91;必填&#93; 用户ID
   * /   "task_type": 1               // &#91;可选&#93; 任务类型（1-图片，2-视频，3-文本）
   * / }
   * / ```
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - status: 任务状态（0-队列中，1-进行中，2-完成，3-失败）
   * / - progress: 进度百分比（0-100）
   * / - result_data: 任务结果数据（完成时）
   * / - error_message: 错误消息（失败时）
   */
  override suspend fun queryTaskStatus(request: QueryTaskStatusRequest, headers: Headers): ResponseMessage<QueryTaskStatusResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/QueryTaskStatus",
      com.rankquantity.voyager.api.QueryTaskStatusRequest::class,
      com.rankquantity.voyager.api.QueryTaskStatusResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事图片风格
   * / 获取故事可用的所有图片生成风格列表
   * / HTTP POST /common.TeamsAPI/GetStoryImageStyle
   * / 请求体：GetStoryImageStyleRequest (JSON，包含故事ID)
   * / 响应：GetStoryImageStyleResponse (JSON，返回风格列表和描述)
   */
  override suspend fun getStoryImageStyle(request: GetStoryImageStyleRequest, headers: Headers): ResponseMessage<GetStoryImageStyleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryImageStyle",
      com.rankquantity.voyager.api.GetStoryImageStyleRequest::class,
      com.rankquantity.voyager.api.GetStoryImageStyleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事图片风格
   * / 设置故事使用的图片生成风格
   * / HTTP POST /common.TeamsAPI/UpdateStoryImageStyle
   * / 请求体：UpdateStoryImageStyleRequest (JSON，包含风格ID和名称)
   * / 响应：UpdateStoryImageStyleResponse (JSON)
   */
  override suspend fun updateStoryImageStyle(request: UpdateStoryImageStyleRequest, headers: Headers): ResponseMessage<UpdateStoryImageStyleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryImageStyle",
      com.rankquantity.voyager.api.UpdateStoryImageStyleRequest::class,
      com.rankquantity.voyager.api.UpdateStoryImageStyleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事最大场景数
   * / 设置故事允许创建的最大场景数量限制
   * / HTTP POST /common.TeamsAPI/UpdateStorySenceMaxNumber
   * / 请求体：UpdateStorySenceMaxNumberRequest (JSON，包含最大场景数)
   * / 响应：UpdateStorySenceMaxNumberResponse (JSON)
   */
  override suspend fun updateStorySenceMaxNumber(request: UpdateStorySenceMaxNumberRequest, headers: Headers): ResponseMessage<UpdateStorySenceMaxNumberResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStorySenceMaxNumber",
      com.rankquantity.voyager.api.UpdateStorySenceMaxNumberRequest::class,
      com.rankquantity.voyager.api.UpdateStorySenceMaxNumberResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事头像
   * / 更新故事的头像图片，用于故事展示
   * / HTTP POST /common.TeamsAPI/UpdateStoryAvatar
   * / 请求体：UpdateStoryAvatarRequest (JSON，包含新头像URL)
   * / 响应：UpdateStoryAvatarResponse (JSON)
   */
  override suspend fun updateStoryAvatar(request: UpdateStoryAvatarRequest, headers: Headers): ResponseMessage<UpdateStoryAvatarResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryAvatar",
      com.rankquantity.voyager.api.UpdateStoryAvatarRequest::class,
      com.rankquantity.voyager.api.UpdateStoryAvatarResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事封面
   * / 更新故事的封面图片，支持使用AI生成的封面
   * / HTTP POST /common.TeamsAPI/UpdateStoryCover
   * / 请求体：UpdateStoryCoverRequest (JSON，包含封面URL和AI生成标志)
   * / 响应：UpdateStoryCoverResponse (JSON)
   */
  override suspend fun updateStoryCover(request: UpdateStoryCoverRequest, headers: Headers): ResponseMessage<UpdateStoryCoverResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryCover",
      com.rankquantity.voyager.api.UpdateStoryCoverRequest::class,
      com.rankquantity.voyager.api.UpdateStoryCoverResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 保存故事板草稿
   * / 将当前故事板保存为草稿，便于后续继续编辑
   * / HTTP POST /common.TeamsAPI/SaveStoryboardCraft
   * / 请求体：SaveStoryboardCraftRequest (JSON，包含故事板ID)
   * / 响应：SaveStoryboardCraftResponse (JSON)
   */
  override suspend fun saveStoryboardCraft(request: SaveStoryboardCraftRequest, headers: Headers): ResponseMessage<SaveStoryboardCraftResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/SaveStoryboardCraft",
      com.rankquantity.voyager.api.SaveStoryboardCraftRequest::class,
      com.rankquantity.voyager.api.SaveStoryboardCraftResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取故事参与者列表
   * / 获取参与故事创作和编辑的所有用户列表
   * / HTTP POST /common.TeamsAPI/GetStoryParticipants
   * / 请求体：GetStoryParticipantsRequest (JSON，包含故事ID和分页参数)
   * / 响应：GetStoryParticipantsResponse (JSON，返回参与者用户列表)
   */
  override suspend fun getStoryParticipants(request: GetStoryParticipantsRequest, headers: Headers): ResponseMessage<GetStoryParticipantsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryParticipants",
      com.rankquantity.voyager.api.GetStoryParticipantsRequest::class,
      com.rankquantity.voyager.api.GetStoryParticipantsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 生成故事场景视频
   * / 为指定的故事场景生成动态视频内容，支持自定义提示词和风格
   * / HTTP POST /common.TeamsAPI/GenerateStorySceneVideo
   * / 请求体：GenerateStorySceneVideoRequest (JSON，包含场景ID、提示词和token来源)
   * / 响应：GenerateStorySceneVideoResponse (JSON，返回生成任务详情和视频URL)
   */
  override suspend fun generateStorySceneVideo(request: GenerateStorySceneVideoRequest, headers: Headers): ResponseMessage<GenerateStorySceneVideoResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GenerateStorySceneVideo",
      com.rankquantity.voyager.api.GenerateStorySceneVideoRequest::class,
      com.rankquantity.voyager.api.GenerateStorySceneVideoResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 生成角色头像
   * / 使用AI为故事角色生成个性化头像图片
   * / HTTP POST /common.TeamsAPI/GenerateRoleAvatar
   * / 请求体：GenerateRoleAvatarRequest (JSON，包含角色描述和风格)
   * / 响应：GenerateRoleAvatarResponse (JSON，返回头像URL)
   */
  override suspend fun generateRoleAvatar(request: GenerateRoleAvatarRequest, headers: Headers): ResponseMessage<GenerateRoleAvatarResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GenerateRoleAvatar",
      com.rankquantity.voyager.api.GenerateRoleAvatarRequest::class,
      com.rankquantity.voyager.api.GenerateRoleAvatarResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 查询用户生成任务状态
   * / 获取用户的所有AI生成任务的实时状态和进度
   * / HTTP POST /common.TeamsAPI/QueryGenTaskStatus
   * / 请求体：FetchUserGenTaskStatusRequest (JSON)
   * / 响应：FetchUserGenTaskStatusResponse (JSON，包含任务列表和状态)
   */
  override suspend fun fetchUserGenTaskStatus(request: FetchUserGenTaskStatusRequest, headers: Headers): ResponseMessage<FetchUserGenTaskStatusResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/FetchUserGenTaskStatus",
      com.rankquantity.voyager.api.FetchUserGenTaskStatusRequest::class,
      com.rankquantity.voyager.api.FetchUserGenTaskStatusResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 生成角色海报图片
   * / 为故事角色生成精美的宣传海报
   * / HTTP POST /common.TeamsAPI/GenerateStoryRolePoster
   * / 请求体：GenerateStoryRolePosterRequest (JSON，包含生成参数和风格)
   * / 响应：GenerateStoryRolePosterResponse (JSON，返回海报URL和ID)
   */
  override suspend fun generateStoryRolePoster(request: GenerateStoryRolePosterRequest, headers: Headers): ResponseMessage<GenerateStoryRolePosterResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GenerateStoryRolePoster",
      com.rankquantity.voyager.api.GenerateStoryRolePosterRequest::class,
      com.rankquantity.voyager.api.GenerateStoryRolePosterResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新角色海报图片
   * / 更新角色海报的图片或可见性设置
   * / HTTP POST /common.TeamsAPI/UpdateStoryRolePoster
   * / 请求体：UpdateStoryRolePosterRequest (JSON)
   * / 响应：UpdateStoryRolePosterResponse (JSON)
   */
  override suspend fun updateStoryRolePoster(request: UpdateStoryRolePosterRequest, headers: Headers): ResponseMessage<UpdateStoryRolePosterResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryRolePoster",
      com.rankquantity.voyager.api.UpdateStoryRolePosterRequest::class,
      com.rankquantity.voyager.api.UpdateStoryRolePosterResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 点赞角色海报
   * / 为角色海报点赞，增加人气值
   * / HTTP POST /common.TeamsAPI/LikeStoryRolePoster
   * / 请求体：LikeStoryRolePosterRequest (JSON)
   * / 响应：LikeStoryRolePosterResponse (JSON，返回最新点赞数)
   */
  override suspend fun likeStoryRolePoster(request: LikeStoryRolePosterRequest, headers: Headers): ResponseMessage<LikeStoryRolePosterResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/LikeStoryRolePoster",
      com.rankquantity.voyager.api.LikeStoryRolePosterRequest::class,
      com.rankquantity.voyager.api.LikeStoryRolePosterResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 取消点赞角色海报
   * / 取消对角色海报的点赞
   * / HTTP POST /common.TeamsAPI/UnLikeStoryRolePoster
   * / 请求体：UnLikeStoryRolePosterRequest (JSON)
   * / 响应：UnLikeStoryRolePosterResponse (JSON，返回最新点赞数)
   */
  override suspend fun unLikeStoryRolePoster(request: UnLikeStoryRolePosterRequest, headers: Headers): ResponseMessage<UnLikeStoryRolePosterResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UnLikeStoryRolePoster",
      com.rankquantity.voyager.api.UnLikeStoryRolePosterRequest::class,
      com.rankquantity.voyager.api.UnLikeStoryRolePosterResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取角色海报列表
   * / 获取指定故事角色的所有海报图片列表
   * / HTTP POST /common.TeamsAPI/GetStoryRolePosterList
   * / 请求体：GetStoryRolePosterListRequest (JSON，包含分页参数)
   * / 响应：GetStoryRolePosterListResponse (JSON，返回海报列表)
   */
  override suspend fun getStoryRolePosterList(request: GetStoryRolePosterListRequest, headers: Headers): ResponseMessage<GetStoryRolePosterListResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryRolePosterList",
      com.rankquantity.voyager.api.GetStoryRolePosterListRequest::class,
      com.rankquantity.voyager.api.GetStoryRolePosterListResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 生成故事角色视频
   * / 为故事角色生成动态宣传视频
   * / HTTP POST /common.TeamsAPI/GenerateStoryRoleVideo
   * / 请求体：GenerateStoryRoleVideoRequest (JSON，包含视频参数和风格)
   * / 响应：GenerateStoryRoleVideoResponse (JSON，返回任务详情和视频URL)
   */
  override suspend fun generateStoryRoleVideo(request: GenerateStoryRoleVideoRequest, headers: Headers): ResponseMessage<GenerateStoryRoleVideoResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GenerateStoryRoleVideo",
      com.rankquantity.voyager.api.GenerateStoryRoleVideoRequest::class,
      com.rankquantity.voyager.api.GenerateStoryRoleVideoResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 更新故事板分叉权限
   * / 设置故事板是否允许其他用户进行分叉创建分支
   * / HTTP POST /common.TeamsAPI/UpdateStoryboardForkAble
   * / 请求体：UpdateStoryboardForkAbleRequest (JSON)
   * / 响应：UpdateStoryboardForkAbleResponse (JSON)
   */
  override suspend fun updateStoryboardForkAble(request: UpdateStoryboardForkAbleRequest, headers: Headers): ResponseMessage<UpdateStoryboardForkAbleResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UpdateStoryboardForkAble",
      com.rankquantity.voyager.api.UpdateStoryboardForkAbleRequest::class,
      com.rankquantity.voyager.api.UpdateStoryboardForkAbleResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户故事板草稿列表
   * / 分页获取指定用户的所有故事板草稿，支持按故事筛选
   * / HTTP POST /common.TeamsAPI/UserStoryboardDraftlist
   * / 请求体：UserStoryboardDraftlistRequest (JSON)
   * / 响应：UserStoryboardDraftlistResponse (JSON)
   */
  override suspend fun userStoryboardDraftlist(request: UserStoryboardDraftlistRequest, headers: Headers): ResponseMessage<UserStoryboardDraftlistResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UserStoryboardDraftlist",
      com.rankquantity.voyager.api.UserStoryboardDraftlistRequest::class,
      com.rankquantity.voyager.api.UserStoryboardDraftlistResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户故事板草稿详情
   * / 获取指定草稿的完整详细信息，包括内容、角色、场景等
   * / HTTP POST /common.TeamsAPI/UserStoryboardDraftDetail
   * / 请求体：UserDraftStoryboardDetailRequest (JSON)
   * / 响应：UserDraftStoryboardDetailResponse (JSON)
   */
  override suspend fun userStoryboardDraftDetail(request: UserDraftStoryboardDetailRequest, headers: Headers): ResponseMessage<UserDraftStoryboardDetailResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UserStoryboardDraftDetail",
      com.rankquantity.voyager.api.UserDraftStoryboardDetailRequest::class,
      com.rankquantity.voyager.api.UserDraftStoryboardDetailResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 删除用户故事板草稿
   * /
   * / 【功能说明】
   * / 删除指定用户的故事板草稿，释放存储空间
   * /
   * / 【权限要求】
   * / - 仅草稿所有者可以删除自己的草稿
   * / - 删除后不可恢复，请谨慎操作
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/DeleteStoryboardUserDraft
   * / - 请求体：DeleteUserStoryboardDraftRequest (JSON)
   * / - 响应：DeleteUserStoryboardDraftResponse (JSON)
   * /
   * / 【请求参数】
   * / - user_id: &#91;必填&#93; 用户ID（所有者ID）
   * / - draft_id: &#91;必填&#93; 草稿ID（要删除的草稿）
   * / - story_id: &#91;可选&#93; 故事ID（用于权限验证）
   * /
   * / 【响应字段】
   * / - code: 响应状态码（0表示成功）
   * / - message: 响应消息描述
   * /
   * / 【使用示例】
   * / ```json
   * / {
   * /   "user_id": 123,
   * /   "draft_id": 456,
   * /   "story_id": 789
   * / }
   * / ```
   */
  override suspend fun deleteUserStoryboardDraft(request: DeleteUserStoryboardDraftRequest, headers: Headers): ResponseMessage<DeleteUserStoryboardDraftResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/DeleteUserStoryboardDraft",
      com.rankquantity.voyager.api.DeleteUserStoryboardDraftRequest::class,
      com.rankquantity.voyager.api.DeleteUserStoryboardDraftResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取用户活跃热力图
   * /
   * / 【功能说明】
   * / 获取指定时间范围内用户的活跃度数据，以GitHub风格的热力图展示
   * /
   * / 【数据统计】
   * / - 统计用户的创建、更新、评论等所有活跃操作
   * / - 按天聚合活跃度数据
   * / - 自动计算热力等级（0-4级）
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/UserActiveHeatmap
   * / - 请求体：UserActiveHeamapRequest (JSON)
   * / - 响应：UserActiveHeamapResponse (JSON)
   * /
   * / 【请求参数】
   * / - user_id: &#91;必填&#93; 用户ID
   * / - start_time: &#91;必填&#93; 开始时间戳（秒）
   * / - end_time: &#91;必填&#93; 结束时间戳（秒）
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - data: 热力图数据数组（每天一条记录）
   * / - total_count: 时间范围内的总活跃次数
   * /
   * / 【使用场景】
   * / - 用户个人主页展示活跃度
   * / - 统计用户贡献度
   * / - 活跃度排行榜
   */
  override suspend fun userActiveHeatmap(request: UserActiveHeamapRequest, headers: Headers): ResponseMessage<UserActiveHeamapResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/UserActiveHeatmap",
      com.rankquantity.voyager.api.UserActiveHeamapRequest::class,
      com.rankquantity.voyager.api.UserActiveHeamapResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   * / 获取群组活跃热力图
   * /
   * / 【功能说明】
   * / 获取指定群组在指定时间范围内的活跃度数据，展示群组整体活跃情况
   * /
   * / 【数据统计】
   * / - 统计群组内所有成员的活跃操作
   * / - 包括故事创建、故事板发布、评论互动等
   * / - 返回活跃成员数量统计
   * /
   * / 【HTTP API】
   * / - 方法：POST
   * / - 路径：/common.TeamsAPI/GroupActiveHeatmap
   * / - 请求体：GroupActiveHeamapRequest (JSON)
   * / - 响应：GroupActiveHeamapResponse (JSON)
   * /
   * / 【请求参数】
   * / - group_id: &#91;必填&#93; 群组ID
   * / - user_id: &#91;必填&#93; 请求用户ID（用于权限验证）
   * / - start_time: &#91;必填&#93; 开始时间戳（秒）
   * / - end_time: &#91;必填&#93; 结束时间戳（秒）
   * /
   * / 【响应字段】
   * / - code: 响应状态码
   * / - message: 响应消息
   * / - data: 热力图数据数组
   * / - total_count: 群组总活跃次数
   * / - member_count: 参与活跃的成员数量
   * /
   * / 【权限要求】
   * / - 用户必须是群组成员才能查看
   * /
   * / 【使用场景】
   * / - 群组主页展示活跃度
   * / - 分析群组健康度
   * / - 活跃群组排行
   */
  override suspend fun groupActiveHeatmap(request: GroupActiveHeamapRequest, headers: Headers): ResponseMessage<GroupActiveHeamapResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GroupActiveHeatmap",
      com.rankquantity.voyager.api.GroupActiveHeamapRequest::class,
      com.rankquantity.voyager.api.GroupActiveHeamapResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun getStoryboardGenerationRoadmap(request: GetStoryboardGenerationRoadmapRequest, headers: Headers): ResponseMessage<GetStoryboardGenerationRoadmapResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "rankquantity.voyager.api.TeamsAPI/GetStoryboardGenerationRoadmap",
      com.rankquantity.voyager.api.GetStoryboardGenerationRoadmapRequest::class,
      com.rankquantity.voyager.api.GetStoryboardGenerationRoadmapResponse::class,
      StreamType.UNARY,
    ),
  )

}
