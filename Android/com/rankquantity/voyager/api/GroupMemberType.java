// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: group.proto
// Protobuf Java Version: 4.32.1

package com.rankquantity.voyager.api;

/**
 * <pre>
 * 群组成员类型枚举
 * </pre>
 *
 * Protobuf enum {@code rankquantity.voyager.api.GroupMemberType}
 */
@com.google.protobuf.Generated
public enum GroupMemberType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 未指定的普通成员类型（默认值）
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_NORMAL_UNSPECIFIED = 0;</code>
   */
  GROUP_MEMBER_TYPE_NORMAL_UNSPECIFIED(0),
  /**
   * <pre>
   * 群组创建者，拥有最高权限
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_CREATOR = 1;</code>
   */
  GROUP_MEMBER_TYPE_CREATOR(1),
  /**
   * <pre>
   * 群组管理员，负责群组维护和管理
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_MAINTAINER = 2;</code>
   */
  GROUP_MEMBER_TYPE_MAINTAINER(2),
  /**
   * <pre>
   * 贡献者，可以参与群组内容创作
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_CONTRIBUTOR = 3;</code>
   */
  GROUP_MEMBER_TYPE_CONTRIBUTOR(3),
  /**
   * <pre>
   * 普通成员，可以查看和参与群组活动
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_MEMBER = 4;</code>
   */
  GROUP_MEMBER_TYPE_MEMBER(4),
  /**
   * <pre>
   * 被禁言的成员，无法发言但可以查看内容
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_BANNED = 5;</code>
   */
  GROUP_MEMBER_TYPE_BANNED(5),
  /**
   * <pre>
   * 被邀请但尚未加入的成员
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_INVITED = 6;</code>
   */
  GROUP_MEMBER_TYPE_INVITED(6),
  /**
   * <pre>
   * 拒绝加入群组的用户
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_REJECTED = 7;</code>
   */
  GROUP_MEMBER_TYPE_REJECTED(7),
  /**
   * <pre>
   * 等待审核的成员申请
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_PENDING = 8;</code>
   */
  GROUP_MEMBER_TYPE_PENDING(8),
  /**
   * <pre>
   * 主动离开群组的成员
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_LEAVE = 9;</code>
   */
  GROUP_MEMBER_TYPE_LEAVE(9),
  /**
   * <pre>
   * 被踢出群组的成员
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_KICKED = 10;</code>
   */
  GROUP_MEMBER_TYPE_KICKED(10),
  /**
   * <pre>
   * 已删除的成员记录
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_DELETED = 11;</code>
   */
  GROUP_MEMBER_TYPE_DELETED(11),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 1,
      /* suffix= */ "",
      GroupMemberType.class.getName());
  }
  /**
   * <pre>
   * 未指定的普通成员类型（默认值）
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_NORMAL_UNSPECIFIED = 0;</code>
   */
  public static final int GROUP_MEMBER_TYPE_NORMAL_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * 群组创建者，拥有最高权限
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_CREATOR = 1;</code>
   */
  public static final int GROUP_MEMBER_TYPE_CREATOR_VALUE = 1;
  /**
   * <pre>
   * 群组管理员，负责群组维护和管理
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_MAINTAINER = 2;</code>
   */
  public static final int GROUP_MEMBER_TYPE_MAINTAINER_VALUE = 2;
  /**
   * <pre>
   * 贡献者，可以参与群组内容创作
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_CONTRIBUTOR = 3;</code>
   */
  public static final int GROUP_MEMBER_TYPE_CONTRIBUTOR_VALUE = 3;
  /**
   * <pre>
   * 普通成员，可以查看和参与群组活动
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_MEMBER = 4;</code>
   */
  public static final int GROUP_MEMBER_TYPE_MEMBER_VALUE = 4;
  /**
   * <pre>
   * 被禁言的成员，无法发言但可以查看内容
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_BANNED = 5;</code>
   */
  public static final int GROUP_MEMBER_TYPE_BANNED_VALUE = 5;
  /**
   * <pre>
   * 被邀请但尚未加入的成员
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_INVITED = 6;</code>
   */
  public static final int GROUP_MEMBER_TYPE_INVITED_VALUE = 6;
  /**
   * <pre>
   * 拒绝加入群组的用户
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_REJECTED = 7;</code>
   */
  public static final int GROUP_MEMBER_TYPE_REJECTED_VALUE = 7;
  /**
   * <pre>
   * 等待审核的成员申请
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_PENDING = 8;</code>
   */
  public static final int GROUP_MEMBER_TYPE_PENDING_VALUE = 8;
  /**
   * <pre>
   * 主动离开群组的成员
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_LEAVE = 9;</code>
   */
  public static final int GROUP_MEMBER_TYPE_LEAVE_VALUE = 9;
  /**
   * <pre>
   * 被踢出群组的成员
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_KICKED = 10;</code>
   */
  public static final int GROUP_MEMBER_TYPE_KICKED_VALUE = 10;
  /**
   * <pre>
   * 已删除的成员记录
   * </pre>
   *
   * <code>GROUP_MEMBER_TYPE_DELETED = 11;</code>
   */
  public static final int GROUP_MEMBER_TYPE_DELETED_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static GroupMemberType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static GroupMemberType forNumber(int value) {
    switch (value) {
      case 0: return GROUP_MEMBER_TYPE_NORMAL_UNSPECIFIED;
      case 1: return GROUP_MEMBER_TYPE_CREATOR;
      case 2: return GROUP_MEMBER_TYPE_MAINTAINER;
      case 3: return GROUP_MEMBER_TYPE_CONTRIBUTOR;
      case 4: return GROUP_MEMBER_TYPE_MEMBER;
      case 5: return GROUP_MEMBER_TYPE_BANNED;
      case 6: return GROUP_MEMBER_TYPE_INVITED;
      case 7: return GROUP_MEMBER_TYPE_REJECTED;
      case 8: return GROUP_MEMBER_TYPE_PENDING;
      case 9: return GROUP_MEMBER_TYPE_LEAVE;
      case 10: return GROUP_MEMBER_TYPE_KICKED;
      case 11: return GROUP_MEMBER_TYPE_DELETED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<GroupMemberType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      GroupMemberType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<GroupMemberType>() {
          public GroupMemberType findValueByNumber(int number) {
            return GroupMemberType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.rankquantity.voyager.api.GroupProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final GroupMemberType[] VALUES = values();

  public static GroupMemberType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private GroupMemberType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:rankquantity.voyager.api.GroupMemberType)
}

