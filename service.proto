
syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "protoc-gen-openapiv2/options/openapiv2.proto";

option go_package = "github.com/grapery/grapery/api";
package grapery.api;

enum ActiveType {
  NotSupport = 0;
  ShortWord = 1;
  LongWord = 2;
  Picture = 3;
  Video = 4;
  Music = 5;
}

enum AuthType {
  NotAuth = 0;
  WithPhone = 1;
  WithEmail = 2;
}

enum VisibleType {
  Normal = 0;
  Public = 1;
  Private = 2;
}

message UserInfo {
  uint64 userID = 1;
  string nickname = 2;
  string avatorUrl = 3;
  string email = 4;
  string location = 5;
  string desc = 6;
}

message GroupInfo {}

message ProjectInfo {}

message ItemInfo {}

message LoginRequest {
  AuthType loginType = 1;
  string account = 2;
  string password = 3;
}

message LoginResponse { uint64 userID = 1; }

message LogoutRequest { uint64 userID = 1; }

message LogoutResponse {}

message LogtouResponse {}

message RegisterRequest {
  AuthType loginType = 1;
  string account = 2;
  string password = 3;
}

message RegisterResponse {}

message ResetPasswordRequest {
  AuthType loginType = 1;
  string account = 2;
  string oldPwd = 3;
  string newPwd = 4;
}

message ResetPasswordResponse { uint64 userID = 1; }

message UserInfoRequest { uint64 userID = 1; }

message UserInfoResponse { UserInfo info = 1; }

message UserFollowingRequest { uint64 userID = 1; }

message UserFollowingResponse { repeated UserInfo list = 1; }

message UserFollowerRequest { uint64 userID = 1; }

message UserFollowerResponse { repeated UserInfo list = 1; }

message UserGroupRequest { uint64 userID = 1; }

message UserGroupResponse { repeated GroupInfo list = 1; }

message UserFollowingGroupRequest { uint64 userID = 1; }

message UserFollowingGroupResponse { repeated GroupInfo list = 1; }

message UserUpdateRequest {
  uint64 userID = 1;
  string nickname = 2;
  string avatorUrl = 3;
  string desc = 4;
}

message UserUpdateResponse {}

service Grapery {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post : "/v1/login"
      body : "*"
    };
  }
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post : "/v1/logout"
      body : "*"
    };
  }

  rpc UserInfo(UserInfoRequest) returns (UserInfoResponse) {
    option (google.api.http) = {
      post : "/v1/user/{userID}"
      body : "*"
    };
  }

  rpc userFollowing(UserFollowingRequest) returns (UserFollowingResponse) {
    option (google.api.http) = {
      post : "/v1/user/{userID}/following"
      body : "*"
    };
  };

  rpc UserFollower(UserFollowerRequest) returns (UserFollowerResponse) {
    option (google.api.http) = {
      post : "/v1/user/{userID}/follower"
      body : "*"
    };
  };
}
