syntax = "proto3";
package common;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "base.proto";
import "group.proto";
import "item.proto";
import "project.proto";
import "user.proto";
import "comment.proto";
import "story.proto";

message ActiveInfo {
  UserInfo user = 1;
  ActiveType active_type = 2;
  ItemInfo item_info = 3;
  ProjectInfo project_info = 4;
  GroupInfo group_info = 5;
  
  int64 Ctime = 19;
  int64 Mtime = 20;
}

message LoginRequest {
  string account = 1;
  string password = 2;
  int32 login_type =3;
}

message LoginResponse {
  int64 user_id = 1;
  string token = 2;
  int64 timestamp = 3;
  int64 expire_at = 4;
  int32 status = 5;
  string msg = 6;
}

message LogoutRequest {
  string token = 1;
  int64 user_id = 2;
}

message LogoutResponse {
  int32 code = 1;
  string msg = 2;
}

message RefreshTokenRequest {
  string token = 1;
}

message RefreshTokenResponse {
  string token = 1;
  int64 user_id = 2;
}

message RegisterRequest {
  string account = 1;
  string password = 2;
  string name = 3;
  string email = 4;
  string phone = 5;
}

message RegisterResponse { 
  int32 code = 1; 
  string msg = 2;
}

message ConfirmRequest { 
  string token = 1; 
}

message ConfirmResponse { 
  int32 status = 1; 
  int64 timestamp = 2;
}

message ResetPasswordRequest {
  string account = 1;
  string oldPwd = 2;
  string newPwd = 3;
}

message ResetPasswordResponse {
  string account = 1;
  int64 status = 2;
  int64 timestamp = 3;
}

// user ,group .project.item
message UserInfoRequest {
  int64 user_id = 1;
  string account = 2;
}

message UserInfoResponse { 
  UserInfo info = 1; 
}

message UpdateUserAvatorRequest {
  int64 user_id = 1;
  string avatar = 2;
}

message UpdateUserAvatorResponse { 
  UserInfo info = 1; 
  int32 status = 2;
}

message UserWatchingRequest { 
  int64 user_id = 1; 
  int64 time_stamp = 2;
  int32 offset = 3;
  int32 page_size = 4;
}

message UserWatchingResponse { 
  repeated ProjectInfo list = 1; 
  int32 offset = 2;
  int32 page_size = 3;
}

enum GroupType {
  PUBLIC = 0;
  PRIVATE = 1;
}

message UserGroupRequest { 
  int64 user_id = 1; 
  GroupType gtype = 2;
  int32 offset = 3;
  int32 page_size = 4;
}

message UserGroupResponse { 
  repeated GroupInfo list = 1; 
  int32 offset = 2;
  int32 page_size = 3;
}

message UserFollowingGroupRequest { 
  int64 user_id = 1; 
  int32 offset = 2;
  int32 page_size = 3;
}

message UserFollowingGroupResponse {
  int64 user_id = 1;
  repeated GroupInfo list = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message UserUpdateRequest {
  int64 user_id = 1;
  string nickname = 2;
  string avatar = 3;
  string desc = 4;
  map<string,string> data = 5;
}

message UserUpdateResponse {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message FetchUserActivesRequest {
  int64 user_id = 1;
  ActiveType atype = 2;
}
message FetchUserActivesResponse { 
  repeated ActiveInfo list = 1; 
  int64 timestamp = 2;
  int64 offset = 3;
  int64 page_size = 4;
}
message SearchUserRequest {
  string name = 1;
  int64 group_id = 2;
  bool is_fuzzy = 3;
  int64 offset = 7;
  int64 page_size = 8;
}

message SearchUserResponse {
  repeated UserInfo list = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message UserInitRequest { 
  int64 user_id = 1; 
  string deafault_group = 2;
}

message UserInitResponse {
  int64 user_id = 1;
  repeated GroupInfo list = 2;
}


message GetProjectRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
}

message GetProjectResponse { 
  ProjectInfo info = 1; 
}

message GetProjectListRequest {
  int64 group_id = 1;
  int64 user_id = 2;
  int64 offset = 5;
  int64 page_size = 6;
}

message GetProjectListResponse {
  repeated ProjectInfo List = 1;
  int64 offset = 3;
  int64 page_size = 4;
}

message CreateProjectRequest {
  int64 group_id = 1;
  string name = 2;
}
message CreateProjectResponse { ProjectInfo info = 1; }
message UpdateProjectRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
  ProjectInfo info = 4;
}
message UpdateProjectResponse { ProjectInfo info = 1; }
message DeleteProjectRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
}
message DeleteProjectResponse {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message GetWatchingProjectRequest {
  int64 user_id = 1;
  int64 offset = 3;
  int64 page_size = 4;
}

message GetWatchingProjectResponse {
  int64 user_id = 1;
  repeated ProjectInfo list = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message WatchProjectReqeust {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
}

message WatchProjectResponse {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message UnWatchProjectReqeust {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
}

message UnWatchProjectResponse {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message ExploreProjectsRequest {
  int64 user_id = 1;
  int64 group_id = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message ExploreProjectsResponse {
  int64 user_id = 1;
  repeated ProjectInfo list = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message SearchProjectRequest {
  int64 group_id = 1;
  string name = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message SearchProjectResponse {
  int64 group_id = 1;
  repeated ProjectInfo list = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message SearchAllProjectRequest {
  int64 user_id = 1;
  string name = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message SearchAllProjectResponse {
  int64 user_id = 1;
  repeated ProjectInfo list = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message GetProjectProfileRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
}

message GetProjectProfileResponse {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
  ProjectProfileInfo info = 4;
}

message UpdateProjectProfileRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
  ProjectProfileInfo info = 4;
}

message UpdateProjectProfileResponse {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message GetProjectItemsRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
  int64 offset = 4;
  int64 page_size = 5;
}

message GetProjectItemsResponse {
  repeated ItemInfo list = 1;
  int64 group_id = 2;
  int64 project_id = 3;
  int64 user_id = 4;
  int64 offset = 5;
  int64 page_size = 6;
}

message GetGroupItemsRequest {
  int64 group_id = 1;
  int64 user_id = 3;
  int64 offset = 4;
  int64 page_size = 5;
}

message GetGroupItemsResponse {
  repeated ItemInfo list = 1;
  int64 group_id = 2;
  int64 user_id = 3;
  int64 offset = 4;
  int64 page_size = 5;
}

message GetUserItemsRequest {
  int64 user_id = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message GetUserItemsResponse {
  repeated ItemInfo list = 1;
  int64 user_id = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message GetItemRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 item_id = 3;
  int64 user_id = 4;
}

message GetItemResponse { ItemInfo info = 1; }

message CreateItemRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  string name = 3;
  ActiveType atype = 4;
  int64 user_id = 5;
}

message CreateItemResponse { 
  int32 code = 1;
  string message = 2;
  message Data {
    ItemInfo info = 1; 
  } Data data = 3;
}

message UpdateItemRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 item_id = 3;
  ItemInfo info = 4;
  int64 user_id = 5;
}

message UpdateItemResponse { 
  int32 code = 1;
  string message = 2;
  message Data {
    ItemInfo info = 1; 
  } Data data = 3;
}

message DeleteItemRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 item_id = 3;
  int64 user_id = 4;
}

message DeleteItemResponse {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message LikeItemRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 item_id = 3;
  int64 user_id = 4;
  bool islike = 5;
}

message LikeItemResponse {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message CreateGroupReqeust {
  int64 user_id = 1;
  string name = 2;
  string description = 3;
  string avatar = 4;
}

message CreateGroupResponse { 
  int32 code = 1;
  string message = 2;
  message Data {
   GroupInfo info = 1; 
  } Data data = 3;
}

message GetGroupReqeust {
  int64 group_id = 1;
  int64 user_id = 2;
  string name = 3;
}
message GetGroupResponse { 
  int32 code = 1;
  string message = 2;
  message Data {
    GroupInfo info = 1; 
  } Data data = 3;
}

message GetGroupActivesRequest {
  int64 group_id = 1;
  ActiveType atype = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message GetGroupActivesResponse {
  int32 code = 1;
  string message = 2;
  message Data {
    repeated ActiveInfo list = 1;
    int64 offset = 2;
    int64 page_size = 3;
  } Data data = 3;
}

message UpdateGroupInfoRequest {
  int64 group_id = 1;
  GroupInfo info = 2;
}
message UpdateGroupInfoResponse { 
  int32 code = 1;
  string message = 2;
  message Data {
    GroupInfo info = 1; 
  } Data data = 3;
}
message DeleteGroupRequest {
  int64 group_id = 1;
  int64 user_id = 2;
}
message DeleteGroupResponse {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}
message FetchGroupMembersRequest {
  int64 group_id = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message FetchGroupMembersResponse {
  int32 code = 1;
  string message = 2;
  message Data {
    repeated UserInfo list = 1;
    int64 offset = 2;
    int64 total = 3;
  } Data data = 3;
}

message SearchGroupReqeust { string name = 1; }
message SearchGroupResponse {
  int32 code = 1;
  string message = 2;
  message Data {
    repeated GroupInfo list = 1;
    int64 offset = 2;
    int64 page_size = 3;
  } Data data = 3;
}

message FetchGroupProjectsReqeust {
  int64 group_id = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message FetchGroupProjectsResponse {
  int32 code = 1;
  string message = 2;
  message Data {
    repeated ProjectInfo list = 1;
    int64 offset = 2;
    int64 page_size = 3;
  } Data data = 3;
}

message JoinGroupRequest {
  int64 group_id = 1;
  int64 user_id = 2;
}

message JoinGroupResponse {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message LeaveGroupRequest {
  int64 group_id = 1;
  int64 user_id = 2;
}

message LeaveGroupResponse {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message DisscussParams {}

message CreateDisscussReq {}
message CreateDisscusResp {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message GetDisscusReq {}
message GetDisscusResp {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message Content {
  int32 Ctype = 1;
  int32 Length = 2;
  string Version = 3;
  string data = 4;
}

message CreateCommentReq {
  int32 group_id = 1;
  int32 item_id = 2;
  string content = 3;
  int64 user_id = 4;
}
message CreateCommentResp {
  int32 code = 1;
  string message = 2;
  message Data {
    int32 group_id = 1;
    int32 item_id = 2;
    int32 comment_id = 3;
    int64 user_id = 4;
    int64 timestamp = 5;
  } Data data = 3;
}

message GetItemsCommentReq {
  int32 group_id = 1;
  int32 item_id = 2;
  int32 offset = 3;
  int32 page_size = 4;
  int64 timestamp = 5;
  int64 user_id = 6;
  repeated string filter = 7;
  int32 order = 8;
}
message GetItemsCommentResp {
  int32 code = 1;
  string message = 2;
  message Data {
    repeated CommentInfo list = 1;
    int32 group_id = 2;
    int32 item_id = 3;
    int32 offset = 4;
    int32 page_size = 5;
    int64 timestamp = 6;
  } Data data = 3;
}


message GetUserCommentReq {}
message GetUserCommentResp {
  int32 code = 1;
  string message = 2;
  message Data {
  } Data data = 3;
}

message VersionRequest {}

message VersionResponse { 
  int32 code = 1;
  string message = 2;
  message Data {
    string version = 1; 
    string build_time = 2;
  } Data data = 3;
}

message AboutRequest {}

message AboutResponse { string content = 1; }

message ExploreRequest {}
message ExploreResponse {
  int32 code = 1;
  string message = 2;
  message Data {

  } Data data = 3;
}

message TrendingRequest {
  string area = 1;
  int64 start = 2;
  int64 end = 3;
}
message TrendingResponse {
  int32 code = 1;
  string message = 2;
  message Data {
    repeated ProjectInfo list = 1;
  } Data data = 3;
}

message GetProjectMembersRequest{
  int32 projectId = 1;
  int32 userId = 2;
}

message GetProjectMembersResponse{
  int32 code = 1;
  string message = 2;
  message Data {
    repeated UserInfo list = 1; 
    int32 total = 2;
    map<string,int64> role = 3;
  } Data data = 3;
}

message GetProjectWatcherReqeust{
  int32 projectId = 1;
}

message GetProjectWatcherResponse{
  int32 code = 1;
  string message = 2;
  message Data {
    repeated UserInfo list = 1; 
    int32 total = 2;
    map<int64,int64> timestamp = 3;
  } Data data = 3;
}

message UploadImageRequest {
  bytes image_data = 1;
  string filename = 2;
  string content_type = 3;
}

message UploadImageResponse {
  int32 code = 1;
  string message = 2;
  message Data {
    string file_id = 1;
    string url = 2;
  }Data data = 3;
}

message GetStoryContributorsRequest{
  int64 story_id = 1;
}

message StoryContributor{
  int64 user_id = 1;
  string username = 2;
  string avatar = 3;
  int64 viplevel = 4;
}

message GetStoryContributorsResponse{
  int32 code = 1;
  string message = 2;
  message Data {
    repeated StoryContributor list = 1;
  }Data data = 3;
}

message GetGroupProfileRequest{
  int64 group_id = 1;
  int64 user_id = 2;
}

message GetGroupProfileResponse{
  int32 code = 1;
  string message = 2;
  message Data {
    GroupProfileInfo info = 1;
  } Data data = 3;
}

message UpdateGroupProfileRequest{
  int64 group_id = 1;
  GroupProfileInfo info = 2;
  int64 user_id = 3;
}

message UpdateGroupProfileResponse{
  int32 code = 1;
  string message = 2;
}

service TeamsAPI {
  // 探索
  rpc Explore(ExploreRequest) returns (ExploreResponse) {
    option (google.api.http) = {
      get : "/common.TeamsAPI/Explore"
    };
  }
  // 趋势
  rpc Trending(TrendingRequest) returns (TrendingResponse) {
    option (google.api.http) = {
      get : "/common.TeamsAPI/Trending"
    };
  }

  // 版本
  rpc Version(VersionRequest) returns (VersionResponse) {
    option (google.api.http) = {
      get : "/common.TeamsAPI/Version"
    };
  }
  // 关于
  rpc About(AboutRequest) returns (AboutResponse) {
    option (google.api.http) = {
      get : "/common.TeamsAPI/About"
    };
  }

  // 登录
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/Login"
      body : "*"
    };
  }
  // 登出
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/Logout"
      body : "*"
    };
  }
  // 刷新登录
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/RefreshToken"
      body : "*"
    };
  }
  // 注册
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/Register"
      body : "*"
    };
  }
  // 重置密码
  rpc ResetPwd(ResetPasswordRequest) returns (ResetPasswordResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/ResetPwd"
      body : "*"
    };
  }

  // 用户初始化
  rpc UserInit(UserInitRequest) returns (UserInitResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UserInit"
      body : "*"
    };
  }

  // 用户信息
  rpc UserInfo(UserInfoRequest) returns (UserInfoResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UserInfo"
      body : "*"
    };
  }

  // 更新用户头像
  rpc UpdateUserAvator(UpdateUserAvatorRequest)
      returns (UpdateUserAvatorResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateUserAvator"
      body : "*"
    };
  }

  // 用户关注
  rpc UserWatching(UserWatchingRequest) returns (UserWatchingResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UserWatching"
      body : "*"
    };
  };

  // 用户关注组织
  rpc UserGroup(UserGroupRequest) returns (UserGroupResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UserGroup"
      body : "*"
    };
  }

  // 用户关注组织
  rpc UserFollowingGroup(UserFollowingGroupRequest)
      returns (UserFollowingGroupResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UserFollowingGroup"
      body : "*"
    };
  }

  // 更新用户信息
  rpc UserUpdate(UserUpdateRequest) returns (UserUpdateResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UserUpdate"
      body : "*"
    };
  }

  // 用户活跃
  rpc FetchUserActives(FetchUserActivesRequest)
      returns (FetchUserActivesResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/FetchUserActives"
      body : "*"
    };
  }

  // 搜索用户
  rpc SearchUser(SearchUserRequest) returns (SearchUserResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/SearchUser"
      body : "*"
    };
  }

  // 创建组织
  rpc CreateGroup(CreateGroupReqeust) returns (CreateGroupResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/CreateGroup"
      body : "*"
    };
  }

  // 获取组织
  rpc GetGroup(GetGroupReqeust) returns (GetGroupResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetGroup"
      body : "*"
    };
  }

  // 组织活跃
  rpc GetGroupActives(GetGroupActivesRequest)
      returns (GetGroupActivesResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetGroupActives"
      body : "*"
    };
  }
  // 更新组织信息
  rpc UpdateGroupInfo(UpdateGroupInfoRequest)
      returns (UpdateGroupInfoResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateGroupInfo"
      body : "*"
    };
  }

  // 获取组织信息
  rpc GetGroupProfile(GetGroupProfileRequest) returns (GetGroupProfileResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetGroupProfile"
      body : "*"
    };
  }

  // 更新组织信息
  rpc UpdateGroupProfile(UpdateGroupProfileRequest) returns (UpdateGroupProfileResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateGroupProfile"
      body : "*"
    };
  }
  

  // 删除组织
  rpc DeleteGroup(DeleteGroupRequest) returns (DeleteGroupResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/DeleteGroup"
      body : "*"
    };
  }

  // 获取组织成员
  rpc FetchGroupMembers(FetchGroupMembersRequest)
      returns (FetchGroupMembersResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/FetchGroupMembers"
      body : "*"
    };
  }

  // 搜索组织
  rpc SearchGroup(SearchGroupReqeust) returns (SearchGroupResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/SearchGroup"
      body : "*"
    };
  }

  // 获取组织项目
  rpc FetchGroupProjects(FetchGroupProjectsReqeust)
      returns (FetchGroupProjectsResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/FetchGroupProjects"
      body : "*"
    };
  }

  // 加入组织
  rpc JoinGroup(JoinGroupRequest) returns (JoinGroupResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/JoinGroup"
      body : "*"
    };
  }

  // 离开组织
  rpc LeaveGroup(LeaveGroupRequest) returns (LeaveGroupResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/LeaveGroup"
      body : "*"
    };
  }

  // 获取项目信息
  rpc GetProjectInfo(GetProjectRequest) returns (GetProjectResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetProjectInfo"
      body : "*"
    };
  }

  // 获取项目列表
  rpc GetProjectList(GetProjectListRequest) returns (GetProjectListResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetProjectList"
      body : "*"
    };
  }
  // 创建项目
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/CreateProject"
      body : "*"
    };
  }

  // 获取项目成员
  rpc GetProjectMembers(GetProjectMembersRequest) returns (GetProjectMembersResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetProjectMembers"
      body : "*"
    };
  }

  // 更新项目
  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateProject"
      body : "*"
    };
  }
  // 删除项目
  rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/DeleteProject"
      body : "*"
    };
  }
  // 获取项目信息
  rpc GetProjectProfile(GetProjectProfileRequest)
      returns (GetProjectProfileResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetProjectProfile"
      body : "*"
    };
  }
  // 更新项目信息
  rpc UpdateProjectProfile(UpdateProjectProfileRequest)
      returns (UpdateProjectProfileResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateProjectProfile"
      body : "*"
    };
  }

  // 关注项目
  rpc WatchProject(WatchProjectReqeust) returns (WatchProjectResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/WatchProject"
      body : "*"
    };
  }

  // 取消关注项目
  rpc UnWatchProject(UnWatchProjectReqeust) returns (UnWatchProjectResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UnWatchProject"
      body : "*"
    };
  }

  // 获取项目关注者
  rpc GetProjectWatcher(GetProjectWatcherReqeust) returns (GetProjectWatcherResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetProjectWatcher"
      body : "*"
    };
  }

  // 搜索组织项目
  rpc SearchGroupProject(SearchProjectRequest) returns (SearchProjectResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/SearchGroupProject"
      body : "*"
    };
  }

  // 搜索项目
  rpc SearchProject(SearchAllProjectRequest)
      returns (SearchAllProjectResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/SearchProject"
      body : "*"
    };
  }

  // 探索项目
  rpc ExploreProject(ExploreProjectsRequest) returns (ExploreProjectsResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/ExploreProject"
      body : "*"
    };
  }

  // 获取项目内容
  rpc GetProjectItems(GetProjectItemsRequest)
      returns (GetProjectItemsResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetProjectItems"
      body : "*"
    };
  }
  // 获取组织内容
  rpc GetGroupItems(GetGroupItemsRequest) returns (GetGroupItemsResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetGroupItems"
      body : "*"
    };
  }

  // 获取用户内容
  rpc GetUserItems(GetUserItemsRequest) returns (GetUserItemsResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetUserItems"
      body : "*"
    };
  }

  // 获取内容
  rpc GetItem(GetItemRequest) returns (GetItemResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetItem"
      body : "*"
    };
  }

  // 创建内容
  rpc CreateItem(CreateItemRequest) returns (CreateItemResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/CreateItem"
      body : "*"
    };
  }
  // 更新内容
  rpc UpdateItem(UpdateItemRequest) returns (UpdateItemResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateItem"
      body : "*"
    };
  }
  // 删除内容
  rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/DeleteItem"
      body : "*"
    };
  }
  // 喜欢内容
  rpc LikeItem(LikeItemRequest) returns (LikeItemResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/LikeItem"
      body : "*"
    };
  }

  // 创建评论
  rpc CreateComment(CreateCommentReq) returns (CreateCommentResp) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/CreateComment"
      body : "*"
    };
  }

  // 获取内容评论
  rpc GetItemComment(GetItemsCommentReq) returns (GetItemsCommentResp) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetItemComment"
      body : "*"
    };
  }


  // 创建故事
  rpc CreateStory(CreateStoryRequest) returns (CreateStoryResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/CreateStory"
      body : "*"
    };
  }

  // 获取故事信息
  rpc GetStoryInfo(GetStoryInfoRequest) returns (GetStoryInfoResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetStoryInfo"
      body : "*"
    };
  }

  // 渲染故事
  rpc RenderStory(RenderStoryRequest) returns (RenderStoryResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/RenderStory"
      body : "*"
    };
  }


  // 更新故事
  rpc UpdateStory(UpdateStoryRequest) returns (UpdateStoryResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateStory"
      body : "*"
    };
  }


  // 关注故事
  rpc WatchStory(WatchStoryRequest) returns (WatchStoryResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/WatchStory"
      body : "*"
    };
  }


  // 创建故事板
  rpc CreateStoryboard(CreateStoryboardRequest) returns (CreateStoryboardResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/CreateStoryboard"
      body : "*"
    };
  }

  // 获取故事板
  rpc GetStoryboard(GetStoryboardRequest) returns (GetStoryboardResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetStoryboard"
      body : "*"
    };
  }

  // 渲染故事板
  rpc RenderStoryboard(RenderStoryboardRequest) returns (RenderStoryboardResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/RenderStoryboard"
      body : "*"
    };
  }

  // 生成故事板文本
  rpc GenStoryboardText(GenStoryboardTextRequest) returns (GenStoryboardTextResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GenStoryboardText"
      body : "*"
    };
  }

  // 生成故事板图片
  rpc GenStoryboardImages(GenStoryboardImagesRequest) returns (GenStoryboardImagesResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GenStoryboardImages"
      body : "*"
    };
  }


  // 获取故事板
  rpc GetStoryboards(GetStoryboardsRequest) returns (GetStoryboardsResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetStoryboards"
      body : "*"
    };
  }


  // 删除故事板
  rpc DelStoryboard(DelStoryboardRequest) returns (DelStoryboardResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/DelStoryboard"
      body : "*"
    };
  }

  // 复制故事板
  rpc ForkStoryboard(ForkStoryboardRequest) returns (ForkStoryboardResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/ForkStoryboard"
      body : "*"
    };
  }


  // 更新故事板
  rpc UpdateStoryboard(UpdateStoryboardRequest) returns (UpdateStoryboardResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateStoryboard"
      body : "*"
    };
  }

  // 喜欢故事板
  rpc LikeStoryboard(LikeStoryboardRequest) returns (LikeStoryboardResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/LikeStoryboard"
      body : "*"
    };
  }
  // 取消喜欢故事板
  rpc UnLikeStoryboard(UnLikeStoryboardRequest) returns (UnLikeStoryboardResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UnLikeStoryboard"
      body : "*"
    };
  }

  // 分享故事板
  rpc ShareStoryboard(ShareStoryboardRequest) returns (ShareStoryboardResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/ShareStoryboard"
      body : "*"
    };
  }

  // 获取组织故事
  rpc FetchGroupStorys(FetchGroupStorysReqeust) returns (FetchGroupStorysResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/FetchGroupStorys"
      body : "*"
    };
  }
  // 用来上传文件的proto 接口
  rpc UploadImageFile(UploadImageRequest) returns (UploadImageResponse) {
    option (google.api.http) = {
      post: "/common.TeamsAPI/UploadImageFile"
      body: "*"
    };
  }
  // 用来获取Story的Render 的记录，需要 StoryID，Render status，RenderType
  rpc GetStoryRender(GetStoryRenderRequest) returns (GetStoryRenderResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/StoryRender/list"
      body : "*"
    };
  }
  // 用来获取StoryBoard的Render 的记录，需要 StoryBoardID，Render status，RenderType
  rpc GetStoryBoardRender(GetStoryBoardRenderRequest) returns (GetStoryBoardRenderResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/StoryBoardRender/list"
      body : "*"
    };
  }

  // 获取故事的贡献者
  rpc GetStoryContributors(GetStoryContributorsRequest) returns (GetStoryContributorsResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetStoryContributors"
      body : "*"
    };
  }
  // 继续渲染故事
  rpc ContinueRenderStory(ContinueRenderStoryRequest) returns (ContinueRenderStoryResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/ContinueRenderStory"
      body : "*"
    };
  }

  // 渲染故事角色
  rpc RenderStoryRoles(RenderStoryRolesRequest) returns (RenderStoryRolesResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/RenderStoryRoles"
      body : "*"
    };
  }

  // 更新 story role
  rpc UpdateStoryRole(UpdateStoryRoleRequest) returns (UpdateStoryRoleResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateStoryRole"
      body : "*"
    };
  }

  // 渲染故事角色详情
  rpc RenderStoryRoleDetail(RenderStoryRoleDetailRequest) returns (RenderStoryRoleDetailResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/RenderStoryRoleDetail"
      body : "*"
    };
  }

  // 获取 story roles 的列表
  rpc GetStoryRoles(GetStoryRolesRequest) returns (GetStoryRolesResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetStoryRoles"
      body : "*"
    };
  }

  // 获取 story board roles 的列表 
  rpc GetStoryBoardRoles(GetStoryBoardRolesRequest) returns (GetStoryBoardRolesResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetStoryBoardRoles"
      body : "*"
    };
  }

  // 获取用户的 profile
  rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetUserProfile"
      body : "*"
    };
  }

  // 更新用户的 profile
  rpc UpdateUserProfile(UpdateUserProfileRequest) returns (UpdateUserProfileResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateUserProfile"
      body : "*"
    };
  }

  // 创建新的故事角色
  rpc CreateStoryRole(CreateStoryRoleRequest) returns (CreateStoryRoleResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/CreateStoryRole"
      body : "*"
    };
  }

  // 获取角色详情
  rpc GetStoryRoleDetail(GetStoryRoleDetailRequest) returns (GetStoryRoleDetailResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetStoryRoleDetail"
      body : "*"
    };
  }

  // 生成角色的图片
  rpc RenderStoryRole(RenderStoryRoleRequest) returns (RenderStoryRoleResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/RenderStoryRole"
      body : "*"
    };
  }
  // // 标星故事
  // rpc StarStory(StarStoryRequest) returns (StarStoryResponse) {
  //   option (google.api.http) = {
  //     post : "/common.TeamsAPI/StarStory"
  //     body : "*"
  //   };
  // }

  // // 取消标星故事
  // rpc UnStarStory(UnStarStoryRequest) returns (UnStarStoryResponse) {
  //   option (google.api.http) = {
  //     post : "/common.TeamsAPI/UnStarStory"
  //     body : "*"
  //   };
  // }

  // 获取标星故事
  // rpc GetStarredStories(GetStarredStoriesRequest) returns (GetStarredStoriesResponse) {
  //   option (google.api.http) = {
  //     post : "/common.TeamsAPI/GetStarredStories"
  //     body : "*"
  //   };
  // }

  // 喜欢故事
  rpc LikeStory(LikeStoryRequest) returns (LikeStoryResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/LikeStory"
      body : "*"
    };
  }

  // 取消喜欢故事
  rpc UnLikeStory(UnLikeStoryRequest) returns (UnLikeStoryResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UnLikeStory"
      body : "*"
    };
  }

  // 获取故事板场景
  rpc GetStoryBoardSences(GetStoryBoardSencesRequest) returns (GetStoryBoardSencesResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetStoryBoardSences"
      body : "*"
    };
  }
  // 创建故事板场景
  rpc CreateStoryBoardSence(CreateStoryBoardSenceRequest) returns (CreateStoryBoardSenceResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/CreateStoryBoardSence"
      body : "*"
    };
  }
  // 更新故事板场景
  rpc UpdateStoryBoardSence(UpdateStoryBoardSenceRequest) returns (UpdateStoryBoardSenceResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/UpdateStoryBoardSence"
      body : "*"
    };
  }
  // 删除故事板场景
  rpc DeleteStoryBoardSence(DeleteStoryBoardSenceRequest) returns (DeleteStoryBoardSenceResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/DeleteStoryBoardSence"
      body : "*"
    };
  }
  // 渲染故事板指定场景
  rpc RenderStoryBoardSence(RenderStoryBoardSenceRequest) returns (RenderStoryBoardSenceResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/RenderStoryBoardSence"
      body : "*"
    };
  }
  
  // 渲染故事板的所有场景
  rpc RenderStoryBoardSences(RenderStoryBoardSencesRequest) returns (RenderStoryBoardSencesResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/RenderStoryBoardSences"
      body : "*"
    };
  }

  // 获取故事板场景生成状态
  rpc GetStoryBoardSenceGenerate(GetStoryBoardSenceGenerateRequest) returns (GetStoryBoardSenceGenerateResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetStoryBoardSenceGenerate"
      body : "*"
    };
  }

  // 获取故事板生成状态
  rpc GetStoryBoardGenerate(GetStoryBoardGenerateRequest) returns (GetStoryBoardGenerateResponse) {
    option (google.api.http) = {
      post : "/common.TeamsAPI/GetStoryBoardGenerate"
      body : "*"
    };
  }
}

message GetUserProfileRequest {
  int64 user_id = 1;
}

message GetUserProfileResponse {
  int32 code = 1;
  string message = 2;
  UserProfileInfo info = 3;
}

message UpdateUserProfileRequest {
  int64 user_id = 1;
  UserProfileInfo info = 2;
}

message UpdateUserProfileResponse {
  int32 code = 1;
  string message = 2;
}

message CreateStoryRoleRequest {
  int64 user_id = 1;
  StoryRoleInfo info = 2;
}

message CreateStoryRoleResponse {
  int32 code = 1;
  string message = 2;
}

message GetStoryRoleDetailRequest {
  int64 role_id = 1;
}

message GetStoryRoleDetailResponse {
  int32 code = 1;
  string message = 2;
  StoryRoleInfo info = 3;
}

message RenderStoryRoleRequest {
  int64 role_id = 1;
  string prompt = 2;
  repeated string ref_images = 3;
  int64 user_id = 4;
}

message RenderStoryRoleResponse {
  int32 code = 1;
  string message = 2;
}

message LikeStoryRequest {
  int64 story_id = 1;
  int64 user_id = 2;
}

message LikeStoryResponse {
  int32 code = 1;
  string message = 2;
}

message UnLikeStoryRequest {
  int64 story_id = 1;
  int64 user_id = 2;
}

message UnLikeStoryResponse {
  int32 code = 1;
  string message = 2;
}
