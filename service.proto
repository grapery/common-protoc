
syntax = "proto3";
package common;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "base.proto";
import "group.proto";
import "item.proto";
import "project.proto";
import "user.proto";

message ActiveInfo {
  UserInfo user = 1;
  ActiveType active_type = 2;
  ItemInfo item_info = 3;
  ProjectInfo project_info = 4;
  GroupInfo group_info = 5;
  
  int64 Ctime = 19;
  int64 Mtime = 20;
}

message LoginRequest {
  string account = 1;
  string password = 2;
}

message LoginResponse {
  int64 user_id = 1;
  string token = 2;
}

message LogoutRequest {
  string token = 1;
}

message LogoutResponse {

}


message RegisterRequest {
  string account = 1;
  string password = 2;
  string name = 3;
}

message RegisterResponse { 
  int32 status = 1; 
  string msg = 2;
}

message ConfirmRequest { 
  string token = 1; 
}

message ConfirmResponse { 
  int32 status = 1; 
  int64 timestamp = 2;
}

message ResetPasswordRequest {
  string account = 1;
  string oldPwd = 2;
  string newPwd = 3;
}

message ResetPasswordResponse {
  string account = 1;
  int64 status = 2;
  int64 timestamp = 3;
}

// user ,group .project.item
message UserInfoRequest {
  int64 user_id = 1;
  string account = 2;
}

message UserInfoResponse { 
  UserInfo info = 1; 
}

message UpdateUserAvatorRequest {
  int64 user_id = 1;
  string avatar = 2;
}

message UpdateUserAvatorResponse { 
  UserInfo info = 1; 
  int32 status = 2;
}

message UserWatchingRequest { 
  int64 user_id = 1; 
  int64 time_stamp = 2;
  int32 offset = 3;
  int32 page_size = 4;
}

message UserWatchingResponse { 
  repeated ProjectInfo list = 1; 
  int32 offset = 2;
  int32 page_size = 3;
}

enum GroupType {
  PUBLIC = 0;
  PRIVATE = 1;
}

message UserGroupRequest { 
  int64 user_id = 1; 
  GroupType gtype = 2;
  int32 offset = 3;
  int32 page_size = 4;
}

message UserGroupResponse { 
  repeated GroupInfo list = 1; 
  int32 offset = 2;
  int32 page_size = 3;
}

message UserFollowingGroupRequest { 
  int64 user_id = 1; 
  int32 offset = 2;
  int32 page_size = 3;
}

message UserFollowingGroupResponse {
  int64 user_id = 1;
  repeated GroupInfo list = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message UserUpdateRequest {
  int64 user_id = 1;
  string nickname = 2;
  string avatar = 3;
  string desc = 4;
}

message UserUpdateResponse {}

message FetchUserActivesRequest {
  int64 user_id = 1;
  ActiveType atype = 2;
}
message FetchUserActivesResponse { 
  repeated ActiveInfo list = 1; 
  int64 timestamp = 2;
  int64 offset = 3;
  int64 page_size = 4;
}
message SearchUserRequest {
  string name = 1;
  int64 group_id = 2;
  bool is_fuzzy = 3;
  int64 offset = 7;
  int64 page_size = 8;
}

message SearchUserResponse {
  repeated UserInfo list = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message UserInitRequest { 
  int64 user_id = 1; 
  string deafault_group = 2;
}

message UserInitResponse {
  int64 user_id = 1;
  repeated GroupInfo list = 2;
}


message GetProjectRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
}

message GetProjectResponse { 
  ProjectInfo info = 1; 
}

message GetProjectListRequest {
  int64 group_id = 1;

  int64 offset = 5;
  int64 page_size = 6;
}

message GetProjectListResponse {
  repeated ProjectInfo List = 1;
  int64 offset = 3;
  int64 page_size = 4;
}

message CreateProjectRequest {
  int64 group_id = 1;
  string name = 2;
}
message CreateProjectResponse { ProjectInfo info = 1; }
message UpdateProjectRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
  ProjectInfo info = 4;
}
message UpdateProjectResponse { ProjectInfo info = 1; }
message DeleteProjectRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
}
message DeleteProjectResponse {}

message GetWatchingProjectRequest {
  int64 user_id = 1;
  int64 offset = 3;
  int64 page_size = 4;
}

message GetWatchingProjectResponse {
  int64 user_id = 1;
  repeated ProjectInfo list = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message WatchProjectReqeust {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
}

message WatchProjectResponse {}

message UnWatchProjectReqeust {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
}

message UnWatchProjectResponse {}

message ExploreProjectsRequest {
  int64 user_id = 1;
  int64 group_id = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message ExploreProjectsResponse {
  int64 user_id = 1;
  repeated ProjectInfo list = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message SearchProjectRequest {
  int64 group_id = 1;
  string name = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message SearchProjectResponse {
  int64 group_id = 1;
  repeated ProjectInfo list = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message SearchAllProjectRequest {
  int64 user_id = 1;
  string name = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message SearchAllProjectResponse {
  int64 user_id = 1;
  repeated ProjectInfo list = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message GetProjectProfileRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
}

message GetProjectProfileResponse {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
  ProjectProfileInfo info = 4;
}

message UpdateProjectProfileRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
  ProjectProfileInfo info = 4;
}

message UpdateProjectProfileResponse {}

message GetProjectItemsRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 user_id = 3;
  int64 offset = 4;
  int64 page_size = 5;
}

message GetProjectItemsResponse {
  repeated ItemInfo list = 1;
  int64 group_id = 2;
  int64 project_id = 3;
  int64 user_id = 4;
  int64 offset = 5;
  int64 page_size = 6;
}

message GetGroupItemsRequest {
  int64 group_id = 1;
  int64 user_id = 3;
  int64 offset = 4;
  int64 page_size = 5;
}

message GetGroupItemsResponse {
  repeated ItemInfo list = 1;
  int64 group_id = 2;
  int64 user_id = 3;
  int64 offset = 4;
  int64 page_size = 5;
}

message GetUserItemsRequest {
  int64 user_id = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message GetUserItemsResponse {
  repeated ItemInfo list = 1;
  int64 user_id = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message GetItemRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 item_id = 3;
  int64 user_id = 4;
}

message GetItemResponse { ItemInfo info = 1; }

message CreateItemRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  string name = 3;
  ActiveType atype = 4;
  int64 user_id = 5;
}

message CreateItemResponse { ItemInfo info = 1; }

message UpdateItemRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 item_id = 3;
  ItemInfo info = 4;
  int64 user_id = 5;
}

message UpdateItemResponse { ItemInfo info = 1; }

message DeleteItemRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 item_id = 3;
  int64 user_id = 4;
}

message DeleteItemResponse {}

message LikeItemRequest {
  int64 group_id = 1;
  int64 project_id = 2;
  int64 item_id = 3;
  int64 user_id = 4;
  bool islike = 5;
}

message LikeItemResponse {}

message CreateGroupReqeust {
  int64 user_id = 1;
  string name = 2;
}
message CreateGroupResponse { GroupInfo info = 1; }

message GetGroupReqeust {
  int64 group_id = 1;
  int64 user_id = 2;
  string name = 3;
}
message GetGroupResponse { GroupInfo info = 1; }

message GetGroupActivesRequest {
  int64 group_id = 1;
  ActiveType atype = 2;
  int64 offset = 3;
  int64 page_size = 4;
}

message GetGroupActivesResponse {
  repeated ActiveInfo list = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message UpdateGroupInfoRequest {
  int64 group_id = 1;
  GroupInfo info = 2;
}
message UpdateGroupInfoResponse { GroupInfo info = 1; }
message DeleteGroupRequest {
  int64 group_id = 1;
  int64 user_id = 2;
}
message DeleteGroupResponse {}
message FetchGroupMembersRequest {
  int64 group_id = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message FetchGroupMembersResponse {
  repeated UserInfo list = 1;
  int64 offset = 2;
  int64 total = 3;
}

message SearchGroupReqeust { string name = 1; }
message SearchGroupResponse {
  repeated GroupInfo list = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message FetchGroupProjectsReqeust {
  int64 group_id = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message FetchGroupProjectsResponse {
  repeated ProjectInfo list = 1;
  int64 offset = 2;
  int64 page_size = 3;
}

message JoinGroupRequest {
  int64 group_id = 1;
  int64 user_id = 2;
}

message JoinGroupResponse {}

message LeaveGroupRequest {
  int64 group_id = 1;
  int64 user_id = 2;
}

message LeaveGroupResponse {}

message DisscussParams {}

message CreateDisscussReq {}
message CreateDisscusResp {}

message GetDisscusReq {}
message GetDisscusResp {}

message Content {
  int32 Ctype = 1;
  int32 Length = 2;
  string Version = 3;
  string data = 4;
}

message CreateCommentReq {
  int32 group_id = 1;
  int32 item_id = 2;
}
message CreateCommentResp {}

message GetItemCommentReq {
  int32 group_id = 1;
  int32 item_id = 2;
}
message GetItemCommentResp {}

message GetUserCommentReq {}
message GetUserCommentResp {}

message VersionRequest {}

message VersionResponse { string version = 1; }

message AboutRequest {}

message AboutResponse { string content = 1; }

message ExploreRequest {}
message ExploreResponse {}

message TrendingRequest {
  string area = 1;
  int64 start = 2;
  int64 end = 3;
}
message TrendingResponse {
  repeated ProjectInfo list = 1;

}

message GetProjectMembersRequest{
  int32 projectId = 1;
  int32 userId = 2;
}

message GetProjectMembersResponse{
  repeated UserInfo list = 1; 
  int32 total = 2;
  map<string,int64> role = 3;
}

message GetProjectWatcherReqeust{
  int32 projectId = 1;
}

message GetProjectWatcherResponse{
  repeated UserInfo list = 1; 
  int32 total = 2;
  map<int64,int64> timestamp = 3;
}

service TeamsAPI {

  rpc Explore(ExploreRequest) returns (ExploreResponse) {
    option (google.api.http) = {
      get : "/api/v1/explore"
    };
  }
  rpc Trending(TrendingRequest) returns (TrendingResponse) {
    option (google.api.http) = {
      get : "/api/v1/trending"
    };
  }

  rpc Version(VersionRequest) returns (VersionResponse) {
    option (google.api.http) = {
      get : "/api/v1/version"
    };
  }
  rpc About(AboutRequest) returns (AboutResponse) {
    option (google.api.http) = {
      get : "/api/v1/about"
    };
  }

  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post : "/api/v1/login"
      body : "*"
    };
  }

  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post : "/api/v1/logout"
      body : "*"
    };
  }
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post : "/api/v1/register"
      body : "*"
    };
  }
  rpc ResetPwd(ResetPasswordRequest) returns (ResetPasswordResponse) {
    option (google.api.http) = {
      post : "/api/v1/reset/pwd"
      body : "*"
    };
  }

  rpc UserInit(UserInitRequest) returns (UserInitResponse) {
    option (google.api.http) = {
      post : "/api/v1/user/init"
      body : "*"
    };
  }

  rpc UserInfo(UserInfoRequest) returns (UserInfoResponse) {
    option (google.api.http) = {
      post : "/api/v1/user/info"
      body : "*"
    };
  }

  rpc UpdateUserAvator(UpdateUserAvatorRequest)
      returns (UpdateUserAvatorResponse) {
    option (google.api.http) = {
      post : "/api/v1/user/info/avator"
      body : "*"
    };
  }

  rpc UserWatching(UserWatchingRequest) returns (UserWatchingResponse) {
    option (google.api.http) = {
      post : "/api/v1/user/info/watching"
      body : "*"
    };
  };

  rpc UserGroup(UserGroupRequest) returns (UserGroupResponse) {
    option (google.api.http) = {
      post : "/api/v1/user/info/groups"
      body : "*"
    };
  }

  rpc UserFollowingGroup(UserFollowingGroupRequest)
      returns (UserFollowingGroupResponse) {
    option (google.api.http) = {
      post : "/api/v1/user/info/groups/following"
      body : "*"
    };
  }

  rpc UserUpdate(UserUpdateRequest) returns (UserUpdateResponse) {
    option (google.api.http) = {
      post : "/api/v1/user/info/update"
      body : "*"
    };
  }

  rpc FetchUserActives(FetchUserActivesRequest)
      returns (FetchUserActivesResponse) {
    option (google.api.http) = {
      post : "/api/v1/user/actives"
      body : "*"
    };
  }

  rpc SearchUser(SearchUserRequest) returns (SearchUserResponse) {
    option (google.api.http) = {
      post : "/api/v1/users/search"
      body : "*"
    };
  }

  rpc CreateGroup(CreateGroupReqeust) returns (CreateGroupResponse) {
    option (google.api.http) = {
      post : "/api/v1/group"
      body : "*"
    };
  }
  rpc GetGroup(GetGroupReqeust) returns (GetGroupResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info"
      body : "*"
    };
  }
  rpc GetGroupActives(GetGroupActivesRequest)
      returns (GetGroupActivesResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/actives"
      body : "*"
    };
  }
  rpc UpdateGroupInfo(UpdateGroupInfoRequest)
      returns (UpdateGroupInfoResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/update"
      body : "*"
    };
  }
  rpc DeleteGroup(DeleteGroupRequest) returns (DeleteGroupResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/remove"
      body : "*"
    };
  }
  rpc FetchGroupMembers(FetchGroupMembersRequest)
      returns (FetchGroupMembersResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/members"
      body : "*"
    };
  }
  rpc SearchGroup(SearchGroupReqeust) returns (SearchGroupResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/search"
      body : "*"
    };
  }
  rpc FetchGroupProjects(FetchGroupProjectsReqeust)
      returns (FetchGroupProjectsResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/projects"
      body : "*"
    };
  }

  rpc JoinGroup(JoinGroupRequest) returns (JoinGroupResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/join"
      body : "*"
    };
  }

  rpc LeaveGroup(LeaveGroupRequest) returns (LeaveGroupResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/leave"
      body : "*"
    };
  }

  rpc GetProjectInfo(GetProjectRequest) returns (GetProjectResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/info"
      body : "*"
    };
  }

  rpc GetProjectList(GetProjectListRequest) returns (GetProjectListResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/list"
      body : "*"
    };
  }
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/add"
      body : "*"
    };
  }

  rpc GetProjectMembers(GetProjectMembersRequest) returns (GetProjectMembersResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/members"
      body : "*"
    };
  }

  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/update"
      body : "*"
    };
  }
  rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/remove"
      body : "*"
    };
  }
  rpc GetProjectProfile(GetProjectProfileRequest)
      returns (GetProjectProfileResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/profile"
      body : "*"
    };
  }
  rpc UpdateProjectProfile(UpdateProjectProfileRequest)
      returns (UpdateProjectProfileResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/profile/update"
      body : "*"
    };
  }

  rpc WatchProject(WatchProjectReqeust) returns (WatchProjectResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/watch"
      body : "*"
    };
  }

  rpc UnWatchProject(UnWatchProjectReqeust) returns (UnWatchProjectResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/unwatch"
      body : "*"
    };
  }

  rpc GetProjectWatcher(GetProjectWatcherReqeust) returns (GetProjectWatcherResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/project/watcher"
      body : "*"
    };
  }

  rpc SearchGroupProject(SearchProjectRequest) returns (SearchProjectResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/info/projects/search"
      body : "*"
    };
  }

  rpc SearchProject(SearchAllProjectRequest)
      returns (SearchAllProjectResponse) {
    option (google.api.http) = {
      post : "/api/v1/projects/search"
      body : "*"
    };
  }

  rpc ExploreProject(ExploreProjectsRequest) returns (ExploreProjectsResponse) {
    option (google.api.http) = {
      post : "/api/v1/projects/explore"
      body : "*"
    };
  }

  rpc GetProjectItems(GetProjectItemsRequest)
      returns (GetProjectItemsResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/project/info/items"
      body : "*"
    };
  }
  rpc GetGroupItems(GetGroupItemsRequest) returns (GetGroupItemsResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/items"
      body : "*"
    };
  }

  rpc GetUserItems(GetUserItemsRequest) returns (GetUserItemsResponse) {
    option (google.api.http) = {
      post : "/api/v1/user/items"
      body : "*"
    };
  }

  rpc GetItem(GetItemRequest) returns (GetItemResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/project/item/info"
      body : "*"
    };
  }

  rpc CreateItem(CreateItemRequest) returns (CreateItemResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/project/item/add"
      body : "*"
    };
  }
  rpc UpdateItem(UpdateItemRequest) returns (UpdateItemResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/project/item/update"
      body : "*"
    };
  }
  rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/project/item/remove"
      body : "*"
    };
  }
  rpc LikeItem(LikeItemRequest) returns (LikeItemResponse) {
    option (google.api.http) = {
      post : "/api/v1/group/project/item/like"
      body : "*"
    };
  }

  rpc CreateComment(CreateCommentReq) returns (CreateCommentResp) {
    option (google.api.http) = {
      post : "/api/v1/group/project/item/comment/add"
      body : "*"
    };
  }

  rpc GetItemComment(GetItemCommentReq) returns (GetItemCommentResp) {
    option (google.api.http) = {
      post : "/api/v1/group/project/item/comment/list"
      body : "*"
    };
  }
}
