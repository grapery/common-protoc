
syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "protoc-gen-openapiv2/options/openapiv2.proto";

option go_package = "github.com/grapery/grapery/api";
package grapery.api;

enum LikeType {
  Browser = 0;
  // orange,激进的
  Left = 1;
  // blue，温和的
  Middle = 2;
  // green 保守的
  Right = 3;
}

enum GenderType {
  // 不公开性别
  None = 0;
  Man = 1;
  Women = 2;
  Double = 3;
}

enum UserStatus {
  Rest = 0;
  Study = 1;
  Busy = 2;
  Working = 3;
}

enum GroupStatus {
  NotReady = 0;
  Normal = 1;
  ViewOnly = 2;
  Abandon = 3;
}

enum ActiveType {
  AllActive = 0;
  Like = 1;
  Share = 2;
  Comment = 3;
  Collect = 4;
  DisAgree = 5;
}

enum ItemType {
  AllItem = 0;
  ShortWord = 1;
  Paper = 2;
  Picture = 3;
  Video = 4;
  Music = 5;
  Link = 6;
  Location = 7;
}

enum AuthType {
  NotSupport = 0;
  WithPhone = 1;
  WithEmail = 2;
}

enum VisibleType {
  AllPublic = 0;
  Public = 1;
  Private = 2;
  Someone = 3;
}

message Tags {
  uint64 group_id = 1;
  uint64 creatorID = 2;
  string name = 3;
}

message UserInfo {
  uint64 user_id = 1;
  string name = 2;
  string avatar = 3;
  string email = 4;
  string location = 5;
  string desc = 6;
  // uint64 LastActiveTime = 7;
}

message GroupInfo {
  uint64 group_id = 1;
  string name = 2;
  string avatar = 3;
  string desc = 4;
  UserInfo creator = 5;
  UserInfo owner = 6;
  repeated Tags tags = 7;
}

message ProjectInfo {
  uint64 project_id = 1;
  uint32 group_id = 2;
  string name = 3;
  string avatar = 4;
  UserInfo creator = 5;
  UserInfo owner = 6;
  repeated Tags tags = 7;
  VisibleType visable = 8;
  bool isAchieve = 9;
  bool isClose = 10;
}

message ActiveInfo {
  UserInfo user = 1;
  ActiveType activeType = 2;
  ItemInfo itemInfo = 3;
  ProjectInfo projectInfo = 4;
  GroupInfo groupInfo = 5;
}

message WordDetail {}
message PictureDetail {}
message VideoDetail {}
message MusicDetail {}
message VoiceDetail {}
message ShareDetail {}

message ItemDetail {
  oneof detail {
    WordDetail word = 1;
    PictureDetail pictures = 2;
    VideoDetail video = 3;
    MusicDetail music = 4;
    VoiceDetail voice = 5;
    ShareDetail share = 6;
  }
}

message ItemInfo {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 user_id = 3;
  string title = 4;
  ItemDetail content = 5;
  ItemType itype = 6;
}

message UserProfileInfo {}

message GroupProfileInfo {}

message ProjectProfileInfo {}

// here us req-resp list
message LoginRequest {
  AuthType login_type = 1;
  string account = 2;
  string password = 3;
}

message LoginResponse { uint64 user_id = 1; }

message LogoutRequest { uint64 user_id = 1; }

message LogoutResponse {}

message LogtouResponse {}

message RegisterRequest {
  AuthType login_type = 1;
  string account = 2;
  string password = 3;
}

message RegisterResponse {}

message ConfirmRequest {
  AuthType login_type = 1;
  string account = 2;
}

message ConfirmResponse {}

message ResetPasswordRequest {
  AuthType login_type = 1;
  uint64 user_id = 2;
  string oldPwd = 3;
  string newPwd = 4;
}

message ResetPasswordResponse { uint64 user_id = 1; }

// user ,group .project.item
message UserInfoRequest { uint64 user_id = 1; }

message UserInfoResponse { UserInfo info = 1; }

message UpdateUserAvatorRequest {
  uint64 user_id = 1;
  string avatar = 2;
}

message UpdateUserAvatorResponse { UserInfo info = 1; }

message UserWatchingRequest { uint64 user_id = 1; }

message UserWatchingResponse { repeated ProjectInfo list = 1; }

message UserGroupRequest { uint64 user_id = 1; }

message UserGroupResponse { repeated GroupInfo list = 1; }

message UserFollowingGroupRequest { uint64 user_id = 1; }

message UserFollowingGroupResponse { repeated GroupInfo list = 1; }

message UserUpdateRequest {
  uint64 user_id = 1;
  string nickname = 2;
  string avatar = 3;
  string desc = 4;
}

message UserUpdateResponse {}

message StartFollowUserRequest {
  uint64 user_id = 1;
  uint64 target_id = 2;
}
message StartFollowUserResponse {}
message StopFollowUserRequest {
  uint64 user_id = 1;
  uint64 target_id = 2;
}
message StopFollowUserResponse {}
message FetchUserActivesRequest {
  uint64 user_id = 1;
  ActiveType atype = 2;
}
message FetchUserActivesResponse { repeated ActiveInfo list = 1; }
message SearchUserRequest {
  string name = 1;
  uint64 group_id = 2;
  uint64 offset = 3;
  uint64 number = 4;
}

message SearchUserResponse {
  repeated UserInfo list = 1;
  uint64 offset = 2;
  uint64 number = 3;
}
//--------------------------------------------------//

message CreateGroupReqeust {
  uint64 user_id = 1;
  string name = 2;
}
message CreateGroupResponse { GroupInfo info = 1; }

message GetGroupReqeust {
  uint64 group_id = 1;
  uint64 user_id = 2;
  string name = 3;
}
message GetGroupResponse { GroupInfo info = 1; }

message GetGroupActivesRequest {
  uint64 group_id = 1;
  ActiveType atype = 2;
  uint64 offset = 3;
  uint64 number = 4;
}

message GetGroupActivesResponse {
  repeated ActiveInfo list = 1;
  uint64 offset = 2;
  uint64 number = 3;
}

message UpdateGroupInfoRequest {
  uint64 group_id = 1;
  GroupInfo info = 2;
}
message UpdateGroupInfoResponse { GroupInfo info = 1; }
message DeleteGroupRequest {
  uint64 group_id = 1;
  uint64 user_id = 2;
}
message DeleteGroupResponse {}
message FetchGroupMembersRequest {
  uint64 group_id = 1;
  uint64 offset = 2;
  uint64 number = 3;
}

message FetchGroupMembersResponse {
  repeated UserInfo list = 1;
  uint64 offset = 2;
  uint64 total = 3;
}

message SearchGroupReqeust { string name = 1; }
message SearchGroupResponse {
  repeated GroupInfo list = 1;
  uint64 offset = 2;
  uint64 number = 3;
}

message FetchGroupProjectsReqeust {
  uint64 group_id = 1;
  uint64 offset = 2;
  uint64 number = 3;
}

message FetchGroupProjectsResponse {
  repeated ProjectInfo list = 1;
  uint64 offset = 2;
  uint64 number = 3;
}

message JoinGroupRequest {
  uint64 group_id = 1;
  uint64 user_id = 2;
}

message JoinGroupResponse {}

message LeaveGroupRequest {
  uint64 group_id = 1;
  uint64 user_id = 2;
}

message LeaveGroupResponse {}

message GetProjectRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 user_id = 3;
}

message GetProjectResponse { ProjectInfo info = 1; }

message CreateProjectRequest {
  uint64 group_id = 1;
  string name = 2;
}
message CreateProjectResponse { ProjectInfo info = 1; }
message UpdateProjectRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 user_id = 3;
  ProjectInfo info = 4;
}
message UpdateProjectResponse { ProjectInfo info = 1; }
message DeleteProjectRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 user_id = 3;
}
message DeleteProjectResponse {}

message GetProjectProfileRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
}

message GetProjectProfileResponse { ProjectProfileInfo info = 1; }

message UpdateProjectProfileRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
  ProjectProfileInfo info = 3;
}

message UpdateProjectProfileResponse { ProjectProfileInfo info = 1; }

message GetWatchingProjectRequest {
  uint64 user_id = 1;
  uint64 offset = 3;
  uint64 number = 4;
}

message GetWatchingProjectResponse {
  uint64 user_id = 1;
  repeated ProjectInfo list = 2;
  uint64 offset = 3;
  uint64 number = 4;
}

message WatchProjectReqeust {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 user_id = 3;
}

message WatchProjectResponse {}

message UnWatchProjectReqeust {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 user_id = 3;
}

message UnWatchProjectResponse {}

message ExploreProjectsRequest {
  uint64 user_id = 1;
  uint64 offset = 2;
  uint64 number = 3;
}

message ExploreProjectsResponse {
  uint64 user_id = 1;
  repeated ProjectInfo list = 2;
  uint64 offset = 3;
  uint64 number = 4;
}

message SearchProjectRequest {
  uint64 group_id = 1;
  string name = 2;
  uint64 offset = 3;
  uint64 number = 4;
}

message SearchProjectResponse {
  uint64 group_id = 1;
  repeated ProjectInfo list = 2;
  uint64 offset = 3;
  uint64 number = 4;
}

message SearchAllProjectRequest {
  uint64 user_id = 1;
  string name = 2;
  uint64 offset = 3;
  uint64 number = 4;
}

message SearchAllProjectResponse {
  uint64 user_id = 1;
  repeated ProjectInfo list = 2;
  uint64 offset = 3;
  uint64 number = 4;
}

message GetItemsRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 offset = 3;
  uint64 number = 4;
}

message GetItemsResponse {
  repeated ItemInfo list = 1;
  uint64 offset = 2;
  uint64 number = 3;
}

message GetItemRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 item_id = 3;
}

message GetItemResponse { ItemInfo info = 1; }

message CreateItemRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
  string name = 3;
  ActiveType atype = 4;
}

message CreateItemResponse { ItemInfo info = 1; }

message UpdateItemRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 item_id = 3;
  ItemInfo info = 4;
}

message UpdateItemResponse { ItemInfo info = 1; }

message DeleteItemRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 item_id = 3;
}

message DeleteItemResponse {}

message LikeItemRequest {
  uint64 group_id = 1;
  uint64 project_id = 2;
  uint64 item_id = 3;
  uint64 user_id = 4;
  bool islike = 5;
}

message LikeItemResponse {}

service Auth {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post : "/v1/login"
      body : "*"
    };
  }
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post : "/v1/logout"
      body : "*"
    };
  }
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post : "/v1/register"
      body : "*"
    };
  }
  rpc ResetPwd(ResetPasswordRequest) returns (ResetPasswordResponse) {
    option (google.api.http) = {
      post : "/v1/reset/pwd"
      body : "*"
    };
  }
}

service User {
  rpc UserInfo(UserInfoRequest) returns (UserInfoResponse) {
    option (google.api.http) = {
      post : "/v1/user/{user_id}"
      body : "*"
    };
  }

  rpc UpdateUserAvator(UpdateUserAvatorRequest)
      returns (UpdateUserAvatorResponse) {
    option (google.api.http) = {
      post : "/v1/user/{user_id}/avator"
      body : "*"
    };
  }

  rpc UserWatching(UserWatchingRequest) returns (UserWatchingResponse) {
    option (google.api.http) = {
      post : "/v1/user/{user_id}/watching"
      body : "*"
    };
  };

  rpc UserGroup(UserGroupRequest) returns (UserGroupResponse) {
    option (google.api.http) = {
      post : "/v1/user/{user_id}/groups"
      body : "*"
    };
  }

  rpc UserFollowingGroup(UserFollowingGroupRequest)
      returns (UserFollowingGroupResponse) {
    option (google.api.http) = {
      post : "/v1/user/{user_id}/groups/following"
      body : "*"
    };
  }

  rpc UserUpdate(UserUpdateRequest) returns (UserUpdateResponse) {
    option (google.api.http) = {
      post : "/v1/user/{user_id}/update"
      body : "*"
    };
  }

  rpc StartFollowUser(StartFollowUserRequest)
      returns (StartFollowUserResponse) {
    option (google.api.http) = {
      post : "/v1/user/{user_id}/following/add/{target_id}"
      body : "*"
    };
  }

  rpc StopFollowUser(StopFollowUserRequest) returns (StopFollowUserResponse) {
    option (google.api.http) = {
      post : "/v1/user/{user_id}/following/remove/{target_id}"
      body : "*"
    };
  }

  rpc FetchUserActives(FetchUserActivesRequest)
      returns (FetchUserActivesResponse) {
    option (google.api.http) = {
      post : "/v1/user/{user_id}/actives"
      body : "*"
    };
  }

  rpc SearchUser(SearchUserRequest) returns (SearchUserResponse) {
    option (google.api.http) = {
      post : "/v1/users/search"
      body : "*"
    };
  }
}

service Org {
  rpc CreateGroup(CreateGroupReqeust) returns (CreateGroupResponse) {
    option (google.api.http) = {
      post : "/v1/group"
      body : "*"
    };
  }
  rpc GetGroup(GetGroupReqeust) returns (GetGroupResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}"
      body : "*"
    };
  }
  rpc GetGroupActives(GetGroupActivesRequest)
      returns (GetGroupActivesResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/actives"
      body : "*"
    };
  }
  rpc UpdateGroupInfo(UpdateGroupInfoRequest)
      returns (UpdateGroupInfoResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/update"
      body : "*"
    };
  }
  rpc DeleteGroup(DeleteGroupRequest) returns (DeleteGroupResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/remove"
      body : "*"
    };
  }
  rpc FetchGroupMembers(FetchGroupMembersRequest)
      returns (FetchGroupMembersResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/members"
      body : "*"
    };
  }
  rpc SearchGroup(SearchGroupReqeust) returns (SearchGroupResponse) {
    option (google.api.http) = {
      post : "/v1/group/search"
      body : "*"
    };
  }
  rpc FetchGroupProjects(FetchGroupProjectsReqeust)
      returns (FetchGroupProjectsResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/projects"
      body : "*"
    };
  }

  rpc JoinGroup(JoinGroupRequest) returns (JoinGroupResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/join"
      body : "*"
    };
  }

  rpc LeaveGroup(LeaveGroupRequest) returns (LeaveGroupResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/leave"
      body : "*"
    };
  }
}

service Project {
  rpc GetProject(GetProjectRequest) returns (GetProjectResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/{project_id}"
      body : "*"
    };
  }
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project"
      body : "*"
    };
  }
  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/{project_id}/update"
      body : "*"
    };
  }
  rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/{project_id}/remove"
      body : "*"
    };
  }
  rpc GetProjectProfile(GetProjectProfileRequest)
      returns (GetProjectProfileResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/{project_id}/profile"
      body : "*"
    };
  }
  rpc UpdateProjectProfile(UpdateProjectProfileRequest)
      returns (UpdateProjectProfileResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/{project_id}/update"
      body : "*"
    };
  }

  rpc WatchProject(WatchProjectReqeust) returns (WatchProjectResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/{project_id}/watch"
      body : "*"
    };
  }

  rpc UnWatchProject(UnWatchProjectReqeust) returns (UnWatchProjectResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/{project_id}/unwatch"
      body : "*"
    };
  }

  rpc SearchGroupProject(SearchProjectRequest) returns (SearchProjectResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/projects/search"
      body : "*"
    };
  }

  rpc SearchProject(SearchAllProjectRequest)
      returns (SearchAllProjectResponse) {
    option (google.api.http) = {
      post : "/v1/projects/search"
      body : "*"
    };
  }

  rpc ExploreProject(ExploreProjectsRequest) returns (ExploreProjectsResponse) {
    option (google.api.http) = {
      post : "/v1/projects/explore"
      body : "*"
    };
  }
}

service Item {

  rpc GetItems(GetItemsRequest) returns (GetItemsResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/{project_id}/items"
      body : "*"
    };
  }

  rpc GetItem(GetItemRequest) returns (GetItemResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/item/{item_id}"
      body : "*"
    };
  }

  rpc CreateItem(CreateItemRequest) returns (CreateItemResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/item"
      body : "*"
    };
  }
  rpc UpdateItem(UpdateItemRequest) returns (UpdateItemResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/item/{item_id}/update"
      body : "*"
    };
  }
  rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/item/{item_id}/remove"
      body : "*"
    };
  }
  rpc LikeItem(LikeItemRequest) returns (LikeItemResponse) {
    option (google.api.http) = {
      post : "/v1/group/{group_id}/project/item/{item_id}/like"
      body : "*"
    };
  }
}
