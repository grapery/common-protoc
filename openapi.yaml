# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /common.TeamsAPI/About:
        get:
            tags:
                - TeamsAPI
            description: |-
                / 获取服务关于信息
                / 返回服务的基本介绍和说明信息
                / HTTP GET /common.TeamsAPI/About
                / 响应：AboutResponse (JSON，包含服务描述)
            operationId: TeamsAPI_About
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AboutResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/ArchiveStory:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 收藏故事
                / 将故事添加到用户的个人收藏夹，方便后续查看
                / HTTP POST /common.TeamsAPI/ArchiveStory
                / 请求体：ArchiveStoryRequest (JSON，包含故事ID和用户ID)
                / 响应：ArchiveStoryResponse (JSON)
            operationId: TeamsAPI_ArchiveStory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ArchiveStoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ArchiveStoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/CancelStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 撤销故事板\n/ \n/ 【功能说明】\n/ 撤销已发布的故事板，保留文本但隐藏场景和图片\n/ \n/ 【撤销规则】\n/ - 保留AI生成的故事板文本内容，用来给用户展示\n/ - 场景和图片不会展示，以保证故事的连贯性\n/ - 可以重新编辑后再次发布\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/CancelStoryboard\n/ - 请求体：CancelStoryboardRequest (JSON)\n/ - 响应：CancelStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,    // [必填] 要撤销的故事板ID\n/   \"user_id\": 456           // [必填] 用户ID（仅所有者可撤销）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息"
            operationId: TeamsAPI_CancelStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CancelStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CancelStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/ChatWithStoryRole:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 与角色聊天
                / 发送消息并获取AI角色的智能回复
                / HTTP POST /common.TeamsAPI/ChatWithStoryRole
                / 请求体：ChatWithStoryRoleRequest (JSON，包含历史消息列表)
                / 响应：ChatWithStoryRoleResponse (JSON，返回角色的回复消息)
            operationId: TeamsAPI_ChatWithStoryRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChatWithStoryRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChatWithStoryRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/ContinueRenderStory:
        post:
            tags:
                - TeamsAPI
            description: "/ 继续渲染故事\n/ \n/ 【功能说明】\n/ 在现有基础上继续使用AI生成故事内容\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/ContinueRenderStory\n/ - 请求体：ContinueRenderStoryRequest (JSON)\n/ - 响应：ContinueRenderStoryResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,             // [必填] 故事ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"last_board_id\": 789,        // [可选] 上一个故事板ID\n/   \"continue_prompt\": \"继续...\", // [可选] 继续的提示词\n/   \"generate_count\": 3          // [可选] 生成场景数量，默认3\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - new_boards: 新生成的故事板列表\n/ - render_id: 渲染任务ID"
            operationId: TeamsAPI_ContinueRenderStory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ContinueRenderStoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ContinueRenderStoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/CreateGroup:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 创建群组
                / 创建新的协作群组或团队，设置名称、描述和头像
                / HTTP POST /common.TeamsAPI/CreateGroup
                / 请求体：CreateGroupRequest (JSON，包含群组名称、描述和头像)
                / 响应：CreateGroupResponse (JSON，返回创建的群组信息)
            operationId: TeamsAPI_CreateGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateGroupResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/CreateStory:
        post:
            tags:
                - TeamsAPI
            description: "/ 创建故事\n/ \n/ 【功能说明】\n/ 创建一个新的故事，设置基本信息和初始配置\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/CreateStory\n/ - 请求体：CreateStoryRequest (JSON)\n/ - 响应：CreateStoryResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,              // [必填] 创建者用户ID\n/   \"group_id\": 456,             // [可选] 所属群组ID\n/   \"title\": \"故事标题\",         // [必填] 故事名称\n/   \"description\": \"故事简介\",   // [可选] 故事描述\n/   \"cover\": \"封面URL\",          // [可选] 封面图片\n/   \"is_public\": true            // [可选] 是否公开，默认true\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - story: 创建的故事对象\n/ - story_id: 故事ID"
            operationId: TeamsAPI_CreateStory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateStoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateStoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/CreateStoryBoardComment:
        post:
            tags:
                - TeamsAPI
            description: 创建故事板评论
            operationId: TeamsAPI_CreateStoryBoardComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateStoryBoardCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateStoryBoardCommentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/CreateStoryBoardSence:
        post:
            tags:
                - TeamsAPI
            description: "/ 创建故事板场景\n/ \n/ 【功能说明】\n/ 在故事板中创建新的场景\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/CreateStoryBoardSence\n/ - 请求体：CreateStoryBoardSenceRequest (JSON)\n/ - 响应：CreateStoryBoardSenceResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,        // [必填] 故事板ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"title\": \"场景标题\",         // [必填] 场景名称\n/   \"description\": \"场景描述\",   // [必填] 场景内容\n/   \"order\": 1                   // [可选] 场景顺序\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - scene: 创建的场景对象\n/ - scene_id: 场景ID"
            operationId: TeamsAPI_CreateStoryBoardSence
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateStoryBoardSenceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateStoryBoardSenceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/CreateStoryComment:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 创建故事评论
                / 在故事下发表新的评论，支持富文本内容
                / HTTP POST /common.TeamsAPI/CreateStoryComment
                / 请求体：CreateStoryCommentRequest (JSON，包含故事ID和评论内容)
                / 响应：CreateStoryCommentResponse (JSON，返回创建的评论信息)
            operationId: TeamsAPI_CreateStoryComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateStoryCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateStoryCommentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/CreateStoryCommentReply:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 创建故事评论回复
                / 回复指定的故事评论
                / HTTP POST /common.TeamsAPI/CreateStoryCommentReply
                / 请求体：CreateStoryCommentReplyRequest (JSON，包含评论ID和回复内容)
                / 响应：CreateStoryCommentReplyResponse (JSON，返回创建的回复信息)
            operationId: TeamsAPI_CreateStoryCommentReply
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateStoryCommentReplyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateStoryCommentReplyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/CreateStoryRole:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 创建新的故事角色
                / 在故事中创建一个新的角色，设置角色的基本信息
                / HTTP POST /common.TeamsAPI/CreateStoryRole
                / 请求体：CreateStoryRoleRequest (JSON，包含角色详细信息)
                / 响应：CreateStoryRoleResponse (JSON)
            operationId: TeamsAPI_CreateStoryRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateStoryRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateStoryRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/CreateStoryRoleChat:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 创建与角色的对话
                / 开始一个新的与故事角色的AI聊天会话
                / HTTP POST /common.TeamsAPI/CreateStoryRoleChat
                / 请求体：CreateStoryRoleChatRequest (JSON，包含角色ID和用户ID)
                / 响应：CreateStoryRoleChatResponse (JSON，返回聊天上下文信息)
            operationId: TeamsAPI_CreateStoryRoleChat
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateStoryRoleChatRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateStoryRoleChatResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/CreateStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 创建故事板\n/ \n/ 【功能说明】\n/ 在故事中创建新的故事板（分支剧情）\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/CreateStoryboard\n/ - 请求体：CreateStoryboardRequest (JSON)\n/ - 响应：CreateStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,             // [必填] 所属故事ID\n/   \"user_id\": 456,              // [必填] 创建者用户ID\n/   \"parent_board_id\": 789,      // [可选] 父故事板ID（分支时提供）\n/   \"title\": \"故事板标题\",       // [必填] 故事板名称\n/   \"content\": \"剧情内容\"        // [可选] 故事板内容\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - storyboard: 创建的故事板对象\n/ - storyboard_id: 故事板ID"
            operationId: TeamsAPI_CreateStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/DelStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 删除故事板\n/ \n/ 【功能说明】\n/ 删除指定的故事板\n/ \n/ 【删除规则】\n/ 1. 最后一个故事板可以被删除\n/ 2. 如果故事板是多分支之一则可以被删除\n/ 3. 有子分支的故事板不能直接删除\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/DelStoryboard\n/ - 请求体：DelStoryboardRequest (JSON)\n/ - 响应：DelStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,    // [必填] 要删除的故事板ID\n/   \"user_id\": 456,          // [必填] 用户ID（权限验证）\n/   \"story_id\": 789,         // [必填] 所属故事ID\n/   \"force\": false           // [可选] 是否强制删除，默认false\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息"
            operationId: TeamsAPI_DelStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DelStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DelStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/DeleteGroup:
        post:
            tags:
                - TeamsAPI
            description: DeleteGroup removes a group
            operationId: TeamsAPI_DeleteGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteGroupResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/DeleteStoryBoardComment:
        post:
            tags:
                - TeamsAPI
            description: 删除故事板评论
            operationId: TeamsAPI_DeleteStoryBoardComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteStoryBoardCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteStoryBoardCommentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/DeleteStoryBoardSence:
        post:
            tags:
                - TeamsAPI
            description: "/ 删除故事板场景\n/ \n/ 【功能说明】\n/ 删除指定的故事板场景\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/DeleteStoryBoardSence\n/ - 请求体：DeleteStoryBoardSenceRequest (JSON)\n/ - 响应：DeleteStoryBoardSenceResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"scene_id\": 123,         // [必填] 要删除的场景ID\n/   \"user_id\": 456,          // [必填] 用户ID（权限验证）\n/   \"storyboard_id\": 789     // [必填] 所属故事板ID\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息"
            operationId: TeamsAPI_DeleteStoryBoardSence
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteStoryBoardSenceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteStoryBoardSenceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/DeleteStoryComment:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 删除故事评论
                / 删除指定的故事评论，仅评论作者或管理员可删除
                / HTTP POST /common.TeamsAPI/DeleteStoryComment
                / 请求体：DeleteStoryCommentRequest (JSON)
                / 响应：DeleteStoryCommentResponse (JSON)
            operationId: TeamsAPI_DeleteStoryComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteStoryCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteStoryCommentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/DeleteStoryCommentReply:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 删除故事评论回复
                / 删除指定的评论回复，仅回复作者或管理员可删除
                / HTTP POST /common.TeamsAPI/DeleteStoryCommentReply
                / 请求体：DeleteStoryCommentReplyRequest (JSON)
                / 响应：DeleteStoryCommentReplyResponse (JSON)
            operationId: TeamsAPI_DeleteStoryCommentReply
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteStoryCommentReplyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteStoryCommentReplyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/DeleteStoryboardUserDraft:
        post:
            tags:
                - TeamsAPI
            description: "/ 删除用户故事板草稿\n/ \n/ 【功能说明】\n/ 删除指定用户的故事板草稿，释放存储空间\n/ \n/ 【权限要求】\n/ - 仅草稿所有者可以删除自己的草稿\n/ - 删除后不可恢复，请谨慎操作\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/DeleteStoryboardUserDraft\n/ - 请求体：DeleteUserStoryboardDraftRequest (JSON)\n/ - 响应：DeleteUserStoryboardDraftResponse (JSON)\n/ \n/ 【请求参数】\n/ - user_id: [必填] 用户ID（所有者ID）\n/ - draft_id: [必填] 草稿ID（要删除的草稿）\n/ - story_id: [可选] 故事ID（用于权限验证）\n/ \n/ 【响应字段】\n/ - code: 响应状态码（0表示成功）\n/ - message: 响应消息描述\n/ \n/ 【使用示例】\n/ ```json\n/ {\n/   \"user_id\": 123,\n/   \"draft_id\": 456,\n/   \"story_id\": 789\n/ }\n/ ```"
            operationId: TeamsAPI_DeleteUserStoryboardDraft
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteUserStoryboardDraftRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserStoryboardDraftResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/DislikeComment:
        post:
            tags:
                - TeamsAPI
            description: 取消点赞故事评论
            operationId: TeamsAPI_DislikeComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DislikeCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DislikeCommentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/Explore:
        get:
            tags:
                - TeamsAPI
            description: |-
                / 探索推荐内容
                / 获取平台推荐的热门和优质内容，帮助用户发现有趣的故事和角色
                / HTTP GET /common.TeamsAPI/Explore
                / 响应：ExploreResponse (JSON，返回推荐内容列表)
            operationId: TeamsAPI_Explore
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExploreResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/FetchActives:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取活动动态列表
                / 获取用户、群组或故事的最新活动动态信息
                / HTTP POST /common.TeamsAPI/FetchActives
                / 请求体：FetchActivesRequest (JSON，包含筛选条件和分页参数)
                / 响应：FetchActivesResponse (JSON，返回活动动态列表)
            operationId: TeamsAPI_FetchActives
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FetchActivesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FetchActivesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/FetchGroupMembers:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取群组成员列表
                / 分页获取指定群组的所有成员用户列表
                / HTTP POST /common.TeamsAPI/FetchGroupMembers
                / 请求体：FetchGroupMembersRequest (JSON，包含群组ID和分页参数)
                / 响应：FetchGroupMembersResponse (JSON，返回成员列表和总数)
            operationId: TeamsAPI_FetchGroupMembers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FetchGroupMembersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FetchGroupMembersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/FetchGroupStorys:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取群组故事列表\n/ \n/ 【功能说明】\n/ 获取指定群组内的所有故事\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/FetchGroupStorys\n/ - 请求体：FetchGroupStorysRequest (JSON)\n/ - 响应：FetchGroupStorysResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"group_id\": 123,         // [必填] 群组ID\n/   \"user_id\": 456,          // [必填] 请求用户ID\n/   \"offset\": 0,             // [可选] 分页偏移量，默认0\n/   \"page_size\": 20,         // [可选] 每页数量，默认20\n/   \"status\": 0              // [可选] 状态筛选（0-全部）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - stories: 故事列表\n/ - total: 总数量"
            operationId: TeamsAPI_FetchGroupStorys
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FetchGroupStorysRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FetchGroupStorysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/FollowStoryRole:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 关注故事角色
                / 关注指定的故事角色，接收该角色的最新动态通知
                / HTTP POST /common.TeamsAPI/FollowStoryRole
                / 请求体：FollowStoryRoleRequest (JSON)
                / 响应：FollowStoryRoleResponse (JSON)
            operationId: TeamsAPI_FollowStoryRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FollowStoryRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FollowStoryRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/FollowUser:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 关注用户
                / 关注另一个用户，建立关注关系并接收其动态
                / HTTP POST /common.TeamsAPI/FollowUser
                / 请求体：FollowUserRequest (JSON，包含被关注用户的ID)
                / 响应：FollowUserResponse (JSON)
            operationId: TeamsAPI_FollowUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FollowUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FollowUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/ForkStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 复制故事板（分叉）\n/ \n/ 【功能说明】\n/ 基于现有故事板创建分支版本，开启新的剧情线\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/ForkStoryboard\n/ - 请求体：ForkStoryboardRequest (JSON)\n/ - 响应：ForkStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"source_board_id\": 123,      // [必填] 源故事板ID（要分叉的故事板）\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"story_id\": 789,             // [必填] 所属故事ID\n/   \"new_title\": \"分支标题\",     // [可选] 新故事板标题\n/   \"copy_content\": true         // [可选] 是否复制内容，默认true\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - new_storyboard: 新创建的分支故事板\n/ - new_storyboard_id: 新故事板ID"
            operationId: TeamsAPI_ForkStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ForkStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ForkStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GenStoryboardImages:
        post:
            tags:
                - TeamsAPI
            description: "/ 生成故事板图片\n/ \n/ 【功能说明】\n/ 使用AI为故事板的场景生成配图\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GenStoryboardImages\n/ - 请求体：GenStoryboardImagesRequest (JSON)\n/ - 响应：GenStoryboardImagesResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,        // [必填] 故事板ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"scene_ids\": [1, 2, 3],      // [可选] 要生成图片的场景ID列表\n/   \"style_id\": 5,               // [可选] 图片风格ID\n/   \"quality\": \"high\",           // [可选] 图片质量（low/medium/high）\n/   \"aspect_ratio\": \"16:9\"       // [可选] 宽高比，默认16:9\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - task_ids: 图片生成任务ID列表\n/ - estimated_time: 预计完成时间（秒）"
            operationId: TeamsAPI_GenStoryboardImages
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenStoryboardImagesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenStoryboardImagesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GenStoryboardText:
        post:
            tags:
                - TeamsAPI
            description: "/ 生成故事板文本\n/ \n/ 【功能说明】\n/ 使用AI为故事板生成文本内容（场景描述、对话等）\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GenStoryboardText\n/ - 请求体：GenStoryboardTextRequest (JSON)\n/ - 响应：GenStoryboardTextResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,        // [必填] 故事板ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"prompt\": \"生成提示\",        // [可选] AI生成提示词\n/   \"language\": \"zh-CN\",         // [可选] 语言代码，默认zh-CN\n/   \"style\": \"现代\",             // [可选] 写作风格\n/   \"length\": \"medium\"           // [可选] 文本长度（short/medium/long）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - generated_text: 生成的文本内容\n/ - task_id: 生成任务ID"
            operationId: TeamsAPI_GenStoryboardText
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenStoryboardTextRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenStoryboardTextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GenerateRoleAvatar:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 生成角色头像
                / 使用AI为故事角色生成个性化头像图片
                / HTTP POST /common.TeamsAPI/GenerateRoleAvatar
                / 请求体：GenerateRoleAvatarRequest (JSON，包含角色描述和风格)
                / 响应：GenerateRoleAvatarResponse (JSON，返回头像URL)
            operationId: TeamsAPI_GenerateRoleAvatar
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateRoleAvatarRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateRoleAvatarResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GenerateRoleDescription:
        post:
            tags:
                - TeamsAPI
            description: "/ 生成角色描述\n/ \n/ 【功能说明】\n/ 使用AI为角色生成详细的背景描述和性格特征\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GenerateRoleDescription\n/ - 请求体：GenerateRoleDescriptionRequest (JSON)\n/ - 响应：GenerateRoleDescriptionResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,             // [必填] 故事ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"role_id\": 789,              // [必填] 角色ID\n/   \"description\": \"基础描述\"    // [可选] 基础描述（AI会扩展）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - character_detail: AI生成的详细角色描述"
            operationId: TeamsAPI_GenerateRoleDescription
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateRoleDescriptionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateRoleDescriptionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GenerateRolePrompt:
        post:
            tags:
                - TeamsAPI
            description: "/ 生成角色提示词\n/ \n/ 【功能说明】\n/ 使用AI为角色生成优化的图片生成提示词\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GenerateRolePrompt\n/ - 请求体：GenerateRolePromptRequest (JSON)\n/ - 响应：GenerateRolePromptResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,             // [必填] 故事ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"role_id\": 789,              // [必填] 角色ID\n/   \"prompt\": \"基础提示词\"       // [可选] 基础提示词（AI会优化）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - prompt: AI生成的优化提示词"
            operationId: TeamsAPI_GenerateRolePrompt
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateRolePromptRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateRolePromptResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GenerateStoryRolePoster:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 生成角色海报图片
                / 为故事角色生成精美的宣传海报
                / HTTP POST /common.TeamsAPI/GenerateStoryRolePoster
                / 请求体：GenerateStoryRolePosterRequest (JSON，包含生成参数和风格)
                / 响应：GenerateStoryRolePosterResponse (JSON，返回海报URL和ID)
            operationId: TeamsAPI_GenerateStoryRolePoster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateStoryRolePosterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateStoryRolePosterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GenerateStoryRoleVideo:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 生成故事角色视频
                / 为故事角色生成动态宣传视频
                / HTTP POST /common.TeamsAPI/GenerateStoryRoleVideo
                / 请求体：GenerateStoryRoleVideoRequest (JSON，包含视频参数和风格)
                / 响应：GenerateStoryRoleVideoResponse (JSON，返回任务详情和视频URL)
            operationId: TeamsAPI_GenerateStoryRoleVideo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateStoryRoleVideoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateStoryRoleVideoResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GenerateStorySceneVideo:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 生成故事场景视频
                / 为指定的故事场景生成动态视频内容，支持自定义提示词和风格
                / HTTP POST /common.TeamsAPI/GenerateStorySceneVideo
                / 请求体：GenerateStorySceneVideoRequest (JSON，包含场景ID、提示词和token来源)
                / 响应：GenerateStorySceneVideoResponse (JSON，返回生成任务详情和视频URL)
            operationId: TeamsAPI_GenerateStorySceneVideo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateStorySceneVideoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateStorySceneVideoResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetFollowList:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取用户关注列表
                / 获取用户关注的所有其他用户列表
                / HTTP POST /common.TeamsAPI/GetFollowList
                / 请求体：GetFollowListRequest (JSON，包含用户ID和分页参数)
                / 响应：GetFollowListResponse (JSON，返回关注的用户列表)
            operationId: TeamsAPI_GetFollowList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetFollowListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFollowListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetFollowerList:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取用户粉丝列表
                / 获取关注该用户的所有粉丝列表
                / HTTP POST /common.TeamsAPI/GetFollowerList
                / 请求体：GetFollowerListRequest (JSON，包含用户ID和分页参数)
                / 响应：GetFollowerListResponse (JSON，返回粉丝用户列表)
            operationId: TeamsAPI_GetFollowerList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetFollowerListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFollowerListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetGroup:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取群组信息
                / 获取指定群组的详细信息，支持同时获取资料信息
                / HTTP POST /common.TeamsAPI/GetGroup
                / 请求体：GetGroupRequest (JSON，包含群组ID和是否获取资料标志)
                / 响应：GetGroupResponse (JSON，返回群组详细信息)
            operationId: TeamsAPI_GetGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGroupResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetGroupActives:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取群组动态
                / 获取群组内的最新活动动态
                / HTTP POST /common.TeamsAPI/GetGroupActives
                / 请求体：GetGroupActivesRequest (JSON，包含群组ID和分页参数)
                / 响应：GetGroupActivesResponse (JSON，返回群组活动列表)
            operationId: TeamsAPI_GetGroupActives
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetGroupActivesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGroupActivesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetGroupProfile:
        post:
            tags:
                - TeamsAPI
            description: GetGroupProfile retrieves the group's profile information
            operationId: TeamsAPI_GetGroupProfile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetGroupProfileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGroupProfileResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetNextStoryboards:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取下一个故事板\n/ \n/ 【功能说明】\n/ 根据当前故事板ID获取后续的故事板，支持多分支场景\n/ \n/ 【多分支说明】\n/ - 如果有多个分叉，则返回所有分支\n/ - 返回is_multi_branch标记位，标识是否为多分支\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetNextStoryboards\n/ - 请求体：GetNextStoryboardRequest (JSON)\n/ - 响应：GetNextStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,        // [必填] 当前故事板ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"story_id\": 789,             // [必填] 所属故事ID\n/   \"is_multi_branch\": false,    // [可选] 是否多分支模式\n/   \"offset\": 0,                 // [可选] 分页偏移量（多分支时使用）\n/   \"page_size\": 20,             // [可选] 每页数量\n/   \"order_by\": \"CREATE_TIME\"    // [可选] 排序方式\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - storyboards: 后续故事板列表\n/ - is_multi_branch: 是否为多分支\n/ - total: 分支总数"
            operationId: TeamsAPI_GetNextStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetNextStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetNextStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryBoardCommentReplies:
        post:
            tags:
                - TeamsAPI
            description: 获取故事板评论回复
            operationId: TeamsAPI_GetStoryBoardCommentReplies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryBoardCommentRepliesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryBoardCommentRepliesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryBoardComments:
        post:
            tags:
                - TeamsAPI
            description: 获取故事板评论
            operationId: TeamsAPI_GetStoryBoardComments
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryBoardCommentsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryBoardCommentsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryBoardGenerate:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取故事板生成状态\n/ \n/ 【功能说明】\n/ 查询故事板整体AI生成任务的状态\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetStoryBoardGenerate\n/ - 请求体：GetStoryBoardGenerateRequest (JSON)\n/ - 响应：GetStoryBoardGenerateResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,    // [必填] 故事板ID\n/   \"user_id\": 456,          // [必填] 用户ID\n/   \"task_id\": \"task_789\"    // [可选] 任务ID\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - status: 整体生成状态\n/ - progress: 总体进度百分比\n/ - scene_status: 各场景的生成状态列表"
            operationId: TeamsAPI_GetStoryBoardGenerate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryBoardGenerateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryBoardGenerateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryBoardRoles:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取故事板角色列表\n/ \n/ 【功能说明】\n/ 获取指定故事板中出现的所有角色\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetStoryBoardRoles\n/ - 请求体：GetStoryBoardRolesRequest (JSON)\n/ - 响应：GetStoryBoardRolesResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,    // [必填] 故事板ID\n/   \"user_id\": 456,          // [必填] 用户ID\n/   \"story_id\": 789          // [必填] 所属故事ID\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - roles: 角色列表\n/ - total: 角色总数"
            operationId: TeamsAPI_GetStoryBoardRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryBoardRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryBoardRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryBoardSenceGenerate:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取场景生成状态\n/ \n/ 【功能说明】\n/ 查询场景AI生成任务的实时状态和进度\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetStoryBoardSenceGenerate\n/ - 请求体：GetStoryBoardSenceGenerateRequest (JSON)\n/ - 响应：GetStoryBoardSenceGenerateResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"scene_id\": 123,         // [必填] 场景ID\n/   \"user_id\": 456,          // [必填] 用户ID\n/   \"task_id\": \"task_789\"    // [可选] 任务ID（查询特定任务）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - status: 生成状态（0-队列中，1-生成中，2-完成，3-失败）\n/ - progress: 进度百分比（0-100）\n/ - result_url: 生成结果URL（完成时）"
            operationId: TeamsAPI_GetStoryBoardSenceGenerate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryBoardSenceGenerateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryBoardSenceGenerateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryBoardSences:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取故事板场景列表\n/ \n/ 【功能说明】\n/ 获取指定故事板的所有场景\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetStoryBoardSences\n/ - 请求体：GetStoryBoardSencesRequest (JSON)\n/ - 响应：GetStoryBoardSencesResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,    // [必填] 故事板ID\n/   \"user_id\": 456           // [必填] 用户ID\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - scenes: 场景列表（按顺序排列）"
            operationId: TeamsAPI_GetStoryBoardSences
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryBoardSencesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryBoardSencesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryCommentReplies:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取故事评论回复列表
                / 获取指定评论的所有回复
                / HTTP POST /common.TeamsAPI/GetStoryCommentReplies
                / 请求体：GetStoryCommentRepliesRequest (JSON，包含评论ID和分页参数)
                / 响应：GetStoryCommentRepliesResponse (JSON，返回回复列表)
            operationId: TeamsAPI_GetStoryCommentReplies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryCommentRepliesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryCommentRepliesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryComments:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取故事评论列表
                / 分页获取指定故事的所有评论
                / HTTP POST /common.TeamsAPI/GetStoryComments
                / 请求体：GetStoryCommentsRequest (JSON，包含故事ID和分页参数)
                / 响应：GetStoryCommentsResponse (JSON，返回评论列表和分页信息)
            operationId: TeamsAPI_GetStoryComments
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryCommentsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryCommentsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryContributors:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取故事贡献者列表
                / 获取参与故事创作的所有贡献者，按贡献度排序
                / HTTP POST /common.TeamsAPI/GetStoryContributors
                / 请求体：GetStoryContributorsRequest (JSON，包含故事ID和分页参数)
                / 响应：GetStoryContributorsResponse (JSON，返回贡献者列表和VIP等级信息)
            operationId: TeamsAPI_GetStoryContributors
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryContributorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryContributorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryImageStyle:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取故事图片风格
                / 获取故事可用的所有图片生成风格列表
                / HTTP POST /common.TeamsAPI/GetStoryImageStyle
                / 请求体：GetStoryImageStyleRequest (JSON，包含故事ID)
                / 响应：GetStoryImageStyleResponse (JSON，返回风格列表和描述)
            operationId: TeamsAPI_GetStoryImageStyle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryImageStyleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryImageStyleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryInfo:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取故事信息\n/ \n/ 【功能说明】\n/ 获取指定故事的详细信息，包括统计数据\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetStoryInfo\n/ - 请求体：GetStoryInfoRequest (JSON)\n/ - 响应：GetStoryInfoResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,     // [必填] 故事ID\n/   \"user_id\": 456       // [必填] 请求用户ID（用于权限验证）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - story: 故事详细信息\n/ - stats: 统计数据（浏览、点赞、评论数等）"
            operationId: TeamsAPI_GetStoryInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryInfoResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryParticipants:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取故事参与者列表
                / 获取参与故事创作和编辑的所有用户列表
                / HTTP POST /common.TeamsAPI/GetStoryParticipants
                / 请求体：GetStoryParticipantsRequest (JSON，包含故事ID和分页参数)
                / 响应：GetStoryParticipantsResponse (JSON，返回参与者用户列表)
            operationId: TeamsAPI_GetStoryParticipants
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryParticipantsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryParticipantsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryRoleDetail:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取角色详情
                / 获取故事角色的完整详细信息
                / HTTP POST /common.TeamsAPI/GetStoryRoleDetail
                / 请求体：GetStoryRoleDetailRequest (JSON，包含角色ID)
                / 响应：GetStoryRoleDetailResponse (JSON，返回角色完整信息)
            operationId: TeamsAPI_GetStoryRoleDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryRoleDetailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryRoleDetailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryRoleList:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取故事角色列表
                / 获取指定故事的所有角色列表，支持搜索和筛选
                / HTTP POST /common.TeamsAPI/GetStoryRoleList
                / 请求体：GetStoryRoleListRequest (JSON，包含故事ID、搜索关键词和分页参数)
                / 响应：GetStoryRoleListResponse (JSON，返回角色列表和总数)
            operationId: TeamsAPI_GetStoryRoleList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryRoleListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryRoleListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryRolePosterList:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取角色海报列表
                / 获取指定故事角色的所有海报图片列表
                / HTTP POST /common.TeamsAPI/GetStoryRolePosterList
                / 请求体：GetStoryRolePosterListRequest (JSON，包含分页参数)
                / 响应：GetStoryRolePosterListResponse (JSON，返回海报列表)
            operationId: TeamsAPI_GetStoryRolePosterList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryRolePosterListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryRolePosterListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryRoleStories:
        post:
            tags:
                - TeamsAPI
            description: 获取角色参与的故事
            operationId: TeamsAPI_GetStoryRoleStories
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryRoleStoriesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryRoleStoriesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryRoleStoryboards:
        post:
            tags:
                - TeamsAPI
            description: 获取角色参与的故事板
            operationId: TeamsAPI_GetStoryRoleStoryboards
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryRoleStoryboardsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryRoleStoryboardsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryRoles:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取故事角色列表\n/ \n/ 【功能说明】\n/ 获取指定故事的所有角色列表\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetStoryRoles\n/ - 请求体：GetStoryRolesRequest (JSON)\n/ - 响应：GetStoryRolesResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,         // [必填] 故事ID\n/   \"user_id\": 456,          // [必填] 用户ID\n/   \"offset\": 0,             // [可选] 分页偏移量，默认0\n/   \"page_size\": 20,         // [可选] 每页数量，默认20\n/   \"include_detail\": false  // [可选] 是否包含详细信息，默认false\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - roles: 角色列表\n/ - total: 总数量"
            operationId: TeamsAPI_GetStoryRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取故事板\n/ \n/ 【功能说明】\n/ 获取指定故事板的详细信息和内容\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetStoryboard\n/ - 请求体：GetStoryboardRequest (JSON)\n/ - 响应：GetStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,    // [必填] 故事板ID\n/   \"user_id\": 456,          // [必填] 请求用户ID\n/   \"include_scenes\": true   // [可选] 是否包含场景信息，默认false\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - storyboard: 故事板详细信息\n/ - scenes: 场景列表（如果 include_scenes=true）"
            operationId: TeamsAPI_GetStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetStoryboards:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取故事板列表\n/ \n/ 【功能说明】\n/ 获取指定故事的所有故事板列表\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetStoryboards\n/ - 请求体：GetStoryboardsRequest (JSON)\n/ - 响应：GetStoryboardsResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,         // [必填] 故事ID\n/   \"user_id\": 456,          // [必填] 用户ID\n/   \"status\": 1,             // [可选] 状态筛选（0-全部，1-已发布，2-草稿）\n/   \"offset\": 0,             // [可选] 分页偏移量，默认0\n/   \"page_size\": 20          // [可选] 每页数量，默认20\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - storyboards: 故事板列表\n/ - total: 总数量\n/ - have_more: 是否有更多数据"
            operationId: TeamsAPI_GetStoryboards
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryboardsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryboardsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetUnPublishStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取未发布故事板列表\n/ \n/ 【功能说明】\n/ 获取用户所有未发布（草稿）状态的故事板\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetUnPublishStoryboard\n/ - 请求体：GetUnPublishStoryboardRequest (JSON)\n/ - 响应：GetUnPublishStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,          // [必填] 用户ID\n/   \"offset\": 0,             // [可选] 分页偏移量\n/   \"page_size\": 20          // [可选] 每页数量\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - storyboardactives: 草稿故事板列表\n/ - total: 总数量"
            operationId: TeamsAPI_GetUnPublishStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetUnPublishStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUnPublishStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetUserChatMessages:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取用户的消息列表
                / 获取指定聊天会话中的所有消息记录
                / HTTP POST /common.TeamsAPI/GetUserChatMessages
                / 请求体：GetUserChatMessagesRequest (JSON，包含聊天ID和时间戳)
                / 响应：GetUserChatMessagesResponse (JSON，返回消息列表)
            operationId: TeamsAPI_GetUserChatMessages
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetUserChatMessagesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserChatMessagesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetUserChatWithRole:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取用户与角色的对话
                / 获取用户与指定角色的完整聊天记录
                / HTTP POST /common.TeamsAPI/GetUserChatWithRole
                / 请求体：GetUserChatWithRoleRequest (JSON，包含角色ID和用户ID)
                / 响应：GetUserChatWithRoleResponse (JSON，返回聊天消息列表和上下文)
            operationId: TeamsAPI_GetUserChatWithRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetUserChatWithRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserChatWithRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetUserCreatedRoles:
        post:
            tags:
                - TeamsAPI
            description: 获取用户创建的角色
            operationId: TeamsAPI_GetUserCreatedRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetUserCreatedRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserCreatedRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetUserCreatedStoryboards:
        post:
            tags:
                - TeamsAPI
            description: 获取用户创建的故事板
            operationId: TeamsAPI_GetUserCreatedStoryboards
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetUserCreatedStoryboardsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserCreatedStoryboardsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetUserProfile:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取用户资料
                / 获取指定用户的详细个人资料信息
                / HTTP POST /common.TeamsAPI/GetUserProfile
                / 请求体：GetUserProfileRequest (JSON，包含用户ID)
                / 响应：GetUserProfileResponse (JSON，返回用户完整资料)
            operationId: TeamsAPI_GetUserProfile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetUserProfileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserProfileResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetUserWatchRoleActiveStoryBoards:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取用户关注角色的活跃故事板\n/ \n/ 【功能说明】\n/ 获取用户关注的角色参与的最近活跃故事板\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetUserWatchRoleActiveStoryBoards\n/ - 请求体：GetUserWatchRoleActiveStoryBoardsRequest (JSON)\n/ - 响应：GetUserWatchRoleActiveStoryBoardsResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,              // [必填] 用户ID\n/   \"role_id\": 456,              // [必填] 角色ID\n/   \"offset\": 0,                 // [可选] 分页偏移量\n/   \"page_size\": 20,             // [可选] 每页数量\n/   \"filter\": \"all\"              // [可选] 筛选条件\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - storyboards: 活跃故事板列表\n/ - total: 总数量"
            operationId: TeamsAPI_GetUserWatchRoleActiveStoryBoards
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetUserWatchRoleActiveStoryBoardsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserWatchRoleActiveStoryBoardsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetUserWatchStoryActiveStoryBoards:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取用户关注故事的活跃故事板\n/ \n/ 【功能说明】\n/ 获取用户关注的故事中最近活跃的故事板\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GetUserWatchStoryActiveStoryBoards\n/ - 请求体：GetUserWatchStoryActiveStoryBoardsRequest (JSON)\n/ - 响应：GetUserWatchStoryActiveStoryBoardsResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,              // [必填] 用户ID\n/   \"story_id\": 456,             // [必填] 故事ID\n/   \"offset\": 0,                 // [可选] 分页偏移量\n/   \"page_size\": 20,             // [可选] 每页数量\n/   \"filter\": \"published\"        // [可选] 筛选条件（published/draft）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - storyboards: 活跃故事板列表\n/ - total: 总数量"
            operationId: TeamsAPI_GetUserWatchStoryActiveStoryBoards
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetUserWatchStoryActiveStoryBoardsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserWatchStoryActiveStoryBoardsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GetUserWithRoleChatList:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取用户的对话列表
                / 获取用户与各个角色的所有聊天会话列表
                / HTTP POST /common.TeamsAPI/GetUserWithRoleChatList
                / 请求体：GetUserWithRoleChatListRequest (JSON，包含用户ID和分页参数)
                / 响应：GetUserWithRoleChatListResponse (JSON，返回聊天会话列表)
            operationId: TeamsAPI_GetUserWithRoleChatList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetUserWithRoleChatListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserWithRoleChatListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/GroupActiveHeatmap:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取群组活跃热力图\n/ \n/ 【功能说明】\n/ 获取指定群组在指定时间范围内的活跃度数据，展示群组整体活跃情况\n/ \n/ 【数据统计】\n/ - 统计群组内所有成员的活跃操作\n/ - 包括故事创建、故事板发布、评论互动等\n/ - 返回活跃成员数量统计\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/GroupActiveHeatmap\n/ - 请求体：GroupActiveHeamapRequest (JSON)\n/ - 响应：GroupActiveHeamapResponse (JSON)\n/ \n/ 【请求参数】\n/ - group_id: [必填] 群组ID\n/ - user_id: [必填] 请求用户ID（用于权限验证）\n/ - start_time: [必填] 开始时间戳（秒）\n/ - end_time: [必填] 结束时间戳（秒）\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - data: 热力图数据数组\n/ - total_count: 群组总活跃次数\n/ - member_count: 参与活跃的成员数量\n/ \n/ 【权限要求】\n/ - 用户必须是群组成员才能查看\n/ \n/ 【使用场景】\n/ - 群组主页展示活跃度\n/ - 分析群组健康度\n/ - 活跃群组排行"
            operationId: TeamsAPI_GroupActiveHeatmap
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GroupActiveHeamapRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GroupActiveHeamapResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/JoinGroup:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 加入群组
                / 用户申请加入指定群组，成为群组成员
                / HTTP POST /common.TeamsAPI/JoinGroup
                / 请求体：JoinGroupRequest (JSON，包含群组ID和用户ID)
                / 响应：JoinGroupResponse (JSON)
            operationId: TeamsAPI_JoinGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/JoinGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JoinGroupResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/LeaveGroup:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 离开群组
                / 用户退出指定群组，解除成员关系
                / HTTP POST /common.TeamsAPI/LeaveGroup
                / 请求体：LeaveGroupRequest (JSON，包含群组ID和用户ID)
                / 响应：LeaveGroupResponse (JSON)
            operationId: TeamsAPI_LeaveGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LeaveGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LeaveGroupResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/LikeComment:
        post:
            tags:
                - TeamsAPI
            description: 点赞故事评论
            operationId: TeamsAPI_LikeComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LikeCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LikeCommentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/LikeStory:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 点赞故事
                / 为故事点赞表示喜欢，增加故事人气
                / HTTP POST /common.TeamsAPI/LikeStory
                / 请求体：LikeStoryRequest (JSON，包含故事ID和用户ID)
                / 响应：LikeStoryResponse (JSON)
            operationId: TeamsAPI_LikeStory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LikeStoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LikeStoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/LikeStoryRole:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 点赞故事角色
                / 为故事角色点赞，表达对角色的喜爱
                / HTTP POST /common.TeamsAPI/LikeStoryRole
                / 请求体：LikeStoryRoleRequest (JSON，包含角色ID和用户ID)
                / 响应：LikeStoryRoleResponse (JSON)
            operationId: TeamsAPI_LikeStoryRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LikeStoryRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LikeStoryRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/LikeStoryRolePoster:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 点赞角色海报
                / 为角色海报点赞，增加人气值
                / HTTP POST /common.TeamsAPI/LikeStoryRolePoster
                / 请求体：LikeStoryRolePosterRequest (JSON)
                / 响应：LikeStoryRolePosterResponse (JSON，返回最新点赞数)
            operationId: TeamsAPI_LikeStoryRolePoster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LikeStoryRolePosterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LikeStoryRolePosterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/LikeStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 点赞故事板\n/ \n/ 【功能说明】\n/ 为故事板点赞，表达对内容的喜欢\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/LikeStoryboard\n/ - 请求体：LikeStoryboardRequest (JSON)\n/ - 响应：LikeStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,    // [必填] 故事板ID\n/   \"user_id\": 456           // [必填] 点赞用户ID\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - like_count: 最新点赞总数"
            operationId: TeamsAPI_LikeStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LikeStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LikeStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/Login:
        post:
            tags:
                - TeamsAPI
            description: "/ 用户登录\n/ \n/ 【功能说明】\n/ 验证用户凭据并创建会话，支持多种登录方式\n/ \n/ 【支持的登录方式】\n/ - 密码登录：使用账号+密码\n/ - 验证码登录：使用手机号+验证码\n/ - 第三方登录：OAuth2.0授权登录\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/Login\n/ - 请求体：LoginRequest (JSON)\n/ - 响应：LoginResponse (JSON)\n/ \n/ 【请求参数】\n/ - account: [必填] 账号（邮箱/手机号/用户名）\n/ - password: [必填] 密码\n/ - login_type: [必填] 登录类型（1-3）\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - msg: 响应消息\n/ - data.user_id: 用户ID\n/ - data.token: 访问令牌（JWT格式）\n/ - data.expire_at: token过期时间戳\n/ \n/ 【使用示例】\n/ ```json\n/ {\n/   \"account\": \"user@example.com\",\n/   \"password\": \"password123\",\n/   \"login_type\": 1\n/ }\n/ ```"
            operationId: TeamsAPI_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/Logout:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 用户登出
                / 使当前会话token失效，退出登录状态
                / HTTP POST /common.TeamsAPI/Logout
                / 请求体：LogoutRequest (JSON，包含token和用户ID)
                / 响应：LogoutResponse (JSON)
            operationId: TeamsAPI_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/PublishStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 发布故事板\n/ \n/ 【功能说明】\n/ 将草稿状态的故事板正式发布，其他用户可见\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/PublishStoryboard\n/ - 请求体：PublishStoryboardRequest (JSON)\n/ - 响应：PublishStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,    // [必填] 要发布的故事板ID\n/   \"user_id\": 456           // [必填] 用户ID（仅所有者可发布）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - publish_time: 发布时间戳"
            operationId: TeamsAPI_PublishStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PublishStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PublishStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/QueryGenTaskStatus:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 查询用户生成任务状态
                / 获取用户的所有AI生成任务的实时状态和进度
                / HTTP POST /common.TeamsAPI/QueryGenTaskStatus
                / 请求体：FetchUserGenTaskStatusRequest (JSON)
                / 响应：FetchUserGenTaskStatusResponse (JSON，包含任务列表和状态)
            operationId: TeamsAPI_FetchUserGenTaskStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FetchUserGenTaskStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FetchUserGenTaskStatusResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/QueryTaskStatus:
        post:
            tags:
                - TeamsAPI
            description: "/ 查询任务状态\n/ \n/ 【功能说明】\n/ 查询AI生成任务的实时状态和进度\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/QueryTaskStatus\n/ - 请求体：QueryTaskStatusRequest (JSON)\n/ - 响应：QueryTaskStatusResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"task_id\": \"task_12345\",     // [必填] 任务ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"task_type\": 1               // [可选] 任务类型（1-图片，2-视频，3-文本）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - status: 任务状态（0-队列中，1-进行中，2-完成，3-失败）\n/ - progress: 进度百分比（0-100）\n/ - result_data: 任务结果数据（完成时）\n/ - error_message: 错误消息（失败时）"
            operationId: TeamsAPI_QueryTaskStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/QueryTaskStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/QueryTaskStatusResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/RefreshToken:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 刷新访问令牌
                / 使用当前有效token生成新的访问令牌，延长会话时间
                / HTTP POST /common.TeamsAPI/RefreshToken
                / 请求体：RefreshTokenRequest (JSON，包含当前token)
                / 响应：RefreshTokenResponse (JSON，返回新的token和用户ID)
            operationId: TeamsAPI_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RefreshTokenResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/Register:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 用户注册
                / 创建新的用户账号，需要提供账号、密码、邮箱等信息
                / HTTP POST /common.TeamsAPI/Register
                / 请求体：RegisterRequest (JSON，包含账号、密码、昵称、邮箱、手机号)
                / 响应：RegisterResponse (JSON)
            operationId: TeamsAPI_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/RenderStory:
        post:
            tags:
                - TeamsAPI
            description: "/ 渲染故事\n/ \n/ 【功能说明】\n/ 使用AI为故事生成内容、角色、场景等\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/RenderStory\n/ - 请求体：RenderStoryRequest (JSON)\n/ - 响应：RenderStoryResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,             // [必填] 故事ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"prompt\": \"渲染提示词\",      // [可选] AI生成提示\n/   \"render_type\": 1             // [可选] 渲染类型（1-完整，2-增量）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - render_id: 渲染任务ID\n/ - status: 任务状态"
            operationId: TeamsAPI_RenderStory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenderStoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenderStoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/RenderStoryBoardSence:
        post:
            tags:
                - TeamsAPI
            description: "/ 渲染故事板指定场景\n/ \n/ 【功能说明】\n/ 使用AI为单个场景生成图片\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/RenderStoryBoardSence\n/ - 请求体：RenderStoryBoardSenceRequest (JSON)\n/ - 响应：RenderStoryBoardSenceResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"scene_id\": 123,             // [必填] 场景ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"storyboard_id\": 789,        // [必填] 所属故事板ID\n/   \"prompt\": \"渲染提示\",        // [可选] AI生成提示词\n/   \"style_id\": 5,               // [可选] 图片风格ID\n/   \"quality\": \"high\"            // [可选] 图片质量\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - image_url: 生成的场景图片URL\n/ - task_id: 渲染任务ID"
            operationId: TeamsAPI_RenderStoryBoardSence
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenderStoryBoardSenceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenderStoryBoardSenceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/RenderStoryBoardSences:
        post:
            tags:
                - TeamsAPI
            description: "/ 批量渲染故事板场景\n/ \n/ 【功能说明】\n/ 使用AI为故事板的所有场景批量生成图片\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/RenderStoryBoardSences\n/ - 请求体：RenderStoryBoardSencesRequest (JSON)\n/ - 响应：RenderStoryBoardSencesResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,        // [必填] 故事板ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"scene_ids\": [1, 2, 3],      // [可选] 要渲染的场景ID列表（不提供则渲染全部）\n/   \"style_id\": 5,               // [可选] 统一图片风格ID\n/   \"quality\": \"high\"            // [可选] 图片质量\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - task_ids: 批量渲染任务ID列表\n/ - estimated_time: 预计完成时间（秒）"
            operationId: TeamsAPI_RenderStoryBoardSences
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenderStoryBoardSencesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenderStoryBoardSencesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/RenderStoryRole:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 渲染生成角色图片
                / 使用AI为故事角色生成高质量的形象图片
                / HTTP POST /common.TeamsAPI/RenderStoryRole
                / 请求体：RenderStoryRoleRequest (JSON，包含渲染提示词和参考图片)
                / 响应：RenderStoryRoleResponse (JSON，返回渲染详情和图片URL)
            operationId: TeamsAPI_RenderStoryRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenderStoryRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenderStoryRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/RenderStoryRoleContinuously:
        post:
            tags:
                - TeamsAPI
            description: "/ 持续渲染故事角色\n/ \n/ 【功能说明】\n/ 持续优化和迭代角色形象，直到达到满意效果\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/RenderStoryRoleContinuously\n/ - 请求体：RenderStoryRoleContinuouslyRequest (JSON)\n/ - 响应：RenderStoryRoleContinuouslyResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"role_id\": 123,              // [必填] 角色ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"story_id\": 789,             // [必填] 故事ID\n/   \"prompt\": \"优化提示\",        // [可选] 优化方向的提示词\n/   \"reference_image\": \"参考图\"  // [可选] 参考图片URL\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - detail: 渲染详情对象\n/ - have_more: 是否还有更多迭代空间"
            operationId: TeamsAPI_RenderStoryRoleContinuously
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenderStoryRoleContinuouslyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenderStoryRoleContinuouslyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/RenderStoryRoleDetail:
        post:
            tags:
                - TeamsAPI
            description: "/ 渲染故事角色详情\n/ \n/ 【功能说明】\n/ 使用AI为角色生成详细的背景故事和性格特征\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/RenderStoryRoleDetail\n/ - 请求体：RenderStoryRoleDetailRequest (JSON)\n/ - 响应：RenderStoryRoleDetailResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"role_id\": 123,              // [必填] 角色ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"story_id\": 789,             // [必填] 所属故事ID\n/   \"detail_type\": 1,            // [可选] 详情类型（1-完整，2-简要）\n/   \"prompt\": \"生成提示\"         // [可选] AI生成提示词\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - character_detail: 角色详细信息对象\n/ - render_id: 渲染任务ID"
            operationId: TeamsAPI_RenderStoryRoleDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenderStoryRoleDetailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenderStoryRoleDetailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/RenderStoryRoles:
        post:
            tags:
                - TeamsAPI
            description: 渲���故事角色
            operationId: TeamsAPI_RenderStoryRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenderStoryRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenderStoryRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/RenderStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 渲染故事板\n/ \n/ 【功能说明】\n/ 使用AI为故事板生成场景、对话和图片\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/RenderStoryboard\n/ - 请求体：RenderStoryboardRequest (JSON)\n/ - 响应：RenderStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,        // [必填] 故事板ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"story_id\": 789,             // [必填] 所属故事ID\n/   \"prompt\": \"渲染提示\",        // [可选] AI生成提示词\n/   \"render_scenes\": true,       // [可选] 是否渲染场景，默认true\n/   \"render_images\": true        // [可选] 是否生成图片，默认true\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - render_id: 渲染任务ID\n/ - status: 渲染状态\n/ - progress: 渲染进度（0-100）"
            operationId: TeamsAPI_RenderStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RenderStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RenderStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/ResetPwd:
        post:
            tags:
                - TeamsAPI
            description: "/ 重置密码\n/ \n/ 【功能说明】\n/ 允许用户重置登录密码，需要验证原密码\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/ResetPwd\n/ - 请求体：ResetPasswordRequest (JSON)\n/ - 响应：ResetPasswordResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"account\": \"用户账号（邮箱/手机号/用户名）\",\n/   \"oldPwd\": \"原密码（用于验证身份）\",\n/   \"newPwd\": \"新密码（6-128字符）\"\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - account: 用户账号\n/ - status: 重置状态（0-成功）\n/ - timestamp: 操作时间戳"
            operationId: TeamsAPI_ResetPwd
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResetPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResetPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/RestoreStoryboard:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 恢复故事板状态
                / 从草稿或历史版本恢复故事板到指定状态
                / HTTP POST /common.TeamsAPI/RestoreStoryboard
                / 请求体：RestoreStoryboardRequest (JSON，包含故事板ID和版本信息)
                / 响应：RestoreStoryboardResponse (JSON，返回恢复后的完整故事板数据)
            operationId: TeamsAPI_RestoreStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RestoreStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RestoreStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/SaveStoryboardCraft:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 保存故事板草稿
                / 将当前故事板保存为草稿，便于后续继续编辑
                / HTTP POST /common.TeamsAPI/SaveStoryboardCraft
                / 请求体：SaveStoryboardCraftRequest (JSON，包含故事板ID)
                / 响应：SaveStoryboardCraftResponse (JSON)
            operationId: TeamsAPI_SaveStoryboardCraft
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SaveStoryboardCraftRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SaveStoryboardCraftResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/SearchGroup:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 搜索群组
                / 根据名称搜索群组，支持模糊搜索
                / HTTP POST /common.TeamsAPI/SearchGroup
                / 请求体：SearchGroupRequest (JSON，包含搜索关键词和范围)
                / 响应：SearchGroupResponse (JSON，返回匹配的群组列表)
            operationId: TeamsAPI_SearchGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchGroupResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/SearchRoles:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 搜索故事角色
                / 根据关键词搜索故事角色，支持在故事内或全局搜索
                / HTTP POST /common.TeamsAPI/SearchRoles
                / 请求体：SearchRolesRequest (JSON，包含关键词、范围和分页参数)
                / 响应：SearchRolesResponse (JSON，返回匹配的角色列表)
            operationId: TeamsAPI_SearchRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/SearchStories:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 搜索故事
                / 根据关键词搜索故事，支持全局搜索和群组内搜索
                / HTTP POST /common.TeamsAPI/SearchStories
                / 请求体：SearchStoriesRequest (JSON，包含关键词、范围和分页参数)
                / 响应：SearchStoriesResponse (JSON，返回匹配的故事列表)
            operationId: TeamsAPI_SearchStories
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchStoriesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchStoriesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/SearchUser:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 搜索用户
                / 根据名称搜索用户，支持模糊搜索和精确匹配
                / HTTP POST /common.TeamsAPI/SearchUser
                / 请求体：SearchUserRequest (JSON，包含搜索关键词、群组ID和分页参数)
                / 响应：SearchUserResponse (JSON，返回匹配的用户列表)
            operationId: TeamsAPI_SearchUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SearchUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/ShareStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 分享故事板\n/ \n/ 【功能说明】\n/ 生成故事板的分享链接，便于在社交媒体传播\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/ShareStoryboard\n/ - 请求体：ShareStoryboardRequest (JSON)\n/ - 响应：ShareStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,        // [必填] 故事板ID\n/   \"user_id\": 456,              // [必填] 分享用户ID\n/   \"platform\": \"wechat\",        // [可选] 分享平台（wechat/weibo/twitter等）\n/   \"include_images\": true       // [可选] 是否包含图片预览，默认true\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - share_url: 分享链接URL\n/ - qr_code: 二维码图片URL（可选）\n/ - share_id: 分享记录ID"
            operationId: TeamsAPI_ShareStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ShareStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ShareStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/StoryBoardRender/list:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取故事板渲染记录\n/ \n/ 【功能说明】\n/ 获取故事板的所有AI渲染记录和历史\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/StoryBoardRender/list\n/ - 请求体：GetStoryBoardRenderRequest (JSON)\n/ - 响应：GetStoryBoardRenderResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,        // [必填] 故事板ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"render_status\": 0,          // [可选] 渲染状态筛选\n/   \"render_type\": 0,            // [可选] 渲染类型筛选\n/   \"offset\": 0,                 // [可选] 分页偏移量\n/   \"page_size\": 20              // [可选] 每页数量\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - renders: 渲染记录列表\n/ - total: 总数量"
            operationId: TeamsAPI_GetStoryBoardRender
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryBoardRenderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryBoardRenderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/StoryRender/list:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取故事渲染记录\n/ \n/ 【功能说明】\n/ 获取故事的所有AI渲染记录和历史\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/StoryRender/list\n/ - 请求体：GetStoryRenderRequest (JSON)\n/ - 响应：GetStoryRenderResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,             // [必填] 故事ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"render_status\": 0,          // [可选] 渲染状态筛选（0-全部，1-进行中，2-完成，3-失败）\n/   \"render_type\": 0,            // [可选] 渲染类型筛选（0-全部，1-角色，2-场景，3-文本）\n/   \"offset\": 0,                 // [可选] 分页偏移量\n/   \"page_size\": 20              // [可选] 每页数量\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - renders: 渲染记录列表\n/ - total: 总数量"
            operationId: TeamsAPI_GetStoryRender
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetStoryRenderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStoryRenderResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/TrendingStory:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取热门故事
                / 获取指定时间段内最热门的故事列表，按热度排序
                / HTTP POST /common.TeamsAPI/TrendingStory
                / 请求体：TrendingStoryRequest (JSON，包含时间范围和分页参数)
                / 响应：TrendingStoryResponse (JSON，返回热门故事列表)
            operationId: TeamsAPI_TrendingStory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TrendingStoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TrendingStoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/TrendingStoryRole:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取热门角色
                / 获取指定时间段内最热门的故事角色列表，按人气排序
                / HTTP POST /common.TeamsAPI/TrendingStoryRole
                / 请求体：TrendingStoryRoleRequest (JSON，包含时间范围和分页参数)
                / 响应：TrendingStoryRoleResponse (JSON，返回热门角色列表)
            operationId: TeamsAPI_TrendingStoryRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TrendingStoryRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TrendingStoryRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UnFollowStoryRole:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 取消关注故事角色
                / 取消对故事角色的关注，停止接收动态通知
                / HTTP POST /common.TeamsAPI/UnFollowStoryRole
                / 请求体：UnFollowStoryRoleRequest (JSON)
                / 响应：UnFollowStoryRoleResponse (JSON)
            operationId: TeamsAPI_UnFollowStoryRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnFollowStoryRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnFollowStoryRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UnLikeStory:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 取消点赞故事
                / 取消对故事的点赞
                / HTTP POST /common.TeamsAPI/UnLikeStory
                / 请求体：UnLikeStoryRequest (JSON)
                / 响应：UnLikeStoryResponse (JSON)
            operationId: TeamsAPI_UnLikeStory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnLikeStoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnLikeStoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UnLikeStoryRole:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 取消点赞故事角色
                / 取消对故事角色的点赞
                / HTTP POST /common.TeamsAPI/UnLikeStoryRole
                / 请求体：UnLikeStoryRoleRequest (JSON)
                / 响应：UnLikeStoryRoleResponse (JSON)
            operationId: TeamsAPI_UnLikeStoryRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnLikeStoryRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnLikeStoryRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UnLikeStoryRolePoster:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 取消点赞角色海报
                / 取消对角色海报的点赞
                / HTTP POST /common.TeamsAPI/UnLikeStoryRolePoster
                / 请求体：UnLikeStoryRolePosterRequest (JSON)
                / 响应：UnLikeStoryRolePosterResponse (JSON，返回最新点赞数)
            operationId: TeamsAPI_UnLikeStoryRolePoster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnLikeStoryRolePosterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnLikeStoryRolePosterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UnLikeStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 取消点赞故事板\n/ \n/ 【功能说明】\n/ 取消对故事板的点赞\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UnLikeStoryboard\n/ - 请求体：UnLikeStoryboardRequest (JSON)\n/ - 响应：UnLikeStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,    // [必填] 故事板ID\n/   \"user_id\": 456           // [必填] 用户ID\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - like_count: 最新点赞总数"
            operationId: TeamsAPI_UnLikeStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnLikeStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnLikeStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UnfollowUser:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 取消关注用户
                / 取消对另一个用户的关注，停止接收其动态
                / HTTP POST /common.TeamsAPI/UnfollowUser
                / 请求体：UnfollowUserRequest (JSON)
                / 响应：UnfollowUserResponse (JSON)
            operationId: TeamsAPI_UnfollowUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UnfollowUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnfollowUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateGroupInfo:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新群组信息
                / 更新群组的基本信息，如名称、描述等
                / HTTP POST /common.TeamsAPI/UpdateGroupInfo
                / 请求体：UpdateGroupInfoRequest (JSON，包含群组ID和更新信息)
                / 响应：UpdateGroupInfoResponse (JSON，返回更新后的群组信息)
            operationId: TeamsAPI_UpdateGroupInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGroupInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGroupInfoResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateGroupProfile:
        post:
            tags:
                - TeamsAPI
            description: UpdateGroupProfile updates the group's profile information
            operationId: TeamsAPI_UpdateGroupProfile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateGroupProfileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateGroupProfileResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateRoleDescription:
        post:
            tags:
                - TeamsAPI
            description: "/ 更新角色描述\n/ \n/ 【功能说明】\n/ 更新角色的文本描述信息\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UpdateRoleDescription\n/ - 请求体：UpdateRoleDescriptionRequest (JSON)\n/ - 响应：UpdateRoleDescriptionResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,              // [必填] 用户ID\n/   \"role_id\": 456,              // [必填] 角色ID\n/   \"description\": \"新的描述\"    // [必填] 新的角色描述（最大2000字符）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码"
            operationId: TeamsAPI_UpdateRoleDescription
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRoleDescriptionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRoleDescriptionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateRolePrompt:
        post:
            tags:
                - TeamsAPI
            description: "/ 更新角色提示词\n/ \n/ 【功能说明】\n/ 更新角色的AI图片生成提示词\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UpdateRolePrompt\n/ - 请求体：UpdateRolePromptRequest (JSON)\n/ - 响应：UpdateRolePromptResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,              // [必填] 用户ID\n/   \"role_id\": 456,              // [必填] 角色ID\n/   \"prompt\": \"新提示词\"         // [必填] 新的提示词（最大2000字符）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码"
            operationId: TeamsAPI_UpdateRolePrompt
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRolePromptRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRolePromptResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStory:
        post:
            tags:
                - TeamsAPI
            description: "/ 更新故事\n/ \n/ 【功能说明】\n/ 更新故事的基本信息和配置\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UpdateStory\n/ - 请求体：UpdateStoryRequest (JSON)\n/ - 响应：UpdateStoryResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,             // [必填] 故事ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"title\": \"新标题\",           // [可选] 故事标题\n/   \"description\": \"新简介\",     // [可选] 故事描述\n/   \"cover\": \"新封面URL\",        // [可选] 封面图片\n/   \"is_public\": true            // [可选] 公开状态\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - story: 更新后的故事信息"
            operationId: TeamsAPI_UpdateStory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryAvatar:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新故事头像
                / 更新故事的头像图片，用于故事展示
                / HTTP POST /common.TeamsAPI/UpdateStoryAvatar
                / 请求体：UpdateStoryAvatarRequest (JSON，包含新头像URL)
                / 响应：UpdateStoryAvatarResponse (JSON)
            operationId: TeamsAPI_UpdateStoryAvatar
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryAvatarRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryAvatarResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryBoardSence:
        post:
            tags:
                - TeamsAPI
            description: "/ 更新故事板场景\n/ \n/ 【功能说明】\n/ 更新场景的内容和配置\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UpdateStoryBoardSence\n/ - 请求体：UpdateStoryBoardSenceRequest (JSON)\n/ - 响应：UpdateStoryBoardSenceResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"scene_id\": 123,             // [必填] 场景ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"title\": \"新标题\",           // [可选] 场景标题\n/   \"description\": \"新描述\",     // [可选] 场景描述\n/   \"image_url\": \"新图片URL\"     // [可选] 场景图片\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - scene: 更新后的场景信息"
            operationId: TeamsAPI_UpdateStoryBoardSence
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryBoardSenceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryBoardSenceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryCover:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新故事封面
                / 更新故事的封面图片，支持使用AI生成的封面
                / HTTP POST /common.TeamsAPI/UpdateStoryCover
                / 请求体：UpdateStoryCoverRequest (JSON，包含封面URL和AI生成标志)
                / 响应：UpdateStoryCoverResponse (JSON)
            operationId: TeamsAPI_UpdateStoryCover
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryCoverRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryCoverResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryImageStyle:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新故事图片风格
                / 设置故事使用的图片生成风格
                / HTTP POST /common.TeamsAPI/UpdateStoryImageStyle
                / 请求体：UpdateStoryImageStyleRequest (JSON，包含风格ID和名称)
                / 响应：UpdateStoryImageStyleResponse (JSON)
            operationId: TeamsAPI_UpdateStoryImageStyle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryImageStyleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryImageStyleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryRole:
        post:
            tags:
                - TeamsAPI
            description: "/ 更新故事角色\n/ \n/ 【功能说明】\n/ 更新故事角色的基本信息\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UpdateStoryRole\n/ - 请求体：UpdateStoryRoleRequest (JSON)\n/ - 响应：UpdateStoryRoleResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"role_id\": 123,              // [必填] 角色ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"name\": \"新角色名\",          // [可选] 角色名称\n/   \"description\": \"角色描述\",   // [可选] 角色描述\n/   \"avatar\": \"头像URL\"          // [可选] 角色头像\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - role: 更新后的角色信息"
            operationId: TeamsAPI_UpdateStoryRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryRoleAvator:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新角色头像
                / 更新故事角色的头像图片
                / HTTP POST /common.TeamsAPI/UpdateStoryRoleAvator
                / 请求体：UpdateStoryRoleAvatorRequest (JSON，包含新头像URL)
                / 响应：UpdateStoryRoleAvatorResponse (JSON)
            operationId: TeamsAPI_UpdateStoryRoleAvator
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryRoleAvatorRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryRoleAvatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryRoleDescriptionDetail:
        post:
            tags:
                - TeamsAPI
            description: "/ 更新故事角色描述详情\n/ \n/ 【功能说明】\n/ 更新角色的完整详细描述信息（CharacterDetail对象）\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UpdateStoryRoleDescriptionDetail\n/ - 请求体：UpdateStoryRoleDescriptionDetailRequest (JSON)\n/ - 响应：UpdateStoryRoleDescriptionDetailResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,             // [必填] 故事ID\n/   \"role_id\": 456,              // [必填] 角色ID\n/   \"user_id\": 789,              // [必填] 用户ID\n/   \"character_detail\": {        // [必填] 角色详细信息对象\n/     \"personality\": \"性格特征\",\n/     \"background\": \"背景故事\",\n/     \"abilities\": \"能力列表\"\n/   }\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码"
            operationId: TeamsAPI_UpdateStoryRoleDescriptionDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryRoleDescriptionDetailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryRoleDescriptionDetailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryRoleDetail:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新角色详情
                / 更新故事角色的完整信息，包括描述、性格、能力等
                / HTTP POST /common.TeamsAPI/UpdateStoryRoleDetail
                / 请求体：UpdateStoryRoleDetailRequest (JSON，包含角色完整信息)
                / 响应：UpdateStoryRoleDetailResponse (JSON)
            operationId: TeamsAPI_UpdateStoryRoleDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryRoleDetailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryRoleDetailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryRolePoster:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新角色海报图片
                / 更新角色海报的图片或可见性设置
                / HTTP POST /common.TeamsAPI/UpdateStoryRolePoster
                / 请求体：UpdateStoryRolePosterRequest (JSON)
                / 响应：UpdateStoryRolePosterResponse (JSON)
            operationId: TeamsAPI_UpdateStoryRolePoster
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryRolePosterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryRolePosterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryRolePrompt:
        post:
            tags:
                - TeamsAPI
            description: "/ 更新故事角色提示词\n/ \n/ 【功能说明】\n/ 更新角色AI生成时使用的提示词\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UpdateStoryRolePrompt\n/ - 请求体：UpdateStoryRolePromptRequest (JSON)\n/ - 响应：UpdateStoryRolePromptResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,             // [必填] 故事ID\n/   \"role_id\": 456,              // [必填] 角色ID\n/   \"user_id\": 789,              // [必填] 用户ID\n/   \"prompt\": \"新提示词\"         // [必填] 新的提示词（最大2000字符）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码"
            operationId: TeamsAPI_UpdateStoryRolePrompt
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryRolePromptRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryRolePromptResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStorySenceMaxNumber:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新故事最大场景数
                / 设置故事允许创建的最大场景数量限制
                / HTTP POST /common.TeamsAPI/UpdateStorySenceMaxNumber
                / 请求体：UpdateStorySenceMaxNumberRequest (JSON，包含最大场景数)
                / 响应：UpdateStorySenceMaxNumberResponse (JSON)
            operationId: TeamsAPI_UpdateStorySenceMaxNumber
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStorySenceMaxNumberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStorySenceMaxNumberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryboard:
        post:
            tags:
                - TeamsAPI
            description: "/ 更新故事板\n/ \n/ 【功能说明】\n/ 更新故事板的内容和配置信息\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UpdateStoryboard\n/ - 请求体：UpdateStoryboardRequest (JSON)\n/ - 响应：UpdateStoryboardResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"storyboard_id\": 123,        // [必填] 故事板ID\n/   \"user_id\": 456,              // [必填] 用户ID\n/   \"title\": \"新标题\",           // [可选] 故事板标题\n/   \"content\": \"新内容\",         // [可选] 故事板内容\n/   \"status\": 1                  // [可选] 状态（1-草稿，2-已发布）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - storyboard: 更新后的故事板信息"
            operationId: TeamsAPI_UpdateStoryboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryboardResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateStoryboardForkAble:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新故事板分叉权限
                / 设置故事板是否允许其他用户进行分叉创建分支
                / HTTP POST /common.TeamsAPI/UpdateStoryboardForkAble
                / 请求体：UpdateStoryboardForkAbleRequest (JSON)
                / 响应：UpdateStoryboardForkAbleResponse (JSON)
            operationId: TeamsAPI_UpdateStoryboardForkAble
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateStoryboardForkAbleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateStoryboardForkAbleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateUserAvator:
        post:
            tags:
                - TeamsAPI
            description: "/ 更新用户头像\n/ \n/ 【功能说明】\n/ 更新用户的个人头像图片\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UpdateUserAvator\n/ - 请求体：UpdateUserAvatorRequest (JSON)\n/ - 响应：UpdateUserAvatorResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,                      // [必填] 用户ID\n/   \"avator\": \"https://cdn.com/img.jpg\"  // [必填] 新头像URL\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息"
            operationId: TeamsAPI_UpdateUserAvator
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserAvatorRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserAvatorResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateUserBackgroundImage:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新用户背景图片
                / 更新用户个人主页的背景图片
                / HTTP POST /common.TeamsAPI/UpdateUserBackgroundImage
                / 请求体：UpdateUserBackgroundImageRequest (JSON，包含背景图片URL)
                / 响应：UpdateUserBackgroundImageResponse (JSON)
            operationId: TeamsAPI_UpdateUserBackgroundImage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserBackgroundImageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserBackgroundImageResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UpdateUserProfile:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 更新用户资料
                / 更新用户的个人资料信息，包括昵称、描述、位置等
                / HTTP POST /common.TeamsAPI/UpdateUserProfile
                / 请求体：UpdateUserProfileRequest (JSON，包含要更新的资料字段)
                / 响应：UpdateUserProfileResponse (JSON)
            operationId: TeamsAPI_UpdateUserProfile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserProfileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserProfileResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UploadImageFile:
        post:
            tags:
                - TeamsAPI
            description: "/ 上传图片文件\n/ \n/ 【功能说明】\n/ 上传图片到服务器，支持多种图片格式\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UploadImageFile\n/ - 请求体：UploadImageRequest (JSON，使用 base64 编码的图片数据)\n/ - 响应：UploadImageResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"image_data\": \"base64编码的图片数据\",  // [必填] 图片二进制数据（最大10MB）\n/   \"filename\": \"avatar.jpg\",             // [必填] 文件名（含扩展名）\n/   \"content_type\": \"image/jpeg\"          // [必填] MIME类型\n/ }\n/ ```\n/ \n/ 【支持的图片格式】\n/ - image/jpeg, image/jpg\n/ - image/png\n/ - image/gif\n/ - image/webp\n/ - image/bmp\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - url: 上传后的图片URL\n/ - file_id: 文件ID\n/ - size: 文件大小（字节）"
            operationId: TeamsAPI_UploadImageFile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UploadImageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UploadImageResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UserActiveHeatmap:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取用户活跃热力图\n/ \n/ 【功能说明】\n/ 获取指定时间范围内用户的活跃度数据，以GitHub风格的热力图展示\n/ \n/ 【数据统计】\n/ - 统计用户的创建、更新、评论等所有活跃操作\n/ - 按天聚合活跃度数据\n/ - 自动计算热力等级（0-4级）\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UserActiveHeatmap\n/ - 请求体：UserActiveHeamapRequest (JSON)\n/ - 响应：UserActiveHeamapResponse (JSON)\n/ \n/ 【请求参数】\n/ - user_id: [必填] 用户ID\n/ - start_time: [必填] 开始时间戳（秒）\n/ - end_time: [必填] 结束时间戳（秒）\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - data: 热力图数据数组（每天一条记录）\n/ - total_count: 时间范围内的总活跃次数\n/ \n/ 【使用场景】\n/ - 用户个人主页展示活跃度\n/ - 统计用户贡献度\n/ - 活跃度排行榜"
            operationId: TeamsAPI_UserActiveHeatmap
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserActiveHeamapRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserActiveHeamapResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UserFollowingGroup:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取用户关注的群组\n/ \n/ 【功能说明】\n/ 获取用户关注但未加入的群组列表\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UserFollowingGroup\n/ - 请求体：UserFollowingGroupRequest (JSON)\n/ - 响应：UserFollowingGroupResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,      // [必填] 用户ID\n/   \"offset\": 0,         // [可选] 分页偏移量\n/   \"page_size\": 20      // [可选] 每页数量\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - groups: 关注的群组列表\n/ - total: 总数量"
            operationId: TeamsAPI_UserFollowingGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserFollowingGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserFollowingGroupResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UserGroup:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取用户所属群组\n/ \n/ 【功能说明】\n/ 获取用户加入的所有群组列表\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UserGroup\n/ - 请求体：UserGroupRequest (JSON)\n/ - 响应：UserGroupResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,      // [必填] 用户ID\n/   \"offset\": 0,         // [可选] 分页偏移量\n/   \"page_size\": 20      // [可选] 每页数量\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - groups: 群组列表\n/ - total: 总数量"
            operationId: TeamsAPI_UserGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserGroupResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UserInfo:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取用户信息\n/ \n/ 【功能说明】\n/ 获取指定用户的详细信息，包括基本资料、统计数据等\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UserInfo\n/ - 请求体：UserInfoRequest (JSON)\n/ - 响应：UserInfoResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,              // [必填] 用户ID\n/   \"account\": \"user@email.com\"  // [可选] 用户账号（二选一）\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - user: 用户详细信息对象"
            operationId: TeamsAPI_UserInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfoResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UserInit:
        post:
            tags:
                - TeamsAPI
            description: "/ 用户初始化\n/ \n/ 【功能说明】\n/ 为新注册用户执行初始化设置，创建默认资料和配置\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UserInit\n/ - 请求体：UserInitRequest (JSON)\n/ - 响应：UserInitResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,        // [必填] 用户ID\n/   \"name\": \"用户昵称\",     // [可选] 显示名称\n/   \"avatar\": \"头像URL\",   // [可选] 头像地址\n/   \"timezone\": \"时区\"     // [可选] 用户时区\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - user: 初始化后的用户信息"
            operationId: TeamsAPI_UserInit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserInitRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInitResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UserStoryboardDraftDetail:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取用户故事板草稿详情
                / 获取指定草稿的完整详细信息，包括内容、角色、场景等
                / HTTP POST /common.TeamsAPI/UserStoryboardDraftDetail
                / 请求体：UserDraftStoryboardDetailRequest (JSON)
                / 响应：UserDraftStoryboardDetailResponse (JSON)
            operationId: TeamsAPI_UserStoryboardDraftDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserDraftStoryboardDetailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserDraftStoryboardDetailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UserStoryboardDraftlist:
        post:
            tags:
                - TeamsAPI
            description: |-
                / 获取用户故事板草稿列表
                / 分页获取指定用户的所有故事板草稿，支持按故事筛选
                / HTTP POST /common.TeamsAPI/UserStoryboardDraftlist
                / 请求体：UserStoryboardDraftlistRequest (JSON)
                / 响应：UserStoryboardDraftlistResponse (JSON)
            operationId: TeamsAPI_UserStoryboardDraftlist
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserStoryboardDraftlistRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserStoryboardDraftlistResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UserUpdate:
        post:
            tags:
                - TeamsAPI
            description: "/ 更新用户信息\n/ \n/ 【功能说明】\n/ 更新用户的基本资料信息\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UserUpdate\n/ - 请求体：UserUpdateRequest (JSON)\n/ - 响应：UserUpdateResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,              // [必填] 用户ID\n/   \"name\": \"新昵称\",            // [可选] 用户昵称\n/   \"description\": \"个人简介\",   // [可选] 个人描述\n/   \"location\": \"所在地\",        // [可选] 地理位置\n/   \"email\": \"new@email.com\"     // [可选] 邮箱地址\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - user: 更新后的用户信息"
            operationId: TeamsAPI_UserUpdate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserUpdateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserUpdateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/UserWatching:
        post:
            tags:
                - TeamsAPI
            description: "/ 获取用户关注的项目\n/ \n/ 【功能说明】\n/ 获取用户关注的所有项目（故事）列表\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/UserWatching\n/ - 请求体：UserWatchingRequest (JSON)\n/ - 响应：UserWatchingResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"user_id\": 123,      // [必填] 用户ID\n/   \"offset\": 0,         // [可选] 分页偏移量，默认0\n/   \"page_size\": 20      // [可选] 每页数量，默认20\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - projects: 关注的项目列表\n/ - total: 总数量"
            operationId: TeamsAPI_UserWatching
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserWatchingRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserWatchingResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/Version:
        get:
            tags:
                - TeamsAPI
            description: |-
                / 获取API版本信息
                / 返回当前API的版本号和构建时间信息
                / HTTP GET /common.TeamsAPI/Version
                / 响应：VersionResponse (JSON，包含version和build_time)
            operationId: TeamsAPI_Version
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VersionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /common.TeamsAPI/WatchStory:
        post:
            tags:
                - TeamsAPI
            description: "/ 关注故事\n/ \n/ 【功能说明】\n/ 关注指定故事，接收该故事的更新通知\n/ \n/ 【HTTP API】\n/ - 方法：POST\n/ - 路径：/common.TeamsAPI/WatchStory\n/ - 请求体：WatchStoryRequest (JSON)\n/ - 响应：WatchStoryResponse (JSON)\n/ \n/ 【请求体字段】\n/ ```json\n/ {\n/   \"story_id\": 123,     // [必填] 要关注的故事ID\n/   \"user_id\": 456       // [必填] 用户ID\n/ }\n/ ```\n/ \n/ 【响应字段】\n/ - code: 响应状态码\n/ - message: 响应消息\n/ - is_watching: 关注状态（true表示已关注）"
            operationId: TeamsAPI_WatchStory
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/WatchStoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WatchStoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/chat/messages/stream:
        post:
            tags:
                - StreamMessageService
            operationId: StreamMessageService_StreamChatMessage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/StreamChatMessageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/StreamChatMessageResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AboutResponse:
            type: object
            properties:
                content:
                    type: string
        ActiveInfo:
            type: object
            properties:
                activeId:
                    type: string
                user:
                    $ref: '#/components/schemas/UserInfo'
                activeType:
                    type: integer
                    format: enum
                groupInfo:
                    $ref: '#/components/schemas/GroupInfo'
                storyInfo:
                    $ref: '#/components/schemas/Story'
                roleInfo:
                    $ref: '#/components/schemas/StoryRole'
                boardInfo:
                    $ref: '#/components/schemas/StoryBoard'
                content:
                    type: string
                Ctime:
                    type: string
                Mtime:
                    type: string
        ArchiveStoryRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 收藏故事请求
                / 将故事添加到用户的收藏夹
        ArchiveStoryResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 收藏故事响应
                / 返回收藏操作的结果
        CancelStoryboardRequest:
            type: object
            properties:
                storyboardId:
                    type: string
                    description: / 故事板ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 撤销故事板请求
                / 撤销已发布的故事板，保留AI生成内容但隐藏场景和图片
        CancelStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 撤销故事板响应
                / 返回撤销操作的结果
        ChapterDetailInformation:
            type: object
            properties:
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/DetailScene'
                    description: 详细情节列表
            description: ChapterDetailInformation 包含多个详细情节
        ChapterInfo:
            type: object
            properties:
                章节ID:
                    type: string
                章节题目:
                    type: string
                章节内容:
                    type: string
            description: ChapterInfo 表示单个章节的信息
        ChapterSummary:
            type: object
            properties:
                title:
                    type: string
                    description: 章节题目
                content:
                    type: string
                    description: 章节内容
                characters:
                    type: array
                    items:
                        $ref: '#/components/schemas/Character'
                    description: 参与人物
            description: ChapterSummary 表示章节的基本信息
        Character:
            type: object
            properties:
                id:
                    type: string
                    description: 角色id
                name:
                    type: string
                    description: 角色姓名
                description:
                    type: string
                    description: 角色描述
                avatarUrl:
                    type: string
                    description: 角色头像
            description: Character 表示角色信息
        CharacterDetail:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the character's overall appearance and basic traits
                shortTermGoal:
                    type: string
                    description: Character's immediate objectives and goals in the current story arc
                longTermGoal:
                    type: string
                    description: Character's overarching ambitions and long-term aspirations
                personality:
                    type: string
                    description: Character's personality traits, temperament, and behavioral patterns
                background:
                    type: string
                    description: Character's history, origin story, and formative experiences
                handlingStyle:
                    type: string
                    description: Character's approach to handling situations and solving problems
                cognitionRange:
                    type: string
                    description: Character's knowledge, understanding, and awareness of their world
                abilityFeatures:
                    type: string
                    description: Character's special skills, talents, and unique capabilities
                appearance:
                    type: string
                    description: Character's physical appearance and distinguishing features
                dressPreference:
                    type: string
                    description: Character's clothing preferences and style choices
            description: CharacterDetail represents detailed information about a character in a story
        ChatContext:
            type: object
            properties:
                chatId:
                    type: string
                    description: / 聊天会话ID
                roleId:
                    type: string
                    description: / 角色ID
                userId:
                    type: string
                    description: / 用户ID
                timestamp:
                    type: string
                    description: / 会话开始时间戳
                lastUpdateTime:
                    type: string
                    description: / 最后更新时间戳
                totalTokens:
                    type: string
                    description: / 总消耗token数
                totalMessages:
                    type: string
                    description: / 总消息数
                lastMessage:
                    allOf:
                        - $ref: '#/components/schemas/ChatMessage'
                    description: / 最后一条消息
                user:
                    allOf:
                        - $ref: '#/components/schemas/UserInfo'
                    description: / 用户信息
                role:
                    allOf:
                        - $ref: '#/components/schemas/StoryRole'
                    description: / 角色信息
            description: |-
                / 聊天上下文信息
                / 表示一个聊天会话的完整状态
        ChatMessage:
            type: object
            properties:
                id:
                    type: string
                roleId:
                    type: string
                userId:
                    type: string
                sender:
                    type: integer
                    format: int32
                message:
                    type: string
                chatId:
                    type: string
                timestamp:
                    type: string
                user:
                    $ref: '#/components/schemas/UserInfo'
                role:
                    $ref: '#/components/schemas/StoryRole'
                uuid:
                    type: string
        ChatWithStoryRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChatMessage'
                    description: / 历史消息列表，最多包含最近50条消息
                total:
                    type: string
                    description: / 总消息数
                haveMore:
                    type: boolean
                    description: / 是否还有更多历史消息
            description: |-
                / 与故事角色聊天请求
                / 发送消息并获取角色的回复
        ChatWithStoryRoleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                replyMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChatMessage'
                    description: / 角色回复的消息列表
                total:
                    type: string
                    description: / 总消息数
                haveMore:
                    type: boolean
                    description: / 是否还有更多消息
            description: |-
                / 与故事角色聊天响应
                / 返回角色的回复消息
        CommentInfo:
            type: object
            properties:
                commentId:
                    type: string
                rootCommentId:
                    type: string
                prevCommentId:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                avatarUrl:
                    type: string
                storyId:
                    type: string
                boardId:
                    type: string
                groupId:
                    type: string
                content:
                    type: string
                likeCount:
                    type: string
                replyCount:
                    type: string
                replyId:
                    type: string
                ctime:
                    type: string
                mtime:
                    type: string
        ContinueRenderStoryRequest:
            type: object
            properties:
                storyId:
                    type: string
                prevBoardId:
                    type: string
                userId:
                    type: string
                renderType:
                    type: integer
                    format: enum
                prompt:
                    type: string
                title:
                    type: string
                description:
                    type: string
                background:
                    type: string
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
        ContinueRenderStoryResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/RenderStoryboardDetail'
        CreateGroupRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 创建者用户ID，必须大于0
                name:
                    type: string
                    description: / 群组名称，必填且长度1-100字符
                description:
                    type: string
                    description: / 群组描述，最大长度1000字符
                avatar:
                    type: string
                    description: / 群组头像URL
            description: |-
                / 创建群组请求
                / 创建新的协作群组或团队
        CreateGroupResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/CreateGroupResponse_Data'
            description: |-
                / 创建群组响应
                / 返回创建的群组信息
        CreateGroupResponse_Data:
            type: object
            properties:
                info:
                    allOf:
                        - $ref: '#/components/schemas/GroupInfo'
                    description: / 创建的群组信息
            description: / 返回数据
        CreateStoryBoardCommentRequest:
            type: object
            properties:
                boardId:
                    type: string
                    description: / 故事板ID，必须大于0
                userId:
                    type: string
                    description: / 评论者用户ID，必须大于0
                content:
                    type: string
                    description: / 评论内容，必填且长度1-2000字符
            description: |-
                / 创建故事板评论请求
                / 在故事板下创建新的评论
        CreateStoryBoardCommentResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                comment:
                    allOf:
                        - $ref: '#/components/schemas/CommentInfo'
                    description: / 创建的评论信息
            description: |-
                / 创建故事板评论响应
                / 返回创建的评论信息
        CreateStoryBoardSenceRequest:
            type: object
            properties:
                sence:
                    $ref: '#/components/schemas/StoryBoardSence'
                userId:
                    type: string
        CreateStoryBoardSenceResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/CreateStoryBoardSenceResponse_Data'
        CreateStoryBoardSenceResponse_Data:
            type: object
            properties:
                senceId:
                    type: string
        CreateStoryCommentReplyRequest:
            type: object
            properties:
                commentId:
                    type: string
                    description: / 评论ID，必须大于0
                userId:
                    type: string
                    description: / 回复者用户ID，必须大于0
                content:
                    type: string
                    description: / 回复内容，必填且长度1-2000字符
            description: |-
                / 创建故事评论回复请求
                / 回复指定的故事评论
        CreateStoryCommentReplyResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                comment:
                    allOf:
                        - $ref: '#/components/schemas/CommentInfo'
                    description: / 创建的回复信息
            description: |-
                / 创建故事评论回复响应
                / 返回创建的回复信息
        CreateStoryCommentRequest:
            required:
                - storyId
                - userId
                - content
            type: object
            properties:
                storyId:
                    type: string
                    description: "/ [必填] 故事ID\n/ \n/ 要评论的故事唯一标识\n/ 验证规则：必须大于 0"
                userId:
                    type: string
                    description: "/ [必填] 评论者用户ID\n/ \n/ 发表评论的用户ID\n/ 验证规则：必须大于 0\n/ 权限要求：用户必须已登录"
                content:
                    type: string
                    description: "/ [必填] 评论内容\n/ \n/ 评论的文本内容\n/ 长度限制：1-2000 字符\n/ 支持：纯文本、Markdown、@用户提及\n/ 内容要求：不能包含违规内容"
            description: "/ 创建故事评论请求\n/ \n/ 在故事下创建新的评论，支持富文本内容和@提及功能"
        CreateStoryCommentResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                comment:
                    allOf:
                        - $ref: '#/components/schemas/CommentInfo'
                    description: / 创建的评论信息
            description: |-
                / 创建故事评论响应
                / 返回创建的评论信息
        CreateStoryRequest:
            type: object
            properties:
                name:
                    type: string
                title:
                    type: string
                shortDesc:
                    type: string
                creatorId:
                    type: string
                ownerId:
                    type: string
                groupId:
                    type: string
                origin:
                    type: string
                status:
                    type: integer
                    format: int32
                isAchieve:
                    type: boolean
                isClose:
                    type: boolean
                isAiGen:
                    type: boolean
                params:
                    $ref: '#/components/schemas/StoryParams'
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
            description: CreateStoryRequest 创建故事的请求参数
        CreateStoryResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/CreateStoryResponse_Data'
            description: CreateStoryResponse 创建故事的响应结果
        CreateStoryResponse_Data:
            type: object
            properties:
                storyId:
                    type: integer
                    format: int32
                boardId:
                    type: integer
                    format: int32
        CreateStoryRoleChatRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 创建与角色的对话请求
                / 开始一个新的与故事角色的聊天会话
        CreateStoryRoleChatResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                chatContext:
                    allOf:
                        - $ref: '#/components/schemas/ChatContext'
                    description: / 聊天上下文信息
            description: |-
                / 创建与角色的对话响应
                / 返回创建的聊天会话信息
        CreateStoryRoleRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 创建者用户ID，必须大于0
                role:
                    allOf:
                        - $ref: '#/components/schemas/StoryRole'
                    description: / 角色信息，必填
            description: |-
                / 创建故事角色请求
                / 在故事中创建新的角色
        CreateStoryRoleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 创建故事角色响应
                / 返回创建操作的结果
        CreateStoryboardRequest:
            type: object
            properties:
                board:
                    $ref: '#/components/schemas/StoryBoard'
            description: CreateStoryboardRequest 创建故事板的请求参数
        CreateStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/CreateStoryboardResponse_Data'
            description: CreateStoryboardResponse 创建故事板的响应结果
        CreateStoryboardResponse_Data:
            type: object
            properties:
                boardId:
                    type: string
        DelStoryboardRequest:
            type: object
            properties:
                boardId:
                    type: string
                storyId:
                    type: string
                userId:
                    type: string
        DelStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        DeleteGroupRequest:
            type: object
            properties:
                groupId:
                    type: string
                userId:
                    type: string
        DeleteGroupResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/DeleteGroupResponse_Data'
        DeleteGroupResponse_Data:
            type: object
            properties: {}
        DeleteStoryBoardCommentRequest:
            type: object
            properties:
                boardId:
                    type: string
                    description: / 故事板ID，必须大于0
                commentId:
                    type: string
                    description: / 评论ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 删除故事板评论请求
                / 删除指定的故事板评论
        DeleteStoryBoardCommentResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 删除故事板评论响应
                / 返回删除操作的结果
        DeleteStoryBoardSenceRequest:
            type: object
            properties:
                senceId:
                    type: string
                userId:
                    type: string
        DeleteStoryBoardSenceResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        DeleteStoryCommentReplyRequest:
            type: object
            properties:
                replyId:
                    type: string
                    description: / 回复ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 删除故事评论回复请求
                / 删除指定的评论回复
        DeleteStoryCommentReplyResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 删除故事评论回复响应
                / 返回删除操作的结果
        DeleteStoryCommentRequest:
            type: object
            properties:
                commentId:
                    type: string
                    description: / 评论ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 删除故事评论请求
                / 删除指定的故事评论
        DeleteStoryCommentResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 删除故事评论响应
                / 返回删除操作的结果
        DeleteUserStoryboardDraftRequest:
            required:
                - userId
                - draftId
            type: object
            properties:
                userId:
                    type: string
                    description: "/ [必填] 用户ID\n/ \n/ 草稿所有者的用户ID\n/ 验证规则：必须大于 0"
                draftId:
                    type: string
                    description: "/ [必填] 草稿ID\n/ \n/ 要删除的草稿唯一标识符\n/ 验证规则：必须大于 0"
                storyId:
                    type: string
                    description: "/ [可选] 故事ID\n/ \n/ 所属故事的ID，用于权限验证\n/ 验证规则：如果提供则必须大于等于 0\n/ 默认值：0（不筛选）"
            description: "==================== 删除用户故事板草稿 ====================\n/ 删除用户故事板草稿请求\n/ \n/ 用于删除指定用户的故事板草稿，支持批量删除操作"
        DeleteUserStoryboardDraftResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息描述
            description: |-
                / 删除用户故事板草稿响应
                / 返回删除操作的结果状态
        DetailScene:
            type: object
            properties:
                id:
                    type: string
                    description: 情节id
                content:
                    type: string
                    description: 情节内容
                characters:
                    type: array
                    items:
                        $ref: '#/components/schemas/Character'
                    description: 参与人物
                imagePrompt:
                    type: string
                    description: 图片提示词
            description: DetailScene 表示具体的场景信息
        DislikeCommentRequest:
            type: object
            properties:
                commentId:
                    type: string
                    description: / 评论ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 取消点赞评论请求
                / 取消对评论的点赞
        DislikeCommentResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 取消点赞评论响应
                / 返回取消点赞操作的结果
        ExploreResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/ExploreResponse_Data'
        ExploreResponse_Data:
            type: object
            properties: {}
        FetchActivesRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                groupId:
                    type: string
                    description: / 群组ID，可选，用于筛选特定群组的动态
                storyId:
                    type: string
                    description: / 故事ID，可选，用于筛选特定故事的动态
                boardId:
                    type: string
                    description: / 故事板ID，可选，用于筛选特定故事板的动态
                atype:
                    type: integer
                    description: / 动态流类型，指定要获取的动态类型
                    format: enum
                timestamp:
                    type: string
                    description: / 时间戳，用于时间范围筛选，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取动态列表请求
                / 获取用户、群组或故事的活动动态
        FetchActivesResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                msg:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/FetchActivesResponse_Data'
            description: |-
                / 获取动态列表响应
                / 返回活动动态列表
        FetchActivesResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ActiveInfo'
                    description: / 动态信息列表
                timestamp:
                    type: string
                    description: / 当前时间戳
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
                total:
                    type: string
                    description: / 总数量
            description: / 返回数据
        FetchGroupMembersRequest:
            type: object
            properties:
                groupId:
                    type: string
                    description: / 群组ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取群组成员列表请求
                / 分页获取指定群组的所有成员
        FetchGroupMembersResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/FetchGroupMembersResponse_Data'
            description: |-
                / 获取群组成员列表响应
                / 返回群组的成员列表及分页信息
        FetchGroupMembersResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
                    description: / 成员信息列表
                offset:
                    type: string
                    description: / 当前偏移量
                total:
                    type: string
                    description: / 成员总数
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: / 返回数据
        FetchGroupStorysRequest:
            type: object
            properties:
                groupId:
                    type: string
                userId:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        FetchGroupStorysResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/FetchGroupStorysResponse_Data'
        FetchGroupStorysResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Story'
                creator:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
                total:
                    type: string
                haveMore:
                    type: boolean
        FetchUserGenTaskStatusRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                taskId:
                    type: string
                    description: / 任务ID（可选），用于查询特定任务
                timestamp:
                    type: string
                    description: / 时间戳，用于时间筛选
                pageNum:
                    type: string
                    description: / 页码，从1开始
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取用户生成任务状态请求
                / 查询用户的所有生成任务状态
        FetchUserGenTaskStatusResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                tasks:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserGenTaskStatus'
                    description: / 任务状态列表
                total:
                    type: string
                    description: / 任务总数
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取用户生成任务状态响应
                / 返回用户的生成任务列表
        FollowStoryRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
            description: |-
                / 关注故事角色请求
                / 关注指定的故事角色，接收该角色的动态
        FollowStoryRoleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 关注故事角色响应
                / 返回关注操作的结果
        FollowUserRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 发起关注的用户ID，必须大于0
                followerId:
                    type: string
                    description: / 被关注的用户ID，必须大于0
            description: |-
                / 关注用户请求
                / 关注另一个用户，建立关注关系
        FollowUserResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 关注用户响应
                / 返回关注操作的结果
        ForkStoryboardRequest:
            type: object
            properties:
                prevBoardId:
                    type: string
                storyId:
                    type: string
                userId:
                    type: string
                board:
                    $ref: '#/components/schemas/StoryBoard'
        ForkStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/ForkStoryboardResponse_Data'
        ForkStoryboardResponse_Data:
            type: object
            properties:
                boardId:
                    type: string
                storyId:
                    type: string
                timelineId:
                    type: string
                prevBoardId:
                    type: string
        GenStoryboardImagesRequest:
            type: object
            properties:
                boardId:
                    type: string
                storyId:
                    type: string
                userId:
                    type: string
                isRegenerate:
                    type: boolean
                renderType:
                    type: integer
                    format: enum
                senceId:
                    type: integer
                    format: int32
                senceNameKey:
                    type: string
                prompt:
                    type: string
        GenStoryboardImagesResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/RenderStoryboardDetail'
        GenStoryboardTextRequest:
            type: object
            properties:
                boardId:
                    type: string
                storyId:
                    type: string
                userId:
                    type: string
                renderType:
                    type: integer
                    format: enum
                prompt:
                    type: string
                title:
                    type: string
                description:
                    type: string
                senceNum:
                    type: integer
                    format: int32
        GenStoryboardTextResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/RenderStoryboardDetail'
        GenerateRoleAvatarRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                refAvatarUrl:
                    type: string
                    description: / 参考头像URL（可选）
                description:
                    type: string
                    description: / 角色描述，用于生成头像，最大长度1000字符
                style:
                    type: string
                    description: / 头像风格
                imageRatios:
                    type: integer
                    description: / 图片宽高比设置
                    format: enum
            description: |-
                / 生成角色头像请求
                / 使用AI为角色生成个性化头像
        GenerateRoleAvatarResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                avatarUrl:
                    type: string
                    description: / 生成的头像URL
            description: |-
                / 生成角色头像响应
                / 返回生成的头像URL
        GenerateRoleDescriptionRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                description:
                    type: string
                    description: / 基础描述，最大长度2000字符
            description: |-
                / 生成角色描述请求
                / 使用AI为角色生成详细的描述信息
        GenerateRoleDescriptionResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                characterDetail:
                    allOf:
                        - $ref: '#/components/schemas/CharacterDetail'
                    description: / 生成的角色详细信息
            description: |-
                / 生成角色描述响应
                / 返回AI生成的详细角色描述
        GenerateRolePromptRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                prompt:
                    type: string
                    description: / 基础提示词，最大长度2000字符
            description: |-
                / 生成角色提示词请求
                / 使用AI为角色生成优化的提示词
        GenerateRolePromptResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                prompt:
                    type: string
                    description: / 生成的提示词
            description: |-
                / 生成角色提示词响应
                / 返回AI生成的优化提示词
        GenerateStoryRoleParams:
            type: object
            properties:
                originImageUrl:
                    type: string
                    description: / 原始参考图片URL
                additionalImageUrls:
                    type: array
                    items:
                        type: string
                    description: / 附加参考图片URL列表，最多5张
                textPrompt:
                    type: string
                    description: / 文本提示词，最大长度2000字符
                negativePrompt:
                    type: string
                    description: / 负面提示词，最大长度1000字符
                style:
                    type: string
                    description: / 生成风格
            description: |-
                / 生成故事角色参数
                / 包含角色海报生成所需的所有参数
        GenerateStoryRolePosterRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                params:
                    allOf:
                        - $ref: '#/components/schemas/GenerateStoryRoleParams'
                    description: / 生成参数，必填
            description: |-
                / 生成故事角色海报请求
                / 为角色生成海报图片
        GenerateStoryRolePosterResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                imageUrl:
                    type: string
                    description: / 生成的海报图片URL
                posterId:
                    type: string
                    description: / 海报ID
            description: |-
                / 生成故事角色海报响应
                / 返回生成的海报信息
        GenerateStoryRoleVideoRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                posterId:
                    type: string
                    description: / 海报ID，必须大于0
                refBackgroundUrl:
                    type: string
                    description: / 参考背景图片URL
                refAvatarUrl:
                    type: string
                    description: / 参考头像图片URL
                textPrompt:
                    type: string
                    description: / 文本提示词，最大长度2000字符
                imageRatios:
                    type: integer
                    description: / 图片宽高比设置
                    format: enum
                style:
                    type: string
                    description: / 视频风格
            description: |-
                / 生成故事角色视频请求
                / 为指定的故事角色生成宣传视频
        GenerateStoryRoleVideoResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                detail:
                    allOf:
                        - $ref: '#/components/schemas/GenerateStoryRoleVideoTaskDetail'
                    description: / 任务详情
            description: |-
                / 生成故事角色视频响应
                / 返回角色视频生成任务的详细信息
        GenerateStoryRoleVideoTaskDetail:
            type: object
            properties:
                taskId:
                    type: string
                    description: / 任务ID，唯一标识符
                taskStatus:
                    type: integer
                    description: / 任务状态
                    format: enum
                videoUrl:
                    type: string
                    description: / 生成的视频URL
                videoThumbnailUrl:
                    type: string
                    description: / 视频缩略图URL
                duration:
                    type: string
                    description: / 视频时长（秒）
                resolution:
                    type: string
                    description: / 视频分辨率，如 1920x1080
                videoFormat:
                    type: string
                    description: / 视频格式，如 mp4, webm
            description: |-
                / 生成故事角色视频任务详情
                / 包含角色视频生成任务的状态和结果信息
        GenerateStorySceneVideoRequest:
            required:
                - storyId
                - boardId
                - senceId
                - userId
                - tokenSource
            type: object
            properties:
                storyId:
                    type: string
                    description: "/ [必填] 故事ID\n/ \n/ 场景所属的故事ID\n/ 验证规则：必须大于 0"
                boardId:
                    type: string
                    description: "/ [必填] 故事板ID\n/ \n/ 场景所属的故事板ID\n/ 验证规则：必须大于 0"
                senceId:
                    type: string
                    description: "/ [必填] 场景ID\n/ \n/ 要生成视频的场景唯一标识\n/ 验证规则：必须大于 0"
                userId:
                    type: string
                    description: "/ [必填] 用户ID\n/ \n/ 发起生成请求的用户ID\n/ 验证规则：必须大于 0\n/ 用途：用于计费和权限验证"
                tokenSource:
                    type: integer
                    description: "/ [必填] Token来源\n/ \n/ 指定使用哪种额度来支付生成费用\n/ 取值说明：\n/ - TOKEN_SOURCE_USER_SELF: 使用用户自己的token\n/ - TOKEN_SOURCE_STORY_STORE: 使用故事存储的token\n/ - TOKEN_SOURCE_THIRD_PARTY: 使用第三方赞助token"
                    format: enum
                prompt:
                    type: string
                    description: "/ [可选] 生成提示词\n/ \n/ 视频生成的提示词描述\n/ 长度限制：最大 2000 字符\n/ 用途：控制视频的内容、风格和细节\n/ 默认值：使用场景描述自动生成"
                negativePrompt:
                    type: string
                    description: "/ [可选] 负面提示词\n/ \n/ 指定不希望出现的元素\n/ 长度限制：最大 1000 字符\n/ 用途：避免生成不想要的内容（如暴力、血腥等）"
            description: "/ 生成故事场景视频请求\n/ \n/ 为指定的故事场景生成AI视频内容，支持自定义提示词和风格"
        GenerateStorySceneVideoResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                detail:
                    allOf:
                        - $ref: '#/components/schemas/GenerateStorySceneVideoTaskDetail'
                    description: / 任务详情
            description: |-
                / 生成故事场景视频响应
                / 返回视频生成任务的详细信息
        GenerateStorySceneVideoTaskDetail:
            type: object
            properties:
                taskId:
                    type: string
                    description: / 任务ID，唯一标识符
                taskStatus:
                    type: integer
                    description: / 任务状态
                    format: enum
                videoUrl:
                    type: string
                    description: / 生成的视频URL
                videoThumbnailUrl:
                    type: string
                    description: / 视频缩略图URL
                duration:
                    type: string
                    description: / 视频时长（秒）
                resolution:
                    type: string
                    description: / 视频分辨率，如 1920x1080
                videoFormat:
                    type: string
                    description: / 视频格式，如 mp4, webm
            description: |-
                / 生成故事场景视频任务详情
                / 包含视频生成任务的状态和结果信息
        GetFollowListRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取关注列表请求
                / 获取用户关注的其他用户列表
        GetFollowListResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                followers:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
                    description: / 关注的用户列表
                total:
                    type: string
                    description: / 关注总数
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取关注列表响应
                / 返回用户关注的用户列表
        GetFollowerListRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取粉丝列表请求
                / 获取关注该用户的粉丝列表
        GetFollowerListResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                followers:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
                    description: / 粉丝用户列表
                total:
                    type: string
                    description: / 粉丝总数
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取粉丝列表响应
                / 返回关注该用户的粉丝列表
        GetGroupActivesRequest:
            type: object
            properties:
                groupId:
                    type: string
                atype:
                    type: integer
                    format: enum
                offset:
                    type: string
                pageSize:
                    type: string
        GetGroupActivesResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetGroupActivesResponse_Data'
        GetGroupActivesResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ActiveInfo'
                offset:
                    type: string
                pageSize:
                    type: string
                haveMore:
                    type: boolean
                total:
                    type: string
        GetGroupProfileRequest:
            type: object
            properties:
                groupId:
                    type: string
                userId:
                    type: string
        GetGroupProfileResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetGroupProfileResponse_Data'
        GetGroupProfileResponse_Data:
            type: object
            properties:
                info:
                    $ref: '#/components/schemas/GroupProfileInfo'
        GetGroupRequest:
            type: object
            properties:
                groupId:
                    type: string
                userId:
                    type: string
                name:
                    type: string
                withProfile:
                    type: boolean
        GetGroupResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetGroupResponse_Data'
        GetGroupResponse_Data:
            type: object
            properties:
                info:
                    $ref: '#/components/schemas/GroupInfo'
        GetNextStoryboardRequest:
            type: object
            properties:
                storyboardId:
                    type: string
                    description: / 当前故事板ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                isMultiBranch:
                    type: boolean
                    description: / 是否多分支模式
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
                total:
                    type: string
                    description: / 总数量
                orderBy:
                    type: integer
                    description: / 多分支排序方式
                    format: enum
            description: |-
                / 获取下一个故事板请求
                / 获取当前故事板的后续故事板，支持多分支场景
        GetNextStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                storyboards:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardActive'
                    description: / 后续故事板列表
                isMultiBranch:
                    type: boolean
                    description: / 是否为多分支
                total:
                    type: string
                    description: / 总数量
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取下一个故事板响应
                / 返回后续故事板列表，支持多分支场景
        GetStoryBoardCommentRepliesRequest:
            type: object
            properties:
                commentId:
                    type: string
                    description: / 评论ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取故事板评论回复列表请求
                / 获取指定故事板评论的所有回复
        GetStoryBoardCommentRepliesResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                replies:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryComment'
                    description: / 回复列表
                total:
                    type: string
                    description: / 回复总数
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取故事板评论回复列表响应
                / 返回评论的回复列表
        GetStoryBoardCommentsRequest:
            type: object
            properties:
                boardId:
                    type: string
                    description: / 故事板ID，必须大于0
                userId:
                    type: string
                    description: / 请求用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取故事板评论列表请求
                / 分页获取指定故事板的所有评论
        GetStoryBoardCommentsResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryComment'
                    description: / 评论列表
                total:
                    type: string
                    description: / 评论总数
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取故事板评论列表响应
                / 返回故事板的评论列表及分页信息
        GetStoryBoardGenerateRequest:
            type: object
            properties:
                boardId:
                    type: string
                userId:
                    type: string
        GetStoryBoardGenerateResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                generatingStage:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardSence'
        GetStoryBoardRenderRequest:
            type: object
            properties:
                boardId:
                    type: string
                renderStatus:
                    type: integer
                    format: int32
                renderType:
                    type: integer
                    format: int32
        GetStoryBoardRenderResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetStoryBoardRenderResponse_Data'
        GetStoryBoardRenderResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/RenderStoryboardDetail'
        GetStoryBoardRolesRequest:
            type: object
            properties:
                boardId:
                    type: string
                userId:
                    type: string
        GetStoryBoardRolesResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetStoryBoardRolesResponse_Data'
        GetStoryBoardRolesResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
                creator:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
        GetStoryBoardSenceGenerateRequest:
            type: object
            properties:
                senceId:
                    type: string
                userId:
                    type: string
        GetStoryBoardSenceGenerateResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                generatingStage:
                    type: integer
                    format: int32
                data:
                    $ref: '#/components/schemas/StoryBoardSence'
        GetStoryBoardSencesRequest:
            type: object
            properties:
                boardId:
                    type: string
                userId:
                    type: string
        GetStoryBoardSencesResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetStoryBoardSencesResponse_Data'
        GetStoryBoardSencesResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardSence'
        GetStoryCommentRepliesRequest:
            type: object
            properties:
                commentId:
                    type: string
                    description: / 评论ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取故事评论回复列表请求
                / 获取指定评论的所有回复
        GetStoryCommentRepliesResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                replies:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryComment'
                    description: / 回复列表
                total:
                    type: string
                    description: / 回复总数
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取故事评论回复列表响应
                / 返回评论的回复列表
        GetStoryCommentsRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                userId:
                    type: string
                    description: / 请求用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取故事评论列表请求
                / 分页获取指定故事的评论列表
        GetStoryCommentsResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryComment'
                    description: / 评论列表
                total:
                    type: string
                    description: / 评论总数
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取故事评论列表响应
                / 返回故事的评论列表及分页信息
        GetStoryContributorsRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                userId:
                    type: string
                    description: / 请求用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取故事贡献者请求
                / 获取参与故事创作的所有贡献者列表
        GetStoryContributorsResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/GetStoryContributorsResponse_Data'
            description: |-
                / 获取故事贡献者响应
                / 返回故事的贡献者列表
        GetStoryContributorsResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryContributor'
                    description: / 贡献者列表
                total:
                    type: string
                    description: / 贡献者总数
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: / 返回数据
        GetStoryImageStyleRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
            description: |-
                / 获取故事图片风格请求
                / 获取故事可用的图片风格列表
        GetStoryImageStyleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                style:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryStyleDesc'
                    description: / 风格列表
            description: |-
                / 获取故事图片风格响应
                / 返回可用的风格列表
        GetStoryInfoRequest:
            type: object
            properties:
                storyId:
                    type: string
            description: GetStoryInfoRequest 获取故事信息的请求参数
        GetStoryInfoResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetStoryInfoResponse_Data'
            description: GetStoryInfoResponse 获取故事信息的响应结果
        GetStoryInfoResponse_Data:
            type: object
            properties:
                info:
                    $ref: '#/components/schemas/Story'
                creator:
                    $ref: '#/components/schemas/UserInfo'
        GetStoryParticipantsRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取故事参与者请求
                / 获取参与故事创作的所有用户列表
        GetStoryParticipantsResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                participants:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
                    description: / 参与者列表
                total:
                    type: string
                    description: / 参与者总数
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取故事参与者响应
                / 返回故事的参与者列表
        GetStoryRenderRequest:
            type: object
            properties:
                storyId:
                    type: string
                renderStatus:
                    type: integer
                    format: int32
                renderType:
                    type: integer
                    format: int32
                userId:
                    type: string
        GetStoryRenderResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetStoryRenderResponse_Data'
        GetStoryRenderResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/RenderStoryDetail'
        GetStoryRoleDetailRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
            description: |-
                / 获取故事角色详情请求
                / 获取指定角色的详细信息
        GetStoryRoleDetailResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                info:
                    allOf:
                        - $ref: '#/components/schemas/StoryRole'
                    description: / 角色详细信息
            description: |-
                / 获取故事角色详情响应
                / 返回角色的详细信息
        GetStoryRoleListRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                userId:
                    type: string
                    description: / 请求用户ID，必须大于0
                boardId:
                    type: string
                    description: / 故事板ID（可选），用于筛选特定故事板的角色
                searchKey:
                    type: string
                    description: / 搜索关键词（可选），用于搜索角色名称
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取故事角色列表请求
                / 获取指定故事的角色列表，支持搜索筛选
        GetStoryRoleListResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
                    description: / 角色列表
                total:
                    type: string
                    description: / 角色总数
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取故事角色列表响应
                / 返回故事的角色列表
        GetStoryRolePosterListRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 请求用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取故事角色海报列表请求
                / 获取指定角色的所有海报图片列表
        GetStoryRolePosterListResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                posters:
                    type: array
                    items:
                        $ref: '#/components/schemas/RolePosterDetail'
                    description: / 海报列表
                total:
                    type: string
                    description: / 海报总数
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取故事角色海报列表响应
                / 返回角色的海报列表及分页信息
        GetStoryRoleStoriesRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                filter:
                    type: string
                    description: / 筛选条件，最大长度50字符
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取角色参与的故事请求
                / 获取指定角色出现的所有故事列表
        GetStoryRoleStoriesResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                stories:
                    type: array
                    items:
                        $ref: '#/components/schemas/Story'
                    description: / 故事列表
                total:
                    type: string
                    description: / 总数量
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取角色参与的故事响应
                / 返回角色出现的故事列表
        GetStoryRoleStoryboardsRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                filter:
                    type: string
                    description: / 筛选条件，最大长度50字符
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取角色参与的故事板请求
                / 获取指定角色参与的所有故事板列表
        GetStoryRoleStoryboardsResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                storyboardactives:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardActive'
                    description: / 故事板活动列表
                total:
                    type: string
                    description: / 总数量
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取角色参与的故事板响应
                / 返回角色参与的故事板列表
        GetStoryRolesRequest:
            type: object
            properties:
                storyId:
                    type: string
                userId:
                    type: string
        GetStoryRolesResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetStoryRolesResponse_Data'
        GetStoryRolesResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
                creator:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
        GetStoryboardRequest:
            type: object
            properties:
                boardId:
                    type: string
                userId:
                    type: string
            description: GetStoryboardRequest 获取故事板的请求参数
        GetStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetStoryboardResponse_Data'
            description: GetStoryboardResponse 获取故事板的响应结果
        GetStoryboardResponse_Data:
            type: object
            properties:
                boardInfo:
                    $ref: '#/components/schemas/StoryBoardActive'
                creator:
                    $ref: '#/components/schemas/UserInfo'
        GetStoryboardsRequest:
            type: object
            properties:
                storyId:
                    type: string
                timelineId:
                    type: string
                startTime:
                    type: string
                endTime:
                    type: string
                userId:
                    type: string
                isMultiBranch:
                    type: boolean
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                orderBy:
                    type: integer
                    format: enum
            description: GetStoryboardsRequest 获取故事板列表的请求参数
        GetStoryboardsResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/GetStoryboardsResponse_Data'
            description: GetStoryboardsResponse 获取故事板列表的响应结果
        GetStoryboardsResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardActive'
                isMultiBranch:
                    type: boolean
                total:
                    type: string
                offset:
                    type: string
                pageSize:
                    type: string
        GetUnPublishStoryboardRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取未发布故事板请求
                / 获取用户所有未发布状态的故事板列表
        GetUnPublishStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                storyboardactives:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardActive'
                    description: / 故事板活动列表
                total:
                    type: string
                    description: / 总数量
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取未发布故事板响应
                / 返回未发布的故事板列表
        GetUserChatMessagesRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                chatId:
                    type: string
                    description: / 聊天会话ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                timestamp:
                    type: string
                    description: / 时间戳，用于获取指定时间之前的消息
            description: |-
                / 获取用户聊天消息请求
                / 获取指定聊天会话中的消息记录
        GetUserChatMessagesResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChatMessage'
                    description: / 消息列表
                timestamp:
                    type: string
                    description: / 当前时间戳
                total:
                    type: string
                    description: / 消息总数
                haveMore:
                    type: boolean
                    description: / 是否有更多历史消息
            description: |-
                / 获取用户聊天消息响应
                / 返回聊天消息列表
        GetUserChatWithRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 获取用户与角色对话请求
                / 获取用户与指定角色的完整聊天会话
        GetUserChatWithRoleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChatMessage'
                    description: / 聊天消息列表
                chatContext:
                    allOf:
                        - $ref: '#/components/schemas/ChatContext'
                    description: / 聊天上下文信息
                total:
                    type: string
                    description: / 消息总数
                haveMore:
                    type: boolean
                    description: / 是否有更多历史消息
            description: |-
                / 获取用户与角色对话响应
                / 返回完整的聊天记录和上下文信息
        GetUserCreatedRolesRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: integer
                    description: / 故事ID（可选），用于筛选特定故事的角色
                    format: int32
                stage:
                    type: integer
                    description: / 阶段状态筛选，0表示不筛选
                    format: int32
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取用户创建的角色请求
                / 获取指定用户创建的所有故事角色列表
        GetUserCreatedRolesResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
                    description: / 角色列表
                total:
                    type: string
                    description: / 总数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
            description: |-
                / 获取用户创建的角色响应
                / 返回用户创建的角色列表
        GetUserCreatedStoryboardsRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: integer
                    description: / 故事ID（可选），用于筛选特定故事的故事板
                    format: int32
                stage:
                    type: integer
                    description: / 阶段状态筛选，0表示不筛选
                    format: int32
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取用户创建的故事板请求
                / 获取指定用户创建的所有故事板列表
        GetUserCreatedStoryboardsResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                storyboards:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardActive'
                    description: / 故事板列表
                total:
                    type: string
                    description: / 总数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
            description: |-
                / 获取用户创建的故事板响应
                / 返回用户创建的故事板列表
        GetUserProfileRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 获取用户资料请求
                / 获取指定用户的详细资料信息
        GetUserProfileResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                info:
                    allOf:
                        - $ref: '#/components/schemas/UserProfileInfo'
                    description: / 用户资料信息
            description: |-
                / 获取用户资料响应
                / 返回用户的详细资料
        GetUserWatchRoleActiveStoryBoardsRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
                filter:
                    type: string
                    description: / 筛选条件，如 "published", "draft" 等
            description: |-
                / 获取用户关注角色的活跃故事板请求
                / 获取用户关注的角色参与的活跃故事板列表
        GetUserWatchRoleActiveStoryBoardsResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                storyboards:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardActive'
                    description: / 故事板列表
                total:
                    type: string
                    description: / 总数量
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取用户关注角色的活跃故事板响应
                / 返回角色参与的活跃故事板列表
        GetUserWatchStoryActiveStoryBoardsRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
                filter:
                    type: string
                    description: / 筛选条件，如 "published", "draft" 等
            description: |-
                / 获取用户关注故事的活跃故事板请求
                / 获取用户关注的故事中的活跃故事板列表
        GetUserWatchStoryActiveStoryBoardsResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                storyboards:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardActive'
                    description: / 故事板列表
                total:
                    type: string
                    description: / 总数量
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取用户关注故事的活跃故事板响应
                / 返回故事中的活跃故事板列表
        GetUserWithRoleChatListRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: string
                    description: / 故事ID（可选），用于筛选特定故事的角色对话
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
            description: |-
                / 获取用户与角色对话列表请求
                / 获取用户与各个角色的所有聊天会话列表
        GetUserWithRoleChatListResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                chats:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChatContext'
                    description: / 聊天上下文列表
                total:
                    type: string
                    description: / 对话总数
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 获取用户与角色对话列表响应
                / 返回聊天会话列表
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        GroupActiveHeamapRequest:
            type: object
            properties:
                groupId:
                    type: string
                    description: "/ [必填] 群组ID\n/ \n/ 要查询活跃度的群组唯一标识\n/ 验证规则：必须大于 0"
                userId:
                    type: string
                    description: "/ [必填] 请求用户ID\n/ \n/ 发起请求的用户ID，用于权限验证\n/ 验证规则：必须大于 0\n/ 用途：确认用户有权查看该群组的活跃数据"
                startTime:
                    type: string
                    description: "/ [必填] 开始时间\n/ \n/ 查询时间范围的起始时间戳（Unix时间戳，秒）\n/ 验证规则：必须大于 0"
                endTime:
                    type: string
                    description: "/ [必填] 结束时间\n/ \n/ 查询时间范围的结束时间戳（Unix时间戳，秒）\n/ 验证规则：必须大于 0，且应大于 start_time\n/ 建议范围：不超过1年"
            description: "==================== 群组活跃热力图 ====================\n/ 群组活跃热力图请求\n/ \n/ 获取指定群组在指定时间范围内的活跃度热力图数据，展示群组整体活跃情况"
        GroupActiveHeamapResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息描述
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/HeatmapDataItem'
                    description: / 热力图数据列表，包含每日的群组活跃度信息
                totalCount:
                    type: string
                    description: / 总活跃次数统计
                memberCount:
                    type: string
                    description: / 参与活跃的成员数量
            description: |-
                / 群组活跃热力图响应
                / 返回群组在指定时间范围内的活跃度热力图数据及统计信息
        GroupInfo:
            type: object
            properties:
                groupId:
                    type: string
                name:
                    type: string
                avatar:
                    type: string
                desc:
                    type: string
                creator:
                    type: string
                owner:
                    type: string
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/Tags'
                location:
                    type: string
                status:
                    type: integer
                    format: int32
                profile:
                    $ref: '#/components/schemas/GroupProfileInfo'
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/GroupMemberInfo'
                currentUserStatus:
                    $ref: '#/components/schemas/WhatCurrentUserStatus'
                Ctime:
                    type: string
                Mtime:
                    type: string
        GroupMemberInfo:
            type: object
            properties:
                userId:
                    type: string
                name:
                    type: string
                avatar:
                    type: string
                desc:
                    type: string
                memberType:
                    type: integer
                    format: enum
        GroupProfileInfo:
            type: object
            properties:
                groupId:
                    type: string
                groupMemberNum:
                    type: integer
                    format: int32
                groupFollowerNum:
                    type: integer
                    format: int32
                groupStoryNum:
                    type: integer
                    format: int32
                description:
                    type: string
                backgroudUrl:
                    type: string
                Ctime:
                    type: string
                Mtime:
                    type: string
        HeatmapDataItem:
            type: object
            properties:
                date:
                    type: string
                    description: "/ [必填] 日期\n/ \n/ 活跃度数据对应的日期\n/ 格式要求：YYYY-MM-DD（如 2024-01-15）\n/ 验证规则：必须符合日期格式正则表达式"
                count:
                    type: string
                    description: "/ [必填] 活跃次数\n/ \n/ 该日期的活跃操作次数（如创建、更新、评论等）\n/ 验证规则：必须大于等于 0\n/ 默认值：0"
                level:
                    type: string
                    description: "/ [必填] 热力等级\n/ \n/ 用于显示不同颜色深度的等级值\n/ 取值说明：\n/ - 0: 无活跃（灰色）\n/ - 1: 低活跃（浅绿）\n/ - 2: 中活跃（绿色）\n/ - 3: 高活跃（深绿）\n/ - 4: 极高活跃（最深绿）\n/ 验证规则：0-4"
            description: "==================== 用户活跃热力图 ====================\n/ 热力图数据项\n/ \n/ 表示单个日期的活跃度数据，用于生成GitHub风格的热力图可视化"
        JoinGroupRequest:
            type: object
            properties:
                groupId:
                    type: string
                    description: / 群组ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 加入群组请求
                / 用户申请加入指定群组
        JoinGroupResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/JoinGroupResponse_Data'
            description: |-
                / 加入群组响应
                / 返回加入群组的结果
        JoinGroupResponse_Data:
            type: object
            properties: {}
            description: / 返回数据
        LeaveGroupRequest:
            type: object
            properties:
                groupId:
                    type: string
                    description: / 群组ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 离开群组请求
                / 用户退出指定群组
        LeaveGroupResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/LeaveGroupResponse_Data'
            description: |-
                / 离开群组响应
                / 返回离开群组的结果
        LeaveGroupResponse_Data:
            type: object
            properties: {}
            description: / 返回数据
        LikeCommentRequest:
            type: object
            properties:
                commentId:
                    type: string
                    description: / 评论ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 点赞评论请求
                / 为评论点赞
        LikeCommentResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 点赞评论响应
                / 返回点赞操作的结果
        LikeStoryRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 点赞故事请求
                / 为故事点赞表示喜欢
        LikeStoryResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 点赞故事响应
                / 返回点赞操作的结果
        LikeStoryRolePosterRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                posterId:
                    type: string
                    description: / 海报ID，必须大于0
            description: |-
                / 点赞角色海报请求
                / 为角色海报点赞
        LikeStoryRolePosterResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                currentLikeCount:
                    type: string
                    description: / 当前点赞总数
            description: |-
                / 点赞角色海报响应
                / 返回点赞后的最新点赞数
        LikeStoryRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
            description: |-
                / 点赞故事角色请求
                / 为故事角色点赞
        LikeStoryRoleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 点赞故事角色响应
                / 返回点赞操作的结果
        LikeStoryboardRequest:
            type: object
            properties:
                boardId:
                    type: string
                userId:
                    type: string
                storyId:
                    type: string
        LikeStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/LikeStoryboardResponse_Data'
        LikeStoryboardResponse_Data:
            type: object
            properties:
                storyId:
                    type: string
                boardId:
                    type: string
                userId:
                    type: string
                likeNum:
                    type: string
        LoginRequest:
            required:
                - account
                - password
                - loginType
            type: object
            properties:
                account:
                    type: string
                    description: "/ [必填] 账号\n/ \n/ 支持邮箱、手机号或用户名\n/ 长度限制：3-100 字符"
                password:
                    type: string
                    description: "/ [必填] 密码\n/ \n/ 用户登录密码\n/ 长度限制：6-128 字符"
                loginType:
                    type: integer
                    description: "/ [必填] 登录类型\n/ \n/ 指定使用的登录方式：\n/ - 1: 密码登录\n/ - 2: 验证码登录\n/ - 3: 第三方登录\n/ 取值范围：1-3"
                    format: int32
            description: "/ 用户登录请求\n/ \n/ 支持多种登录方式的用户认证，包括密码登录、验证码登录和第三方登录"
        LoginResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                msg:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/LoginResponse_Data'
            description: |-
                / 用户登录响应
                / 返回登录结果和会话信息
        LoginResponse_Data:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID
                token:
                    type: string
                    description: / 访问令牌
                timestamp:
                    type: string
                    description: / 当前时间戳
                expireAt:
                    type: string
                    description: / 令牌过期时间戳
                status:
                    type: integer
                    description: / 账号状态：0-正常，1-冻结，2-待激活
                    format: int32
            description: / 登录成功返回的数据
        LogoutRequest:
            type: object
            properties:
                token:
                    type: string
                userId:
                    type: string
        LogoutResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                msg:
                    type: string
        PublishStoryboardRequest:
            type: object
            properties:
                storyboardId:
                    type: string
                    description: / 故事板ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 发布故事板请求
                / 将故事板发布为正式版本，其他用户可见
        PublishStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 发布故事板响应
                / 返回发布操作的结果
        QueryTaskStatusRequest:
            type: object
            properties:
                boardId:
                    type: string
                userId:
                    type: string
                storyId:
                    type: string
                senceId:
                    type: string
                roleId:
                    type: string
                renderType:
                    type: integer
                    format: enum
                TaskId:
                    type: string
        QueryTaskStatusResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/QueryTaskStatusResponse_Data'
        QueryTaskStatusResponse_Data:
            type: object
            properties:
                stage:
                    type: integer
                    format: enum
                dashscopeTaskStatus:
                    type: integer
                    format: enum
                renderStoryboardDetail:
                    $ref: '#/components/schemas/RenderStoryboardDetail'
                renderStoryDetail:
                    $ref: '#/components/schemas/RenderStoryDetail'
                renderStoryboardSenceList:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardSence'
                renderStoryRole:
                    $ref: '#/components/schemas/StoryRole'
        RefreshTokenRequest:
            type: object
            properties:
                token:
                    type: string
        RefreshTokenResponse:
            type: object
            properties:
                token:
                    type: string
                userId:
                    type: string
        RegisterRequest:
            required:
                - account
                - password
                - name
                - email
                - phone
            type: object
            properties:
                account:
                    type: string
                    description: "/ [必填] 账号\n/ \n/ 用户登录账号，用于身份标识\n/ 长度限制：3-50 字符\n/ 格式要求：字母、数字、下划线"
                password:
                    type: string
                    description: "/ [必填] 密码\n/ \n/ 用户登录密码\n/ 长度限制：6-128 字符\n/ 安全建议：包含字母、数字和特殊字符"
                name:
                    type: string
                    description: "/ [必填] 用户昵称\n/ \n/ 显示名称，用于界面展示\n/ 长度限制：1-50 字符"
                email:
                    type: string
                    description: "/ [必填] 邮箱地址\n/ \n/ 用于接收通知和找回密码\n/ 格式要求：符合邮箱格式规范（如 user@example.com）"
                phone:
                    type: string
                    description: "/ [必填] 手机号\n/ \n/ 用于接收验证码和通知\n/ 长度限制：8-20 字符"
            description: "/ 用户注册请求\n/ \n/ 创建新用户账号，需要提供完整的注册信息"
        RegisterResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                msg:
                    type: string
                    description: / 响应消息
            description: |-
                / 用户注册响应
                / 返回注册结果
        RenderStoryBoardSenceRequest:
            type: object
            properties:
                senceId:
                    type: string
                userId:
                    type: string
                boardId:
                    type: integer
                    format: int32
        RenderStoryBoardSenceResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                generatingStage:
                    type: integer
                    format: int32
                data:
                    $ref: '#/components/schemas/StoryBoardSence'
        RenderStoryBoardSencesRequest:
            type: object
            properties:
                userId:
                    type: string
                boardId:
                    type: integer
                    format: int32
        RenderStoryBoardSencesResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                generatingStage:
                    type: integer
                    format: int32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardSence'
        RenderStoryDetail:
            type: object
            properties:
                text:
                    type: string
                status:
                    type: integer
                    format: int32
                urls:
                    type: array
                    items:
                        type: string
                storyId:
                    type: string
                boardId:
                    type: string
                userId:
                    type: string
                renderType:
                    type: integer
                    format: enum
                result:
                    $ref: '#/components/schemas/StoryInfo'
                timecost:
                    type: integer
                    format: int32
        RenderStoryRequest:
            type: object
            properties:
                storyId:
                    type: string
                userId:
                    type: string
                isRegenerate:
                    type: boolean
                boardId:
                    type: string
                renderType:
                    type: integer
                    format: enum
        RenderStoryResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/RenderStoryDetail'
        RenderStoryRoleContinuouslyRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                prompt:
                    type: string
                    description: / 渲染提示词，最大长度2000字符
                referenceImage:
                    type: string
                    description: / 参考图片URL
            description: |-
                / 持续渲染故事角色请求
                / 持续优化和渲染角色形象，直到达到满意效果
        RenderStoryRoleContinuouslyResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                detail:
                    allOf:
                        - $ref: '#/components/schemas/RenderStoryRoleDetail'
                    description: / 渲染详情
                haveMore:
                    type: boolean
                    description: / 是否还有更多渲染步骤
            description: |-
                / 持续渲染故事角色响应
                / 返回渲染结果和是否需要继续渲染的标志
        RenderStoryRoleDetail:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID
                genId:
                    type: string
                    description: / 生成任务ID
                isFinished:
                    type: boolean
                    description: / 是否渲染完成
                roleDescription:
                    type: string
                    description: / 角色描述
                roleCharacter:
                    type: string
                    description: / 角色性格特征
                roleBehavior:
                    type: string
                    description: / 角色行为特点
                roleGoal:
                    type: string
                    description: / 角色目标
                backgroundImage:
                    type: string
                    description: / 背景图片URL
                avatarImage:
                    type: string
                    description: / 头像图片URL
                background:
                    type: string
                    description: / 背景故事
                appearance:
                    type: string
                    description: / 外观描述
                personality:
                    type: string
                    description: / 性格描述
                abilityFeatures:
                    type: string
                    description: / 能力特征
            description: |-
                / 渲染故事角色详情
                / 包含角色渲染后的完整特征信息
        RenderStoryRoleDetailRequest:
            type: object
            properties:
                roleId:
                    type: string
                role:
                    $ref: '#/components/schemas/StoryRole'
                prompt:
                    type: string
                background:
                    type: string
                userId:
                    type: string
        RenderStoryRoleDetailResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                role:
                    $ref: '#/components/schemas/StoryRole'
        RenderStoryRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                prompt:
                    type: string
                    description: / 渲染提示词，最大长度2000字符
                refImages:
                    type: array
                    items:
                        type: string
                    description: / 参考图片URL列表，最多10张
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 渲染故事角色请求
                / 使用AI渲染角色的形象和特征
        RenderStoryRoleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                detail:
                    allOf:
                        - $ref: '#/components/schemas/RenderStoryRoleDetail'
                    description: / 渲染详情
            description: |-
                / 渲染故事角色响应
                / 返回角色渲染的详细结果
        RenderStoryRolesRequest:
            type: object
            properties:
                storyId:
                    type: string
                boardId:
                    type: string
                userId:
                    type: string
                prompt:
                    type: string
                background:
                    type: string
                params:
                    $ref: '#/components/schemas/StoryRole'
        RenderStoryRolesResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
        RenderStoryboardDetail:
            type: object
            properties:
                text:
                    type: string
                status:
                    type: integer
                    format: int32
                urls:
                    type: array
                    items:
                        type: string
                storyId:
                    type: string
                boardId:
                    type: string
                userId:
                    type: string
                renderType:
                    type: integer
                    format: enum
                result:
                    $ref: '#/components/schemas/StoryChapter'
                timecost:
                    type: integer
                    format: int32
        RenderStoryboardRequest:
            type: object
            properties:
                boardId:
                    type: string
                storyId:
                    type: string
                userId:
                    type: string
                isRegenerate:
                    type: boolean
                renderType:
                    type: integer
                    format: enum
        RenderStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/RenderStoryboardDetail'
        ResetPasswordRequest:
            type: object
            properties:
                account:
                    type: string
                oldPwd:
                    type: string
                newPwd:
                    type: string
        ResetPasswordResponse:
            type: object
            properties:
                account:
                    type: string
                status:
                    type: string
                timestamp:
                    type: string
        RestoreStoryboardRequest:
            type: object
            properties:
                storyboardId:
                    type: string
                    description: / 故事板ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
            description: |-
                / 恢复故事板请求
                / 从草稿或历史版本恢复故事板状态
        RestoreStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                store:
                    allOf:
                        - $ref: '#/components/schemas/StoryboardStageStore'
                    description: / 故事板状态存储信息
            description: |-
                / 恢复故事板响应
                / 返回恢复的故事板完整信息
        RolePosterDetail:
            type: object
            properties:
                id:
                    type: string
                    description: / 海报ID
                storyId:
                    type: string
                    description: / 所属故事ID
                roleId:
                    type: string
                    description: / 所属角色ID
                posterUrl:
                    type: string
                    description: / 海报图片URL
                prompt:
                    type: string
                    description: / 生成提示词
                likeCount:
                    type: string
                    description: / 点赞数
                isLikedByUser:
                    type: boolean
                    description: / 当前用户是否已点赞
                creator:
                    allOf:
                        - $ref: '#/components/schemas/UserInfo'
                    description: / 海报创建者信息
                createdAt:
                    type: string
                    description: / 创建时间戳
                updatedAt:
                    type: string
                    description: / 更新时间戳
            description: |-
                / 角色海报详细信息
                / 表示角色海报图片的完整信息
        SaveStoryboardCraftRequest:
            type: object
            properties:
                storyboardId:
                    type: string
                    description: / 故事板ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 保存故事板草稿请求
                / 将当前故事板保存为草稿状态，便于后续继续编辑
        SaveStoryboardCraftResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 保存故事板草稿响应
                / 返回保存操作的结果
        SearchGroupRequest:
            type: object
            properties:
                name:
                    type: string
                    description: / 搜索关键词，群组名称，长度1-100字符
                userId:
                    type: string
                    description: / 请求用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
                scope:
                    type: integer
                    description: / 搜索范围类型
                    format: enum
                storyId:
                    type: string
                    description: / 故事ID（可选），用于在特定故事相关的群组中搜索
                groupId:
                    type: string
                    description: / 群组ID（可选），用于在特定群组内搜索
            description: |-
                / 搜索群组请求
                / 根据名称搜索群组，支持不同范围的搜索
        SearchGroupResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/SearchGroupResponse_Data'
            description: |-
                / 搜索群组响应
                / 返回匹配的群组列表
        SearchGroupResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GroupInfo'
                    description: / 群组信息列表
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
                total:
                    type: string
                    description: / 总数量
            description: / 返回数据
        SearchRolesRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 请求用户ID，必须大于0
                keyword:
                    type: string
                    description: / 搜索关键词，角色名称或描述，长度1-200字符
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
                scope:
                    type: integer
                    description: / 搜索范围类型：全局、群组内、故事内等
                    format: enum
                storyId:
                    type: string
                    description: / 故事ID（可选），用于在特定故事内搜索
                groupId:
                    type: string
                    description: / 群组ID（可选），用于在特定群组内搜索
            description: |-
                / 搜索角色请求
                / 根据关键词搜索故事角色，支持不同范围的搜索
        SearchRolesResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
                    description: / 匹配的角色列表
                total:
                    type: string
                    description: / 总数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 搜索角色响应
                / 返回匹配的角色列表
        SearchStoriesRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 请求用户ID，必须大于0
                keyword:
                    type: string
                    description: / 搜索关键词，长度1-200字符
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
                scope:
                    type: integer
                    description: / 搜索范围类型：全局、群组内等
                    format: enum
                groupId:
                    type: string
                    description: / 群组ID（可选），用于在特定群组内搜索
            description: |-
                / 搜索故事请求
                / 根据关键词搜索故事，支持不同范围的搜索
        SearchStoriesResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                stories:
                    type: array
                    items:
                        $ref: '#/components/schemas/Story'
                    description: / 匹配的故事列表
                total:
                    type: string
                    description: / 总数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 搜索故事响应
                / 返回匹配的故事列表
        SearchUserRequest:
            required:
                - name
                - offset
                - pageSize
            type: object
            properties:
                name:
                    type: string
                    description: "/ [必填] 搜索关键词\n/ \n/ 用户名或昵称的搜索关键词\n/ 长度限制：1-100 字符\n/ 支持：中文、英文、数字"
                groupId:
                    type: string
                    description: "/ [可选] 群组ID\n/ \n/ 限定在特定群组内搜索用户\n/ 验证规则：如果提供则必须大于等于 0\n/ 默认值：0（全局搜索）"
                isFuzzy:
                    type: boolean
                    description: "/ [可选] 模糊搜索标志\n/ \n/ 搜索模式选择\n/ 取值说明：\n/ - true: 模糊搜索（包含关键词即可）\n/ - false: 精确匹配（完全相同）\n/ 默认值：true"
                offset:
                    type: string
                    description: "/ [必填] 偏移量\n/ \n/ 分页查询的起始位置\n/ 验证规则：必须大于等于 0"
                pageSize:
                    type: string
                    description: "/ [必填] 每页数量\n/ \n/ 单页返回的最大记录数\n/ 验证规则：1-100\n/ 建议值：20"
            description: "/ 搜索用户请求\n/ \n/ 根据名称搜索用户，支持模糊搜索和精确搜索，可在群组范围内搜索"
        SearchUserResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                msg:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/SearchUserResponse_Data'
            description: |-
                / 搜索用户响应
                / 返回匹配的用户列表
        SearchUserResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInfo'
                    description: / 用户信息列表
                offset:
                    type: string
                    description: / 当前偏移量
                pageSize:
                    type: string
                    description: / 每页数量
                total:
                    type: integer
                    description: / 总数量
                    format: int32
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: / 返回数据
        ShareStoryboardRequest:
            type: object
            properties:
                boardId:
                    type: string
                userId:
                    type: string
                storyId:
                    type: string
        ShareStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/ShareStoryboardResponse_Data'
        ShareStoryboardResponse_Data:
            type: object
            properties:
                storyId:
                    type: string
                boardId:
                    type: string
                userId:
                    type: string
                shareNum:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Story:
            type: object
            properties:
                id:
                    type: string
                groupId:
                    type: string
                name:
                    type: string
                avatar:
                    type: string
                creatorId:
                    type: string
                ownerId:
                    type: string
                tags:
                    type: array
                    items:
                        $ref: '#/components/schemas/Tags'
                visable:
                    type: integer
                    format: enum
                isAchieve:
                    type: boolean
                isClose:
                    type: boolean
                isAiGen:
                    type: boolean
                origin:
                    type: string
                rootBoardId:
                    type: string
                desc:
                    type: string
                params:
                    $ref: '#/components/schemas/StoryParams'
                status:
                    type: integer
                    format: int32
                title:
                    type: string
                isliked:
                    type: boolean
                iswatched:
                    type: boolean
                currentUserStatus:
                    $ref: '#/components/schemas/WhatCurrentUserStatus'
                likeCount:
                    type: string
                commentCount:
                    type: string
                shareCount:
                    type: string
                followCount:
                    type: string
                totalBoards:
                    type: string
                totalRoles:
                    type: string
                totalMembers:
                    type: string
                cover:
                    type: string
                senceNum:
                    type: string
                style:
                    type: string
                Ctime:
                    type: string
                Mtime:
                    type: string
            description: Story 表示一个完整的故事实体
        StoryBoard:
            type: object
            properties:
                storyId:
                    type: string
                num:
                    type: string
                prevBoardId:
                    type: string
                nextBoardId:
                    type: array
                    items:
                        type: string
                creator:
                    type: string
                storyBoardId:
                    type: string
                title:
                    type: string
                content:
                    type: string
                isAiGen:
                    type: boolean
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
                backgroud:
                    type: string
                params:
                    $ref: '#/components/schemas/StoryBoardParams'
                sences:
                    $ref: '#/components/schemas/StoryBoardSences'
                isMultiBranch:
                    type: boolean
                stage:
                    type: integer
                    format: enum
                ForkNum:
                    type: string
                Ctime:
                    type: string
                Mtime:
                    type: string
                currentUserStatus:
                    $ref: '#/components/schemas/WhatCurrentUserStatus'
            description: StoryBoard 表示故事中的一个场景或章节
        StoryBoardActive:
            type: object
            properties:
                storyboard:
                    $ref: '#/components/schemas/StoryBoard'
                totalLikeCount:
                    type: string
                totalCommentCount:
                    type: string
                totalShareCount:
                    type: string
                totalRenderCount:
                    type: string
                totalForkCount:
                    type: string
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardActiveUser'
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardActiveRole'
                creator:
                    $ref: '#/components/schemas/StoryBoardActiveUser'
                summary:
                    $ref: '#/components/schemas/StorySummaryInfo'
                isliked:
                    type: boolean
                mtime:
                    type: string
            description: StoryBoardActive 故事板活动信息
        StoryBoardActiveRole:
            type: object
            properties:
                roleId:
                    type: string
                roleName:
                    type: string
                roleAvatar:
                    type: string
            description: StoryBoardActiveRole 故事板活动中的角色信息
        StoryBoardActiveUser:
            type: object
            properties:
                userId:
                    type: string
                userName:
                    type: string
                userAvatar:
                    type: string
            description: StoryBoardActiveUser 故事板活动中的用户信息
        StoryBoardParams:
            type: object
            properties:
                boardId:
                    type: string
                StoryDescription:
                    type: string
                NumIds:
                    type: integer
                    format: int32
                NumSteps:
                    type: integer
                    format: int32
                SdModel:
                    type: string
                RefImage:
                    type: string
                LayoutStyle:
                    type: string
                Style:
                    type: string
                NegativePrompt:
                    type: string
                OutputQuality:
                    type: integer
                    format: int32
                GuidanceScale:
                    type: number
                    format: float
                OutputFormat:
                    type: integer
                    format: int32
                ImageWidth:
                    type: integer
                    format: int32
                ImageHeight:
                    type: integer
                    format: int32
                sceneCount:
                    type: integer
                    format: int32
            description: StoryBoardParams 包含故事板渲染的相关参数
        StoryBoardSence:
            type: object
            properties:
                senceId:
                    type: string
                content:
                    type: string
                characterIds:
                    type: array
                    items:
                        type: string
                creatorId:
                    type: string
                storyId:
                    type: string
                boardId:
                    type: string
                imagePrompts:
                    type: string
                audioPrompts:
                    type: string
                videoPrompts:
                    type: string
                isGenerating:
                    type: integer
                    format: int32
                genResult:
                    type: string
                images:
                    type: array
                    items:
                        type: string
                audioUrl:
                    type: string
                videoUrl:
                    type: string
                status:
                    type: integer
                    format: int32
                Ctime:
                    type: string
                Mtime:
                    type: string
        StoryBoardSences:
            type: object
            properties:
                total:
                    type: string
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryBoardSence'
            description: StoryBoardSences 包含故事板中的所有场景
        StoryChapter:
            type: object
            properties:
                chapterSummary:
                    allOf:
                        - $ref: '#/components/schemas/ChapterSummary'
                    description: 章节情节简述
                chapterDetailInfo:
                    allOf:
                        - $ref: '#/components/schemas/ChapterDetailInformation'
                    description: 章节详细情节
        StoryComment:
            type: object
            properties:
                commentId:
                    type: string
                    description: / 评论ID
                storyId:
                    type: string
                    description: / 所属故事ID
                boardId:
                    type: string
                    description: / 所属故事板ID（可选）
                roleId:
                    type: string
                    description: / 相关角色ID（可选）
                prevId:
                    type: string
                    description: / 上一条评论ID（用于回复链）
                rootCommentId:
                    type: string
                    description: / 根评论ID（用于楼层结构）
                userId:
                    type: string
                    description: / 评论者用户ID
                content:
                    type: string
                    description: / 评论内容
                createdAt:
                    type: string
                    description: / 创建时间
                updatedAt:
                    type: string
                    description: / 更新时间
                likeCount:
                    type: string
                    description: / 点赞数
                replyCount:
                    type: string
                    description: / 回复数
                isLiked:
                    type: string
                    description: / 当前用户是否已点赞，1-已点赞，0-未点赞
                creator:
                    allOf:
                        - $ref: '#/components/schemas/UserInfo'
                    description: / 评论创建者信息
                createdAtTimestamp:
                    type: string
                    description: / 创建时间戳
            description: |-
                / 故事评论信息
                / 表示单条评论的完整信息
        StoryContributor:
            type: object
            properties:
                userId:
                    type: string
                    description: / 贡献者用户ID
                username:
                    type: string
                    description: / 贡献者用户名
                avatar:
                    type: string
                    description: / 贡献者头像URL
                viplevel:
                    type: string
                    description: / VIP等级，0表示普通用户
            description: |-
                / 故事贡献者信息
                / 表示参与故事创作的用户信息
        StoryGentaskDetail:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID
                boardId:
                    type: string
                    description: / 故事板ID
                storyboardDesc:
                    type: string
                    description: / 故事板描述
                senceId:
                    type: string
                    description: / 场景ID
                senceDesc:
                    type: string
                    description: / 场景描述
                prompt:
                    type: string
                    description: / 生成提示词
                taskType:
                    type: string
                    description: / 任务类型：1-图片，2-视频，3-音频
                taskStage:
                    type: string
                    description: / 任务阶段
                startImageUrl:
                    type: string
                    description: / 起始图片URL
                endImageUrl:
                    type: string
                    description: / 结束图片URL
                videoUrl:
                    type: string
                    description: / 生成的视频URL
                regImageUrl:
                    type: string
                    description: / 参考图片URL
                style:
                    type: string
                    description: / 生成风格
            description: |-
                / 故事生成任务详情
                / 包含故事生成任务的详细参数和结果
        StoryInfo:
            type: object
            properties:
                故事名称和主题:
                    $ref: '#/components/schemas/StoryNameAndTheme'
                故事章节:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChapterInfo'
        StoryNameAndTheme:
            type: object
            properties:
                故事名称:
                    type: string
                故事主题:
                    type: string
                故事简介:
                    type: string
            description: StoryNameAndTheme 表示故事的名称和主题信息
        StoryParams:
            type: object
            properties:
                storyDescription:
                    type: string
                refImage:
                    type: string
                negativePrompt:
                    type: string
                prompt:
                    type: string
                layoutStyle:
                    type: string
                style:
                    type: string
                background:
                    type: string
                styleRefImage:
                    type: string
                subject:
                    type: string
                sceneCount:
                    type: integer
                    format: int32
            description: StoryParams 包含故事生成和渲染的相关参数
        StoryRole:
            type: object
            properties:
                roleId:
                    type: string
                storyId:
                    type: string
                characterDescription:
                    type: string
                characterName:
                    type: string
                characterAvatar:
                    type: string
                characterId:
                    type: string
                characterType:
                    type: string
                characterPrompt:
                    type: string
                characterDetail:
                    $ref: '#/components/schemas/CharacterDetail'
                characterRefImages:
                    type: array
                    items:
                        type: string
                creatorId:
                    type: string
                status:
                    type: integer
                    format: int32
                likeCount:
                    type: string
                followCount:
                    type: string
                storyboardNum:
                    type: string
                version:
                    type: string
                isliked:
                    type: boolean
                isfolllowed:
                    type: boolean
                Ctime:
                    type: string
                Mtime:
                    type: string
                currentUserStatus:
                    $ref: '#/components/schemas/WhatCurrentUserStatus'
                creator:
                    $ref: '#/components/schemas/UserInfo'
                posterImageUrl:
                    type: string
                story:
                    $ref: '#/components/schemas/StorySummaryInfo'
            description: StoryRole 表示故事中的角色
        StoryStyleDesc:
            type: object
            properties:
                id:
                    type: string
                    description: / 风格ID
                style:
                    type: string
                    description: / 风格名称
                description:
                    type: string
                    description: / 风格描述
            description: |-
                / 故事风格描述
                / 表示一个图片风格的信息
        StorySummaryInfo:
            type: object
            properties:
                storyId:
                    type: string
                storyTitle:
                    type: string
                storyAvatar:
                    type: string
                storyDescription:
                    type: string
                storyCover:
                    type: string
                storyTags:
                    type: string
                createTime:
                    type: string
                createUserId:
                    type: string
                totalBoardCount:
                    type: string
                totalLikeCount:
                    type: string
                totalCommentCount:
                    type: string
                totalShareCount:
                    type: string
                totalRenderCount:
                    type: string
                totalForkCount:
                    type: string
                totalViewCount:
                    type: string
            description: StorySummaryInfo 故事摘要信息
        StoryboardDraftDetail:
            type: object
            properties:
                draftId:
                    type: string
                    description: / 草稿ID，唯一标识符
                storyId:
                    type: string
                    description: / 所属故事ID
                storyboardId:
                    type: string
                    description: / 关联的故事板ID
                title:
                    type: string
                    description: / 草稿标题，最大长度200字符
                content:
                    type: string
                    description: / 草稿内容，最大长度10000字符
                background:
                    type: string
                    description: / 背景描述
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
                    description: / 参与的角色列表
                sences:
                    allOf:
                        - $ref: '#/components/schemas/StoryBoardSences'
                    description: / 场景列表
                params:
                    allOf:
                        - $ref: '#/components/schemas/StoryBoardParams'
                    description: / 故事板渲染参数
                createdAt:
                    type: string
                    description: / 创建时间戳（秒）
                updatedAt:
                    type: string
                    description: / 最后更新时间戳（秒）
                stage:
                    type: integer
                    description: / 生成阶段状态
                    format: enum
                userId:
                    type: string
                    description: / 草稿所有者用户ID
            description: |-
                ==================== 用户故事板草稿详情 ====================
                / 故事板草稿详细信息
                / 包含故事板草稿的完整信息，包括内容、角色、场景等
        StoryboardStageStore:
            type: object
            properties:
                storyboard:
                    allOf:
                        - $ref: '#/components/schemas/StoryBoard'
                    description: / 故事板信息
                sences:
                    allOf:
                        - $ref: '#/components/schemas/StoryBoardSences'
                    description: / 场景列表
                stage:
                    type: integer
                    description: / 当前阶段状态
                    format: enum
                lastUpdateTime:
                    type: string
                    description: / 最后更新时间戳
                version:
                    type: string
                    description: / 版本号
                userId:
                    type: string
                    description: / 用户ID
            description: |-
                / 故事板阶段存储信息
                / 包含故事板的完整状态和版本信息
        StreamChatMessage:
            type: object
            properties:
                roleId:
                    type: string
                userId:
                    type: string
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChatMessage'
        StreamChatMessageRequest:
            type: object
            properties:
                message:
                    $ref: '#/components/schemas/StreamChatMessage'
                timestamp:
                    type: string
                requestId:
                    type: string
                token:
                    type: string
        StreamChatMessageResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
                timestamp:
                    type: string
                requestId:
                    type: string
                replyMessages:
                    type: array
                    items:
                        $ref: '#/components/schemas/StreamChatMessage'
        Tags:
            type: object
            properties:
                groupId:
                    type: integer
                    format: int32
                creatorId:
                    type: integer
                    format: int32
                name:
                    type: string
                status:
                    type: integer
                    format: int32
                isGlobal:
                    type: integer
                    format: int32
                id:
                    type: integer
                    format: int32
                expiredTime:
                    type: string
                Ctime:
                    type: string
                Mtime:
                    type: string
        TrendingStoryRequest:
            type: object
            properties:
                start:
                    type: string
                    description: / 开始时间戳（秒），必须大于0
                end:
                    type: string
                    description: / 结束时间戳（秒），必须大于开始时间
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
                pageNumber:
                    type: string
                    description: / 页码，从1开始
            description: |-
                / 热门故事请求
                / 获取指定时间范围内的热门故事列表
        TrendingStoryResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/TrendingStoryResponse_Data'
            description: |-
                / 热门故事响应
                / 返回热门故事列表及分页信息
        TrendingStoryResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Story'
                    description: / 热门故事列表
                pageSize:
                    type: string
                    description: / 每页数量
                pageNumber:
                    type: string
                    description: / 当前页码
                total:
                    type: string
                    description: / 总数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: / 返回数据
        TrendingStoryRoleRequest:
            type: object
            properties:
                start:
                    type: string
                    description: / 开始时间戳（秒），必须大于0
                end:
                    type: string
                    description: / 结束时间戳（秒），必须大于开始时间
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
                pageNumber:
                    type: string
                    description: / 页码，从1开始
            description: |-
                / 热门故事角色请求
                / 获取指定时间范围内的热门角色列表
        TrendingStoryRoleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/TrendingStoryRoleResponse_Data'
            description: |-
                / 热门故事角色响应
                / 返回热门角色列表及分页信息
        TrendingStoryRoleResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
                    description: / 热门角色列表
                pageSize:
                    type: string
                    description: / 每页数量
                pageNumber:
                    type: string
                    description: / 当前页码
                total:
                    type: string
                    description: / 总数量
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: / 返回数据
        UnFollowStoryRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
            description: |-
                / 取消关注故事角色请求
                / 取消对故事角色的关注
        UnFollowStoryRoleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 取消关注故事角色响应
                / 返回取消关注操作的结果
        UnLikeStoryRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 取消点赞故事请求
                / 取消对故事的点赞
        UnLikeStoryResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 取消点赞故事响应
                / 返回取消点赞操作的结果
        UnLikeStoryRolePosterRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                posterId:
                    type: string
                    description: / 海报ID，必须大于0
            description: |-
                / 取消点赞角色海报请求
                / 取消对角色海报的点赞
        UnLikeStoryRolePosterResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                currentLikeCount:
                    type: string
                    description: / 当前点赞总数
            description: |-
                / 取消点赞角色海报响应
                / 返回取消点赞后的最新点赞数
        UnLikeStoryRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
            description: |-
                / 取消点赞故事角色请求
                / 取消对故事角色的点赞
        UnLikeStoryRoleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 取消点赞故事角色响应
                / 返回取消点赞操作的结果
        UnLikeStoryboardRequest:
            type: object
            properties:
                boardId:
                    type: string
                userId:
                    type: string
                storyId:
                    type: string
        UnLikeStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        UnfollowUserRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 发起取消关注的用户ID，必须大于0
                followerId:
                    type: string
                    description: / 被取消关注的用户ID，必须大于0
            description: |-
                / 取消关注用户请求
                / 取消对另一个用户的关注
        UnfollowUserResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 取消关注用户响应
                / 返回取消关注操作的结果
        UpdateGroupInfoRequest:
            type: object
            properties:
                groupId:
                    type: string
                info:
                    $ref: '#/components/schemas/GroupInfo'
        UpdateGroupInfoResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/UpdateGroupInfoResponse_Data'
        UpdateGroupInfoResponse_Data:
            type: object
            properties:
                info:
                    $ref: '#/components/schemas/GroupInfo'
        UpdateGroupProfileRequest:
            type: object
            properties:
                groupId:
                    type: string
                info:
                    $ref: '#/components/schemas/GroupProfileInfo'
                userId:
                    type: string
        UpdateGroupProfileResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
        UpdateRoleDescriptionRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                description:
                    type: string
                    description: / 新的描述内容，最大长度2000字符
            description: |-
                / 更新角色描述请求
                / 更新角色的文本描述
        UpdateRoleDescriptionResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新角色描述响应
                / 返回更新操作的结果
        UpdateRolePromptRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                prompt:
                    type: string
                    description: / 新的提示词，最大长度2000字符
            description: |-
                / 更新角色提示词请求
                / 更新角色的生成提示词
        UpdateRolePromptResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新角色提示词响应
                / 返回更新操作的结果
        UpdateStoryAvatarRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                avatarUrl:
                    type: string
                    description: / 头像图片URL，必填
            description: |-
                / 更新故事头像请求
                / 更新故事的头像图片
        UpdateStoryAvatarResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新故事头像响应
                / 返回更新操作的结果
        UpdateStoryBoardSenceRequest:
            type: object
            properties:
                sence:
                    $ref: '#/components/schemas/StoryBoardSence'
                userId:
                    type: string
        UpdateStoryBoardSenceResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        UpdateStoryCoverRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                coverUrl:
                    type: string
                    description: / 封面图片URL
                useAiCover:
                    type: boolean
                    description: / 是否使用AI生成的封面
            description: |-
                / 更新故事封面请求
                / 更新故事的封面图片
        UpdateStoryCoverResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新故事封面响应
                / 返回更新操作的结果
        UpdateStoryImageStyleRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                styleId:
                    type: string
                    description: / 风格ID，必须大于0
                style:
                    type: string
                    description: / 风格名称
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 更新故事图片风格请求
                / 设置故事使用的图片风格
        UpdateStoryImageStyleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新故事图片风格响应
                / 返回更新操作的结果
        UpdateStoryRequest:
            type: object
            properties:
                shortDesc:
                    type: string
                origin:
                    type: string
                status:
                    type: integer
                    format: int32
                isAchieve:
                    type: boolean
                isClose:
                    type: boolean
                isAiGen:
                    type: boolean
                params:
                    $ref: '#/components/schemas/StoryParams'
                storyId:
                    type: string
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryRole'
            description: UpdateStoryRequest 更新故事的请求参数
        UpdateStoryResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/UpdateStoryResponse_Data'
            description: UpdateStoryResponse 更新故事的响应结果
        UpdateStoryResponse_Data:
            type: object
            properties:
                storyId:
                    type: integer
                    format: int32
        UpdateStoryRoleAvatorRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                avator:
                    type: string
                    description: / 头像URL，必填
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 更新故事角色头像请求
                / 更新角色的头像图片
        UpdateStoryRoleAvatorResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新故事角色头像响应
                / 返回更新操作的结果
        UpdateStoryRoleDescriptionDetailRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                characterDetail:
                    allOf:
                        - $ref: '#/components/schemas/CharacterDetail'
                    description: / 角色详细描述，必填
            description: |-
                / 更新故事角色描述详情请求
                / 更新角色的详细描述信息
        UpdateStoryRoleDescriptionDetailResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新故事角色描述详情响应
                / 返回更新操作的结果
        UpdateStoryRoleDetailRequest:
            type: object
            properties:
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                role:
                    allOf:
                        - $ref: '#/components/schemas/StoryRole'
                    description: / 角色信息，必填
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                needRegen:
                    type: boolean
                    description: / 是否需要重新生成
                backgroundImage:
                    type: string
                    description: / 背景图片URL
            description: |-
                / 更新故事角色详情请求
                / 更新角色的完整详细信息
        UpdateStoryRoleDetailResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新故事角色详情响应
                / 返回更新操作的结果
        UpdateStoryRolePosterRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                posterId:
                    type: string
                    description: / 海报ID，必须大于0
                imageUrl:
                    type: string
                    description: / 新的图片URL
                isPublic:
                    type: boolean
                    description: / 是否公开，true表示公开可见
            description: |-
                / 更新故事角色海报请求
                / 更新角色海报的信息或可见性
        UpdateStoryRolePosterResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                posterId:
                    type: string
                    description: / 海报ID
            description: |-
                / 更新故事角色海报响应
                / 返回更新后的海报ID
        UpdateStoryRolePromptRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                roleId:
                    type: string
                    description: / 角色ID，必须大于0
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                prompt:
                    type: string
                    description: / 新的提示词，最大长度2000字符
            description: |-
                / 更新故事角色提示词请求
                / 更新角色AI生成时使用的提示词
        UpdateStoryRolePromptResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新故事角色提示词响应
                / 返回更新操作的结果
        UpdateStoryRoleRequest:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/StoryRole'
                userId:
                    type: string
        UpdateStoryRoleResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        UpdateStorySenceMaxNumberRequest:
            type: object
            properties:
                storyId:
                    type: string
                    description: / 故事ID，必须大于0
                maxNumber:
                    type: string
                    description: / 最大场景数，范围1-1000
                userId:
                    type: string
                    description: / 用户ID，必须大于0
            description: |-
                / 更新故事最大场景数请求
                / 设置故事允许的最大场景数量
        UpdateStorySenceMaxNumberResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新故事最大场景数响应
                / 返回更新操作的结果
        UpdateStoryboardForkAbleRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: "/ [必填] 用户ID\n/ \n/ 故事板所有者的用户ID\n/ 验证规则：必须大于 0\n/ 权限要求：仅所有者可修改分叉权限"
                storyboardId:
                    type: string
                    description: "/ [必填] 故事板ID\n/ \n/ 要设置权限的故事板唯一标识\n/ 验证规则：必须大于 0"
                forkAble:
                    type: boolean
                    description: "/ [必填] 是否允许分叉\n/ \n/ 分叉权限开关\n/ 取值说明：\n/ - true: 允许其他用户分叉此故事板\n/ - false: 禁止分叉，仅所有者可访问\n/ 默认值：false"
            description: "==================== 更新故事板是否可分叉 ====================\n/ 更新故事板分叉权限请求\n/ \n/ 设置故事板的分叉权限，控制其他用户是否可以基于此故事板创建分支版本"
        UpdateStoryboardForkAbleResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息描述
            description: |-
                / 更新故事板是否可分叉响应
                / 返回更新操作的结果状态
        UpdateStoryboardRequest:
            type: object
            properties:
                boardId:
                    type: string
                storyId:
                    type: string
                userId:
                    type: string
                params:
                    $ref: '#/components/schemas/StoryBoardParams'
        UpdateStoryboardResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/UpdateStoryboardResponse_Data'
        UpdateStoryboardResponse_Data:
            type: object
            properties:
                storyId:
                    type: string
                boardId:
                    type: string
        UpdateUserAvatorRequest:
            type: object
            properties:
                userId:
                    type: string
                avatar:
                    type: string
        UpdateUserAvatorResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/UpdateUserAvatorResponse_Data'
        UpdateUserAvatorResponse_Data:
            type: object
            properties:
                info:
                    $ref: '#/components/schemas/UserInfo'
                status:
                    type: integer
                    format: int32
        UpdateUserBackgroundImageRequest:
            type: object
            properties:
                userId:
                    type: string
                backgroundImage:
                    type: string
        UpdateUserBackgroundImageResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
        UpdateUserProfileRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                backgroundImage:
                    type: string
                    description: / 背景图片URL
                avatar:
                    type: string
                    description: / 头像URL
                name:
                    type: string
                    description: / 用户昵称，最大长度50字符
                description:
                    type: string
                    description: / 个人描述，最大长度500字符
                location:
                    type: string
                    description: / 所在地，最大长度100字符
                email:
                    type: string
                    description: / 邮箱地址，如果提供则必须符合邮箱格式
            description: |-
                / 更新用户资料请求
                / 更新用户的个人资料信息
        UpdateUserProfileResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
            description: |-
                / 更新用户资料响应
                / 返回更新操作的结果
        UploadImageRequest:
            required:
                - imageData
                - filename
                - contentType
            type: object
            properties:
                imageData:
                    type: string
                    description: "/ [必填] 图片数据\n/ \n/ 图片的二进制内容\n/ 大小限制：最大 10MB (10485760 字节)\n/ 支持格式：JPEG、PNG、GIF、WebP、BMP\n/ 建议：上传前进行客户端压缩以提高速度"
                    format: bytes
                filename:
                    type: string
                    description: "/ [必填] 文件名\n/ \n/ 包含扩展名的文件名\n/ 长度限制：1-255 字符\n/ 示例：avatar.jpg, cover.png"
                contentType:
                    type: string
                    description: "/ [必填] 文件MIME类型\n/ \n/ 图片的内容类型标识\n/ 格式要求：必须为有效的图片MIME类型\n/ 允许值：\n/ - image/jpeg 或 image/jpg\n/ - image/png\n/ - image/gif\n/ - image/webp\n/ - image/bmp"
            description: "/ 上传图片请求\n/ \n/ 上传图片文件到服务器，支持多种常见图片格式"
        UploadImageResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息
                data:
                    $ref: '#/components/schemas/UploadImageResponse_Data'
            description: |-
                / 上传图片响应
                / 返回上传成功的图片信息
        UploadImageResponse_Data:
            type: object
            properties:
                fileId:
                    type: string
                    description: / 文件唯一标识符
                url:
                    type: string
                    description: / 图片访问URL
            description: / 返回数据
        UserActiveHeamapRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: "/ [必填] 用户ID\n/ \n/ 要查询活跃度的用户唯一标识\n/ 验证规则：必须大于 0"
                startTime:
                    type: string
                    description: "/ [必填] 开始时间\n/ \n/ 查询时间范围的起始时间戳（Unix时间戳，秒）\n/ 验证规则：必须大于 0\n/ 示例：1640995200（表示 2022-01-01 00:00:00 UTC）"
                endTime:
                    type: string
                    description: "/ [必填] 结束时间\n/ \n/ 查询时间范围的结束时间戳（Unix时间戳，秒）\n/ 验证规则：必须大于 0，且应大于 start_time\n/ 建议范围：不超过1年"
            description: "/ 用户活跃热力图请求\n/ \n/ 获取指定时间范围内用户的活跃度热力图数据，用于展示用户贡献度"
        UserActiveHeamapResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息描述
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/HeatmapDataItem'
                    description: / 热力图数据列表，包含每日的活跃度信息
                totalCount:
                    type: string
                    description: / 总活跃次数统计
            description: |-
                / 用户活跃热力图响应
                / 返回用户在指定时间范围内的活跃度热力图数据
        UserDraftStoryboardDetailRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                draftId:
                    type: string
                    description: / 草稿ID，必须大于0
            description: |-
                / 用户故事板草稿详情请求
                / 获取指定草稿的完整详细信息
        UserDraftStoryboardDetailResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息描述
                detail:
                    allOf:
                        - $ref: '#/components/schemas/StoryboardDraftDetail'
                    description: / 草稿详细信息
            description: |-
                / 用户故事板草稿详情响应
                / 返回草稿的完整详细信息
        UserFollowingGroupRequest:
            type: object
            properties:
                userId:
                    type: string
                offset:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        UserFollowingGroupResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/UserFollowingGroupResponse_Data'
        UserFollowingGroupResponse_Data:
            type: object
            properties:
                userId:
                    type: string
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GroupInfo'
                offset:
                    type: string
                pageSize:
                    type: string
                total:
                    type: integer
                    format: int32
                haveMore:
                    type: boolean
        UserGenTaskStatus:
            type: object
            properties:
                taskId:
                    type: string
                    description: / 任务ID，唯一标识符
                userId:
                    type: string
                    description: / 用户ID
                status:
                    type: string
                    description: / 任务状态：pending, running, success, failed
                detail:
                    allOf:
                        - $ref: '#/components/schemas/StoryGentaskDetail'
                    description: / 任务详情
                createTime:
                    type: string
                    description: / 创建时间戳
                updateTime:
                    type: string
                    description: / 更新时间戳
            description: |-
                / 用户生成任务状态信息
                / 表示单个生成任务的完整状态
        UserGroupRequest:
            type: object
            properties:
                userId:
                    type: string
                gtype:
                    type: integer
                    format: enum
                offset:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        UserGroupResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/UserGroupResponse_Data'
        UserGroupResponse_Data:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GroupInfo'
                offset:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
                haveMore:
                    type: boolean
        UserInfo:
            type: object
            properties:
                userId:
                    type: string
                name:
                    type: string
                avatar:
                    type: string
                email:
                    type: string
                location:
                    type: string
                desc:
                    type: string
                Ctime:
                    type: string
                Mtime:
                    type: string
        UserInfoRequest:
            type: object
            properties:
                userId:
                    type: string
                account:
                    type: string
            description: user ,group .project.item
        UserInfoResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/UserInfoResponse_Data'
        UserInfoResponse_Data:
            type: object
            properties:
                info:
                    $ref: '#/components/schemas/UserInfo'
                profile:
                    $ref: '#/components/schemas/UserProfileInfo'
        UserInitRequest:
            type: object
            properties:
                userId:
                    type: string
                deafaultGroup:
                    type: string
        UserInitResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/UserInitResponse_Data'
        UserInitResponse_Data:
            type: object
            properties:
                userId:
                    type: string
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/GroupInfo'
        UserProfileInfo:
            type: object
            properties:
                userId:
                    type: string
                numGroup:
                    type: integer
                    format: int32
                defaultGroupId:
                    type: string
                minSameGroup:
                    type: integer
                    format: int32
                limit:
                    type: integer
                    format: int32
                usedTokens:
                    type: integer
                    format: int32
                status:
                    type: integer
                    format: int32
                createdGroupNum:
                    type: integer
                    format: int32
                createdStoryNum:
                    type: integer
                    format: int32
                createdRoleNum:
                    type: integer
                    format: int32
                watchingStoryNum:
                    type: integer
                    format: int32
                watchingGroupNum:
                    type: integer
                    format: int32
                contributStoryNum:
                    type: integer
                    format: int32
                contributRoleNum:
                    type: integer
                    format: int32
                backgroundImage:
                    type: string
                numFollowers:
                    type: integer
                    format: int32
                numFollowing:
                    type: integer
                    format: int32
                Ctime:
                    type: string
                Mtime:
                    type: string
            description: 用户的 profile
        UserStoryboardDraftlistRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: / 用户ID，必须大于0
                offset:
                    type: string
                    description: / 偏移量，用于分页，必须大于等于0
                pageSize:
                    type: string
                    description: / 每页数量，范围1-100
                storyId:
                    type: string
                    description: / 故事ID（可选，用于筛选特定故事的草稿），如果提供则必须大于0
            description: |-
                ==================== 用户故事板草稿列表 ====================
                / 用户故事板草稿列表请求
                / 分页获取指定用户的故事板草稿列表，支持按故事ID筛选
        UserStoryboardDraftlistResponse:
            type: object
            properties:
                code:
                    type: integer
                    description: / 响应状态码
                    format: enum
                message:
                    type: string
                    description: / 响应消息描述
                drafts:
                    type: array
                    items:
                        $ref: '#/components/schemas/StoryboardDraftDetail'
                    description: / 草稿列表，包含草稿的详细信息
                total:
                    type: string
                    description: / 草稿总数
                haveMore:
                    type: boolean
                    description: / 是否有更多数据
            description: |-
                / 用户故事板草稿列表响应
                / 返回用户的故事板草稿列表及分页信息
        UserUpdateRequest:
            type: object
            properties:
                userId:
                    type: string
                nickname:
                    type: string
                avatar:
                    type: string
                desc:
                    type: string
                data:
                    type: object
                    additionalProperties:
                        type: string
        UserUpdateResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/UserUpdateResponse_Data'
        UserUpdateResponse_Data:
            type: object
            properties: {}
        UserWatchingRequest:
            type: object
            properties:
                userId:
                    type: string
                timeStamp:
                    type: string
                offset:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        UserWatchingResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                msg:
                    type: string
                data:
                    $ref: '#/components/schemas/UserWatchingResponse_Data'
        UserWatchingResponse_Data:
            type: object
            properties:
                haveMore:
                    type: boolean
                total:
                    type: integer
                    format: int32
        VersionResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: enum
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/VersionResponse_Data'
        VersionResponse_Data:
            type: object
            properties:
                version:
                    type: string
                buildTime:
                    type: string
        WatchStoryRequest:
            type: object
            properties:
                storyId:
                    type: string
                userId:
                    type: string
        WatchStoryResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
                data:
                    $ref: '#/components/schemas/WatchStoryResponse_Data'
        WatchStoryResponse_Data:
            type: object
            properties:
                storyId:
                    type: string
        WhatCurrentUserStatus:
            type: object
            properties:
                userId:
                    type: string
                isFollowed:
                    type: boolean
                isWatched:
                    type: boolean
                isLiked:
                    type: boolean
                isJoined:
                    type: boolean
                isViewed:
                    type: boolean
tags:
    - name: StreamMessageService
      description: 使用 stream 发送、接收消息
    - name: TeamsAPI
      description: |-
        / TeamsAPI - 团队协作服务API
        / 提供完整的团队、故事、角色管理和用户交互功能
        / 支持故事创作、角色聊天、AI生成、评论互动等功能
