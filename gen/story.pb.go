// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: story.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StoryboardStage int32

const (
	// 未指定
	StoryboardStage_STORYBOARD_STAGE_UNSPECIFIED StoryboardStage = 0
	// 草稿
	StoryboardStage_STORYBOARD_STAGE_DRAFT StoryboardStage = 1
	// 创建
	StoryboardStage_STORYBOARD_STAGE_CREATED StoryboardStage = 2
	// 渲染完成
	StoryboardStage_STORYBOARD_STAGE_RENDERED StoryboardStage = 3
	// 渲染场景
	StoryboardStage_STORYBOARD_STAGE_RENDER_SCENE StoryboardStage = 4
	// 生成片
	StoryboardStage_STORYBOARD_STAGE_GEN_IMAGE StoryboardStage = 5
	// 生成视频
	StoryboardStage_STORYBOARD_STAGE_GEN_VIDEO StoryboardStage = 6
	// 生成音频
	StoryboardStage_STORYBOARD_STAGE_GEN_AUDIO StoryboardStage = 7
	// 完成
	StoryboardStage_STORYBOARD_STAGE_FINISHED StoryboardStage = 8
	// 失败
	StoryboardStage_STORYBOARD_STAGE_FAILED StoryboardStage = 9
	// 发布
	StoryboardStage_STORYBOARD_STAGE_PUBLISHED StoryboardStage = 10
)

// Enum value maps for StoryboardStage.
var (
	StoryboardStage_name = map[int32]string{
		0:  "STORYBOARD_STAGE_UNSPECIFIED",
		1:  "STORYBOARD_STAGE_DRAFT",
		2:  "STORYBOARD_STAGE_CREATED",
		3:  "STORYBOARD_STAGE_RENDERED",
		4:  "STORYBOARD_STAGE_RENDER_SCENE",
		5:  "STORYBOARD_STAGE_GEN_IMAGE",
		6:  "STORYBOARD_STAGE_GEN_VIDEO",
		7:  "STORYBOARD_STAGE_GEN_AUDIO",
		8:  "STORYBOARD_STAGE_FINISHED",
		9:  "STORYBOARD_STAGE_FAILED",
		10: "STORYBOARD_STAGE_PUBLISHED",
	}
	StoryboardStage_value = map[string]int32{
		"STORYBOARD_STAGE_UNSPECIFIED":  0,
		"STORYBOARD_STAGE_DRAFT":        1,
		"STORYBOARD_STAGE_CREATED":      2,
		"STORYBOARD_STAGE_RENDERED":     3,
		"STORYBOARD_STAGE_RENDER_SCENE": 4,
		"STORYBOARD_STAGE_GEN_IMAGE":    5,
		"STORYBOARD_STAGE_GEN_VIDEO":    6,
		"STORYBOARD_STAGE_GEN_AUDIO":    7,
		"STORYBOARD_STAGE_FINISHED":     8,
		"STORYBOARD_STAGE_FAILED":       9,
		"STORYBOARD_STAGE_PUBLISHED":    10,
	}
)

func (x StoryboardStage) Enum() *StoryboardStage {
	p := new(StoryboardStage)
	*p = x
	return p
}

func (x StoryboardStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoryboardStage) Descriptor() protoreflect.EnumDescriptor {
	return file_story_proto_enumTypes[0].Descriptor()
}

func (StoryboardStage) Type() protoreflect.EnumType {
	return &file_story_proto_enumTypes[0]
}

func (x StoryboardStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoryboardStage.Descriptor instead.
func (StoryboardStage) EnumDescriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{0}
}

type RenderType int32

const (
	// 0: 原创
	RenderType_RENDER_TYPE_TEXT_UNSPECIFIED RenderType = 0
	// 1: 故事板文本
	RenderType_RENDER_TYPE_STORYBOARD_TEXT RenderType = 1
	// 2: 故事板
	RenderType_RENDER_TYPE_STORYBOARD RenderType = 2
	// 3: 故事场景
	RenderType_RENDER_TYPE_STORYSENCE RenderType = 3
	// 4: 故事角色
	RenderType_RENDER_TYPE_STORYCHARACTERS RenderType = 4
	// 5: 故事动作
	RenderType_RENDER_TYPE_STORYACTION RenderType = 5
	// 6: 故事设置
	RenderType_RENDER_TYPE_STORYSETTING RenderType = 6
	// 7: 故事结局
	RenderType_RENDER_TYPE_STORYENDING RenderType = 7
)

// Enum value maps for RenderType.
var (
	RenderType_name = map[int32]string{
		0: "RENDER_TYPE_TEXT_UNSPECIFIED",
		1: "RENDER_TYPE_STORYBOARD_TEXT",
		2: "RENDER_TYPE_STORYBOARD",
		3: "RENDER_TYPE_STORYSENCE",
		4: "RENDER_TYPE_STORYCHARACTERS",
		5: "RENDER_TYPE_STORYACTION",
		6: "RENDER_TYPE_STORYSETTING",
		7: "RENDER_TYPE_STORYENDING",
	}
	RenderType_value = map[string]int32{
		"RENDER_TYPE_TEXT_UNSPECIFIED": 0,
		"RENDER_TYPE_STORYBOARD_TEXT":  1,
		"RENDER_TYPE_STORYBOARD":       2,
		"RENDER_TYPE_STORYSENCE":       3,
		"RENDER_TYPE_STORYCHARACTERS":  4,
		"RENDER_TYPE_STORYACTION":      5,
		"RENDER_TYPE_STORYSETTING":     6,
		"RENDER_TYPE_STORYENDING":      7,
	}
)

func (x RenderType) Enum() *RenderType {
	p := new(RenderType)
	*p = x
	return p
}

func (x RenderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RenderType) Descriptor() protoreflect.EnumDescriptor {
	return file_story_proto_enumTypes[1].Descriptor()
}

func (RenderType) Type() protoreflect.EnumType {
	return &file_story_proto_enumTypes[1]
}

func (x RenderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RenderType.Descriptor instead.
func (RenderType) EnumDescriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{1}
}

type StoryBoardGeneratingStage int32

const (
	// 0: 未开始
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_UNSPECIFIED StoryBoardGeneratingStage = 0
	// 1: 生成中
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_GENERATING StoryBoardGeneratingStage = 101
	// 2: 生成完成
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_COMPLETED StoryBoardGeneratingStage = 102
	// 3: 生成失败
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_FAILED StoryBoardGeneratingStage = 103
	// 4: 生成图片
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_GENERATING_IMAGES StoryBoardGeneratingStage = 201
	// 5: 图片生成完成
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_IMAGES_COMPLETED StoryBoardGeneratingStage = 202
	// 6: 图片生成失败
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_IMAGES_FAILED StoryBoardGeneratingStage = 203
	// 7: 生成音频
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_GENERATING_AUDIO StoryBoardGeneratingStage = 301
	// 8: 音频生成完成
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_AUDIO_COMPLETED StoryBoardGeneratingStage = 302
	// 9: 音频生成失败
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_AUDIO_FAILED StoryBoardGeneratingStage = 303
	// 10: 生成视频
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_GENERATING_VIDEO StoryBoardGeneratingStage = 401
	// 11: 视频生成完成
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_VIDEO_COMPLETED StoryBoardGeneratingStage = 402
	// 12: 视频生成失败
	StoryBoardGeneratingStage_STORY_BOARD_GENERATING_STAGE_VIDEO_FAILED StoryBoardGeneratingStage = 403
)

// Enum value maps for StoryBoardGeneratingStage.
var (
	StoryBoardGeneratingStage_name = map[int32]string{
		0:   "STORY_BOARD_GENERATING_STAGE_UNSPECIFIED",
		101: "STORY_BOARD_GENERATING_STAGE_GENERATING",
		102: "STORY_BOARD_GENERATING_STAGE_COMPLETED",
		103: "STORY_BOARD_GENERATING_STAGE_FAILED",
		201: "STORY_BOARD_GENERATING_STAGE_GENERATING_IMAGES",
		202: "STORY_BOARD_GENERATING_STAGE_IMAGES_COMPLETED",
		203: "STORY_BOARD_GENERATING_STAGE_IMAGES_FAILED",
		301: "STORY_BOARD_GENERATING_STAGE_GENERATING_AUDIO",
		302: "STORY_BOARD_GENERATING_STAGE_AUDIO_COMPLETED",
		303: "STORY_BOARD_GENERATING_STAGE_AUDIO_FAILED",
		401: "STORY_BOARD_GENERATING_STAGE_GENERATING_VIDEO",
		402: "STORY_BOARD_GENERATING_STAGE_VIDEO_COMPLETED",
		403: "STORY_BOARD_GENERATING_STAGE_VIDEO_FAILED",
	}
	StoryBoardGeneratingStage_value = map[string]int32{
		"STORY_BOARD_GENERATING_STAGE_UNSPECIFIED":       0,
		"STORY_BOARD_GENERATING_STAGE_GENERATING":        101,
		"STORY_BOARD_GENERATING_STAGE_COMPLETED":         102,
		"STORY_BOARD_GENERATING_STAGE_FAILED":            103,
		"STORY_BOARD_GENERATING_STAGE_GENERATING_IMAGES": 201,
		"STORY_BOARD_GENERATING_STAGE_IMAGES_COMPLETED":  202,
		"STORY_BOARD_GENERATING_STAGE_IMAGES_FAILED":     203,
		"STORY_BOARD_GENERATING_STAGE_GENERATING_AUDIO":  301,
		"STORY_BOARD_GENERATING_STAGE_AUDIO_COMPLETED":   302,
		"STORY_BOARD_GENERATING_STAGE_AUDIO_FAILED":      303,
		"STORY_BOARD_GENERATING_STAGE_GENERATING_VIDEO":  401,
		"STORY_BOARD_GENERATING_STAGE_VIDEO_COMPLETED":   402,
		"STORY_BOARD_GENERATING_STAGE_VIDEO_FAILED":      403,
	}
)

func (x StoryBoardGeneratingStage) Enum() *StoryBoardGeneratingStage {
	p := new(StoryBoardGeneratingStage)
	*p = x
	return p
}

func (x StoryBoardGeneratingStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StoryBoardGeneratingStage) Descriptor() protoreflect.EnumDescriptor {
	return file_story_proto_enumTypes[2].Descriptor()
}

func (StoryBoardGeneratingStage) Type() protoreflect.EnumType {
	return &file_story_proto_enumTypes[2]
}

func (x StoryBoardGeneratingStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StoryBoardGeneratingStage.Descriptor instead.
func (StoryBoardGeneratingStage) EnumDescriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{2}
}

// Story 表示一个完整的故事实体
type Story struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                          // 故事唯一标识符
	GroupId           int64                  `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                                 // 所属组织ID
	Name              string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                                       // 故事名称
	Avatar            string                 `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`                                                   // 故事头像
	CreatorId         int64                  `protobuf:"varint,5,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`                           // 创建者ID
	OwnerId           int64                  `protobuf:"varint,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`                                 // 所有者ID
	Tags              []*Tags                `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`                                                       // 故事标签列表
	Visable           ScopeType              `protobuf:"varint,8,opt,name=visable,proto3,enum=common.ScopeType" json:"visable,omitempty"`                          // 可见范围
	IsAchieve         bool                   `protobuf:"varint,9,opt,name=is_achieve,json=isAchieve,proto3" json:"is_achieve,omitempty"`                           // 是否已归档
	IsClose           bool                   `protobuf:"varint,10,opt,name=is_close,json=isClose,proto3" json:"is_close,omitempty"`                                // 是否已关闭
	IsAiGen           bool                   `protobuf:"varint,11,opt,name=is_ai_gen,json=isAiGen,proto3" json:"is_ai_gen,omitempty"`                              // 是否由AI生成
	Origin            string                 `protobuf:"bytes,12,opt,name=origin,proto3" json:"origin,omitempty"`                                                  // 故事来源
	RootBoardId       int64                  `protobuf:"varint,13,opt,name=root_board_id,json=rootBoardId,proto3" json:"root_board_id,omitempty"`                  // 根故事板ID
	Desc              string                 `protobuf:"bytes,14,opt,name=desc,proto3" json:"desc,omitempty"`                                                      // 故事描述
	Params            *StoryParams           `protobuf:"bytes,15,opt,name=params,proto3" json:"params,omitempty"`                                                  // 故事参数
	Status            int32                  `protobuf:"varint,16,opt,name=status,proto3" json:"status,omitempty"`                                                 // 故事状态
	Title             string                 `protobuf:"bytes,17,opt,name=title,proto3" json:"title,omitempty"`                                                    // 故事标题
	Isliked           bool                   `protobuf:"varint,19,opt,name=isliked,proto3" json:"isliked,omitempty"`                                               // 当前用户是否点赞
	Iswatched         bool                   `protobuf:"varint,20,opt,name=iswatched,proto3" json:"iswatched,omitempty"`                                           // 当前用户是否关注
	CurrentUserStatus *WhatCurrentUserStatus `protobuf:"bytes,21,opt,name=current_user_status,json=currentUserStatus,proto3" json:"current_user_status,omitempty"` // 当前用户状态
	LikeCount         int64                  `protobuf:"varint,22,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`                          // 点赞数
	CommentCount      int64                  `protobuf:"varint,23,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`                 // 评论数
	ShareCount        int64                  `protobuf:"varint,24,opt,name=share_count,json=shareCount,proto3" json:"share_count,omitempty"`                       // 分享数
	FollowCount       int64                  `protobuf:"varint,25,opt,name=follow_count,json=followCount,proto3" json:"follow_count,omitempty"`                    // 关注数
	TotalBoards       int64                  `protobuf:"varint,26,opt,name=total_boards,json=totalBoards,proto3" json:"total_boards,omitempty"`                    // 故事板总数
	TotalRoles        int64                  `protobuf:"varint,27,opt,name=total_roles,json=totalRoles,proto3" json:"total_roles,omitempty"`                       // 角色总数
	TotalMembers      int64                  `protobuf:"varint,28,opt,name=total_members,json=totalMembers,proto3" json:"total_members,omitempty"`                 // 成员总数
	Ctime             int64                  `protobuf:"varint,29,opt,name=Ctime,proto3" json:"Ctime,omitempty"`                                                   // 创建时间
	Mtime             int64                  `protobuf:"varint,30,opt,name=Mtime,proto3" json:"Mtime,omitempty"`                                                   // 修改时间
}

func (x *Story) Reset() {
	*x = Story{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Story) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Story) ProtoMessage() {}

func (x *Story) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Story.ProtoReflect.Descriptor instead.
func (*Story) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{0}
}

func (x *Story) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Story) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Story) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Story) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Story) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *Story) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Story) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Story) GetVisable() ScopeType {
	if x != nil {
		return x.Visable
	}
	return ScopeType_AllPublic
}

func (x *Story) GetIsAchieve() bool {
	if x != nil {
		return x.IsAchieve
	}
	return false
}

func (x *Story) GetIsClose() bool {
	if x != nil {
		return x.IsClose
	}
	return false
}

func (x *Story) GetIsAiGen() bool {
	if x != nil {
		return x.IsAiGen
	}
	return false
}

func (x *Story) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *Story) GetRootBoardId() int64 {
	if x != nil {
		return x.RootBoardId
	}
	return 0
}

func (x *Story) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Story) GetParams() *StoryParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Story) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Story) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Story) GetIsliked() bool {
	if x != nil {
		return x.Isliked
	}
	return false
}

func (x *Story) GetIswatched() bool {
	if x != nil {
		return x.Iswatched
	}
	return false
}

func (x *Story) GetCurrentUserStatus() *WhatCurrentUserStatus {
	if x != nil {
		return x.CurrentUserStatus
	}
	return nil
}

func (x *Story) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Story) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *Story) GetShareCount() int64 {
	if x != nil {
		return x.ShareCount
	}
	return 0
}

func (x *Story) GetFollowCount() int64 {
	if x != nil {
		return x.FollowCount
	}
	return 0
}

func (x *Story) GetTotalBoards() int64 {
	if x != nil {
		return x.TotalBoards
	}
	return 0
}

func (x *Story) GetTotalRoles() int64 {
	if x != nil {
		return x.TotalRoles
	}
	return 0
}

func (x *Story) GetTotalMembers() int64 {
	if x != nil {
		return x.TotalMembers
	}
	return 0
}

func (x *Story) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Story) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

// StoryParams 包含故事生成和渲染的相关参数
type StoryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryDescription string `protobuf:"bytes,1,opt,name=story_description,json=storyDescription,proto3" json:"story_description,omitempty"`   // 故事描述
	RefImage         string `protobuf:"bytes,2,opt,name=ref_image,json=refImage,proto3" json:"ref_image,omitempty"`                           // 参考图片
	NegativePrompt   string `protobuf:"bytes,3,opt,name=negative_prompt,json=negativePrompt,proto3" json:"negative_prompt,omitempty"`         // 负面提示词
	Prompt           string `protobuf:"bytes,4,opt,name=prompt,proto3" json:"prompt,omitempty"`                                               // 提示词
	ComicLayoutStyle string `protobuf:"bytes,5,opt,name=comic_layout_style,json=comicLayoutStyle,proto3" json:"comic_layout_style,omitempty"` // 漫画布局风格
	ComicStyle       string `protobuf:"bytes,6,opt,name=comic_style,json=comicStyle,proto3" json:"comic_style,omitempty"`                     // 漫画风格
	Background       string `protobuf:"bytes,7,opt,name=background,proto3" json:"background,omitempty"`                                       // 背景
	StyleRefImage    string `protobuf:"bytes,8,opt,name=style_ref_image,json=styleRefImage,proto3" json:"style_ref_image,omitempty"`          // 风格参考图片
	Subject          string `protobuf:"bytes,9,opt,name=subject,proto3" json:"subject,omitempty"`                                             // 主题
}

func (x *StoryParams) Reset() {
	*x = StoryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryParams) ProtoMessage() {}

func (x *StoryParams) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryParams.ProtoReflect.Descriptor instead.
func (*StoryParams) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{1}
}

func (x *StoryParams) GetStoryDescription() string {
	if x != nil {
		return x.StoryDescription
	}
	return ""
}

func (x *StoryParams) GetRefImage() string {
	if x != nil {
		return x.RefImage
	}
	return ""
}

func (x *StoryParams) GetNegativePrompt() string {
	if x != nil {
		return x.NegativePrompt
	}
	return ""
}

func (x *StoryParams) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *StoryParams) GetComicLayoutStyle() string {
	if x != nil {
		return x.ComicLayoutStyle
	}
	return ""
}

func (x *StoryParams) GetComicStyle() string {
	if x != nil {
		return x.ComicStyle
	}
	return ""
}

func (x *StoryParams) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *StoryParams) GetStyleRefImage() string {
	if x != nil {
		return x.StyleRefImage
	}
	return ""
}

func (x *StoryParams) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

// StoryBoard 表示故事中的一个场景或章节
type StoryBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId           int64                  `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`                                 // 所属故事ID
	Num               int64                  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`                                                        // 序号
	PrevBoardId       int64                  `protobuf:"varint,3,opt,name=prev_board_id,json=prevBoardId,proto3" json:"prev_board_id,omitempty"`                   // 前一个故事板ID
	NextBoardId       []int64                `protobuf:"varint,4,rep,packed,name=next_board_id,json=nextBoardId,proto3" json:"next_board_id,omitempty"`            // 下一个故事板ID列表
	Creator           int64                  `protobuf:"varint,5,opt,name=creator,proto3" json:"creator,omitempty"`                                                // 创建者ID
	StoryBoardId      int64                  `protobuf:"varint,6,opt,name=story_board_id,json=storyBoardId,proto3" json:"story_board_id,omitempty"`                // 故事板ID
	Title             string                 `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`                                                     // 标题
	Content           string                 `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`                                                 // 内容
	IsAiGen           bool                   `protobuf:"varint,11,opt,name=is_ai_gen,json=isAiGen,proto3" json:"is_ai_gen,omitempty"`                              // 是否由AI生成
	Roles             []*StoryRole           `protobuf:"bytes,12,rep,name=roles,proto3" json:"roles,omitempty"`                                                    // 相关角色列表
	Backgroud         string                 `protobuf:"bytes,13,opt,name=backgroud,proto3" json:"backgroud,omitempty"`                                            // 背景
	Params            *StoryBoardParams      `protobuf:"bytes,15,opt,name=params,proto3" json:"params,omitempty"`                                                  // 故事板参数
	Sences            *StoryBoardSences      `protobuf:"bytes,16,opt,name=sences,proto3" json:"sences,omitempty"`                                                  // 场景列表
	IsMultiBranch     bool                   `protobuf:"varint,17,opt,name=is_multi_branch,json=isMultiBranch,proto3" json:"is_multi_branch,omitempty"`            // 是否多分支
	Stage             StoryboardStage        `protobuf:"varint,18,opt,name=stage,proto3,enum=common.StoryboardStage" json:"stage,omitempty"`                       // 故事板阶段
	Ctime             int64                  `protobuf:"varint,19,opt,name=Ctime,proto3" json:"Ctime,omitempty"`                                                   // 创建时间
	Mtime             int64                  `protobuf:"varint,20,opt,name=Mtime,proto3" json:"Mtime,omitempty"`                                                   // 修改时间
	CurrentUserStatus *WhatCurrentUserStatus `protobuf:"bytes,21,opt,name=current_user_status,json=currentUserStatus,proto3" json:"current_user_status,omitempty"` // 当前用户状态
}

func (x *StoryBoard) Reset() {
	*x = StoryBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryBoard) ProtoMessage() {}

func (x *StoryBoard) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryBoard.ProtoReflect.Descriptor instead.
func (*StoryBoard) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{2}
}

func (x *StoryBoard) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *StoryBoard) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *StoryBoard) GetPrevBoardId() int64 {
	if x != nil {
		return x.PrevBoardId
	}
	return 0
}

func (x *StoryBoard) GetNextBoardId() []int64 {
	if x != nil {
		return x.NextBoardId
	}
	return nil
}

func (x *StoryBoard) GetCreator() int64 {
	if x != nil {
		return x.Creator
	}
	return 0
}

func (x *StoryBoard) GetStoryBoardId() int64 {
	if x != nil {
		return x.StoryBoardId
	}
	return 0
}

func (x *StoryBoard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StoryBoard) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *StoryBoard) GetIsAiGen() bool {
	if x != nil {
		return x.IsAiGen
	}
	return false
}

func (x *StoryBoard) GetRoles() []*StoryRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *StoryBoard) GetBackgroud() string {
	if x != nil {
		return x.Backgroud
	}
	return ""
}

func (x *StoryBoard) GetParams() *StoryBoardParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *StoryBoard) GetSences() *StoryBoardSences {
	if x != nil {
		return x.Sences
	}
	return nil
}

func (x *StoryBoard) GetIsMultiBranch() bool {
	if x != nil {
		return x.IsMultiBranch
	}
	return false
}

func (x *StoryBoard) GetStage() StoryboardStage {
	if x != nil {
		return x.Stage
	}
	return StoryboardStage_STORYBOARD_STAGE_UNSPECIFIED
}

func (x *StoryBoard) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *StoryBoard) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *StoryBoard) GetCurrentUserStatus() *WhatCurrentUserStatus {
	if x != nil {
		return x.CurrentUserStatus
	}
	return nil
}

// StoryBoardSences 包含故事板中的所有场景
type StoryBoardSences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // 场景总数
	List  []*StoryBoardSence `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`    // 场景列表
}

func (x *StoryBoardSences) Reset() {
	*x = StoryBoardSences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryBoardSences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryBoardSences) ProtoMessage() {}

func (x *StoryBoardSences) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryBoardSences.ProtoReflect.Descriptor instead.
func (*StoryBoardSences) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{3}
}

func (x *StoryBoardSences) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StoryBoardSences) GetList() []*StoryBoardSence {
	if x != nil {
		return x.List
	}
	return nil
}

// CharacterDetail represents detailed information about a character in a story
type CharacterDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Description of the character's overall appearance and basic traits
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// Character's immediate objectives and goals in the current story arc
	ShortTermGoal string `protobuf:"bytes,2,opt,name=short_term_goal,json=shortTermGoal,proto3" json:"short_term_goal,omitempty"`
	// Character's overarching ambitions and long-term aspirations
	LongTermGoal string `protobuf:"bytes,3,opt,name=long_term_goal,json=longTermGoal,proto3" json:"long_term_goal,omitempty"`
	// Character's personality traits, temperament, and behavioral patterns
	Personality string `protobuf:"bytes,4,opt,name=personality,proto3" json:"personality,omitempty"`
	// Character's history, origin story, and formative experiences
	Background string `protobuf:"bytes,5,opt,name=background,proto3" json:"background,omitempty"`
	// Character's approach to handling situations and solving problems
	HandlingStyle string `protobuf:"bytes,6,opt,name=handling_style,json=handlingStyle,proto3" json:"handling_style,omitempty"`
	// Character's knowledge, understanding, and awareness of their world
	CognitionRange string `protobuf:"bytes,7,opt,name=cognition_range,json=cognitionRange,proto3" json:"cognition_range,omitempty"`
	// Character's special skills, talents, and unique capabilities
	AbilityFeatures string `protobuf:"bytes,8,opt,name=ability_features,json=abilityFeatures,proto3" json:"ability_features,omitempty"`
	// Character's physical appearance and distinguishing features
	Appearance string `protobuf:"bytes,9,opt,name=appearance,proto3" json:"appearance,omitempty"`
	// Character's clothing preferences and style choices
	DressPreference string `protobuf:"bytes,10,opt,name=dress_preference,json=dressPreference,proto3" json:"dress_preference,omitempty"`
}

func (x *CharacterDetail) Reset() {
	*x = CharacterDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterDetail) ProtoMessage() {}

func (x *CharacterDetail) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterDetail.ProtoReflect.Descriptor instead.
func (*CharacterDetail) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{4}
}

func (x *CharacterDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CharacterDetail) GetShortTermGoal() string {
	if x != nil {
		return x.ShortTermGoal
	}
	return ""
}

func (x *CharacterDetail) GetLongTermGoal() string {
	if x != nil {
		return x.LongTermGoal
	}
	return ""
}

func (x *CharacterDetail) GetPersonality() string {
	if x != nil {
		return x.Personality
	}
	return ""
}

func (x *CharacterDetail) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *CharacterDetail) GetHandlingStyle() string {
	if x != nil {
		return x.HandlingStyle
	}
	return ""
}

func (x *CharacterDetail) GetCognitionRange() string {
	if x != nil {
		return x.CognitionRange
	}
	return ""
}

func (x *CharacterDetail) GetAbilityFeatures() string {
	if x != nil {
		return x.AbilityFeatures
	}
	return ""
}

func (x *CharacterDetail) GetAppearance() string {
	if x != nil {
		return x.Appearance
	}
	return ""
}

func (x *CharacterDetail) GetDressPreference() string {
	if x != nil {
		return x.DressPreference
	}
	return ""
}

// StoryRole 表示故事中的角色
type StoryRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId               int64                  `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`                                          // 角色ID
	StoryId              int64                  `protobuf:"varint,2,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`                                       // 所属故事ID
	CharacterDescription string                 `protobuf:"bytes,5,opt,name=character_description,json=characterDescription,proto3" json:"character_description,omitempty"` // 角色描述
	CharacterName        string                 `protobuf:"bytes,6,opt,name=character_name,json=characterName,proto3" json:"character_name,omitempty"`                      // 角色名称
	CharacterAvatar      string                 `protobuf:"bytes,7,opt,name=character_avatar,json=characterAvatar,proto3" json:"character_avatar,omitempty"`                // 角色头像
	CharacterId          string                 `protobuf:"bytes,8,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`                            // 角色标识符
	CharacterType        string                 `protobuf:"bytes,9,opt,name=character_type,json=characterType,proto3" json:"character_type,omitempty"`                      // 角色类型
	CharacterPrompt      string                 `protobuf:"bytes,10,opt,name=character_prompt,json=characterPrompt,proto3" json:"character_prompt,omitempty"`               // 角色提示词
	CharacterDetail      *CharacterDetail       `protobuf:"bytes,11,opt,name=character_detail,json=characterDetail,proto3" json:"character_detail,omitempty"`               // 角色详细信息
	CharacterRefImages   []string               `protobuf:"bytes,12,rep,name=character_ref_images,json=characterRefImages,proto3" json:"character_ref_images,omitempty"`    // 角色参考图片
	CreatorId            int64                  `protobuf:"varint,13,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`                                // 创建者ID
	Status               int32                  `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`                                                       // 状态
	LikeCount            int64                  `protobuf:"varint,15,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`                                // 点赞数
	FollowCount          int64                  `protobuf:"varint,16,opt,name=follow_count,json=followCount,proto3" json:"follow_count,omitempty"`                          // 关注数
	StoryboardNum        int64                  `protobuf:"varint,17,opt,name=storyboard_num,json=storyboardNum,proto3" json:"storyboard_num,omitempty"`                    // 故事板数量
	Version              int64                  `protobuf:"varint,18,opt,name=version,proto3" json:"version,omitempty"`                                                     // 版本号
	Isliked              bool                   `protobuf:"varint,19,opt,name=isliked,proto3" json:"isliked,omitempty"`                                                     // 当前用户是否点赞
	Isfolllowed          bool                   `protobuf:"varint,20,opt,name=isfolllowed,proto3" json:"isfolllowed,omitempty"`                                             // 当前用户是否关注
	Ctime                int64                  `protobuf:"varint,21,opt,name=Ctime,proto3" json:"Ctime,omitempty"`                                                         // 创建时间
	Mtime                int64                  `protobuf:"varint,22,opt,name=Mtime,proto3" json:"Mtime,omitempty"`                                                         // 修改时间
	CurrentUserStatus    *WhatCurrentUserStatus `protobuf:"bytes,23,opt,name=current_user_status,json=currentUserStatus,proto3" json:"current_user_status,omitempty"`       // 当前用户状态
	Creator              *UserInfo              `protobuf:"bytes,24,opt,name=creator,proto3" json:"creator,omitempty"`                                                      // 创建者信息
	PosterImageUrl       string                 `protobuf:"bytes,25,opt,name=poster_image_url,json=posterImageUrl,proto3" json:"poster_image_url,omitempty"`                // 海报图片URL
}

func (x *StoryRole) Reset() {
	*x = StoryRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryRole) ProtoMessage() {}

func (x *StoryRole) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryRole.ProtoReflect.Descriptor instead.
func (*StoryRole) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{5}
}

func (x *StoryRole) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *StoryRole) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *StoryRole) GetCharacterDescription() string {
	if x != nil {
		return x.CharacterDescription
	}
	return ""
}

func (x *StoryRole) GetCharacterName() string {
	if x != nil {
		return x.CharacterName
	}
	return ""
}

func (x *StoryRole) GetCharacterAvatar() string {
	if x != nil {
		return x.CharacterAvatar
	}
	return ""
}

func (x *StoryRole) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *StoryRole) GetCharacterType() string {
	if x != nil {
		return x.CharacterType
	}
	return ""
}

func (x *StoryRole) GetCharacterPrompt() string {
	if x != nil {
		return x.CharacterPrompt
	}
	return ""
}

func (x *StoryRole) GetCharacterDetail() *CharacterDetail {
	if x != nil {
		return x.CharacterDetail
	}
	return nil
}

func (x *StoryRole) GetCharacterRefImages() []string {
	if x != nil {
		return x.CharacterRefImages
	}
	return nil
}

func (x *StoryRole) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *StoryRole) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StoryRole) GetLikeCount() int64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *StoryRole) GetFollowCount() int64 {
	if x != nil {
		return x.FollowCount
	}
	return 0
}

func (x *StoryRole) GetStoryboardNum() int64 {
	if x != nil {
		return x.StoryboardNum
	}
	return 0
}

func (x *StoryRole) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StoryRole) GetIsliked() bool {
	if x != nil {
		return x.Isliked
	}
	return false
}

func (x *StoryRole) GetIsfolllowed() bool {
	if x != nil {
		return x.Isfolllowed
	}
	return false
}

func (x *StoryRole) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *StoryRole) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *StoryRole) GetCurrentUserStatus() *WhatCurrentUserStatus {
	if x != nil {
		return x.CurrentUserStatus
	}
	return nil
}

func (x *StoryRole) GetCreator() *UserInfo {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *StoryRole) GetPosterImageUrl() string {
	if x != nil {
		return x.PosterImageUrl
	}
	return ""
}

// StoryBoardParams 包含故事板渲染的相关参数
type StoryBoardParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId                int64   `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`                 // 故事板ID
	StoryDescription       string  `protobuf:"bytes,2,opt,name=StoryDescription,proto3" json:"StoryDescription,omitempty"`               // 故事描述
	NumIds                 int32   `protobuf:"varint,3,opt,name=NumIds,proto3" json:"NumIds,omitempty"`                                  // ID数量
	NumSteps               int32   `protobuf:"varint,4,opt,name=NumSteps,proto3" json:"NumSteps,omitempty"`                              // 步骤数
	SdModel                string  `protobuf:"bytes,5,opt,name=SdModel,proto3" json:"SdModel,omitempty"`                                 // 模型名称
	RefImage               string  `protobuf:"bytes,6,opt,name=RefImage,proto3" json:"RefImage,omitempty"`                               // 参考图片
	ComicLayoutStyle       string  `protobuf:"bytes,7,opt,name=ComicLayoutStyle,proto3" json:"ComicLayoutStyle,omitempty"`               // 漫画布局风格
	ComicStyle             string  `protobuf:"bytes,8,opt,name=ComicStyle,proto3" json:"ComicStyle,omitempty"`                           // 漫画风格
	NegativePrompt         string  `protobuf:"bytes,9,opt,name=NegativePrompt,proto3" json:"NegativePrompt,omitempty"`                   // 负面提示词
	OutputQuality          int32   `protobuf:"varint,10,opt,name=OutputQuality,proto3" json:"OutputQuality,omitempty"`                   // 输出质量
	GuidanceScale          float32 `protobuf:"fixed32,11,opt,name=GuidanceScale,proto3" json:"GuidanceScale,omitempty"`                  // 引导比例
	OutputFormat           int32   `protobuf:"varint,13,opt,name=OutputFormat,proto3" json:"OutputFormat,omitempty"`                     // 输出格式
	ImageWidth             int32   `protobuf:"varint,14,opt,name=ImageWidth,proto3" json:"ImageWidth,omitempty"`                         // 图片宽度
	ImageHeight            int32   `protobuf:"varint,15,opt,name=ImageHeight,proto3" json:"ImageHeight,omitempty"`                       // 图片高度
	Self32AttentionLayers  int32   `protobuf:"varint,16,opt,name=Self32AttentionLayers,proto3" json:"Self32AttentionLayers,omitempty"`   // 32层自注意力
	Self64AttentionLayers  int32   `protobuf:"varint,17,opt,name=Self64AttentionLayers,proto3" json:"Self64AttentionLayers,omitempty"`   // 64层自注意力
	Self128AttentionLayers int32   `protobuf:"varint,18,opt,name=Self128AttentionLayers,proto3" json:"Self128AttentionLayers,omitempty"` // 128层自注意力
}

func (x *StoryBoardParams) Reset() {
	*x = StoryBoardParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryBoardParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryBoardParams) ProtoMessage() {}

func (x *StoryBoardParams) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryBoardParams.ProtoReflect.Descriptor instead.
func (*StoryBoardParams) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{6}
}

func (x *StoryBoardParams) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *StoryBoardParams) GetStoryDescription() string {
	if x != nil {
		return x.StoryDescription
	}
	return ""
}

func (x *StoryBoardParams) GetNumIds() int32 {
	if x != nil {
		return x.NumIds
	}
	return 0
}

func (x *StoryBoardParams) GetNumSteps() int32 {
	if x != nil {
		return x.NumSteps
	}
	return 0
}

func (x *StoryBoardParams) GetSdModel() string {
	if x != nil {
		return x.SdModel
	}
	return ""
}

func (x *StoryBoardParams) GetRefImage() string {
	if x != nil {
		return x.RefImage
	}
	return ""
}

func (x *StoryBoardParams) GetComicLayoutStyle() string {
	if x != nil {
		return x.ComicLayoutStyle
	}
	return ""
}

func (x *StoryBoardParams) GetComicStyle() string {
	if x != nil {
		return x.ComicStyle
	}
	return ""
}

func (x *StoryBoardParams) GetNegativePrompt() string {
	if x != nil {
		return x.NegativePrompt
	}
	return ""
}

func (x *StoryBoardParams) GetOutputQuality() int32 {
	if x != nil {
		return x.OutputQuality
	}
	return 0
}

func (x *StoryBoardParams) GetGuidanceScale() float32 {
	if x != nil {
		return x.GuidanceScale
	}
	return 0
}

func (x *StoryBoardParams) GetOutputFormat() int32 {
	if x != nil {
		return x.OutputFormat
	}
	return 0
}

func (x *StoryBoardParams) GetImageWidth() int32 {
	if x != nil {
		return x.ImageWidth
	}
	return 0
}

func (x *StoryBoardParams) GetImageHeight() int32 {
	if x != nil {
		return x.ImageHeight
	}
	return 0
}

func (x *StoryBoardParams) GetSelf32AttentionLayers() int32 {
	if x != nil {
		return x.Self32AttentionLayers
	}
	return 0
}

func (x *StoryBoardParams) GetSelf64AttentionLayers() int32 {
	if x != nil {
		return x.Self64AttentionLayers
	}
	return 0
}

func (x *StoryBoardParams) GetSelf128AttentionLayers() int32 {
	if x != nil {
		return x.Self128AttentionLayers
	}
	return 0
}

// TimeLine 表示时间线信息
type TimeLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootId    int64  `protobuf:"varint,1,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`          // 根ID
	GroupId   int64  `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`       // 组织ID
	ProjectId int64  `protobuf:"varint,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"` // 项目ID
	CreatorId int64  `protobuf:"varint,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"` // 创建者ID
	Title     string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`                           // 标题
	ItemId    int64  `protobuf:"varint,6,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`          // 项目ID
	Ctime     int64  `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`                          // 创建时间
	Mtime     int64  `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`                         // 修改时间
}

func (x *TimeLine) Reset() {
	*x = TimeLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeLine) ProtoMessage() {}

func (x *TimeLine) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeLine.ProtoReflect.Descriptor instead.
func (*TimeLine) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{7}
}

func (x *TimeLine) GetRootId() int64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *TimeLine) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *TimeLine) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *TimeLine) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *TimeLine) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TimeLine) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *TimeLine) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *TimeLine) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

// CreateStoryRequest 创建故事的请求参数
type CreateStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                             // 故事名称
	Title     string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                           // 故事标题
	ShortDesc string       `protobuf:"bytes,3,opt,name=short_desc,json=shortDesc,proto3" json:"short_desc,omitempty"`  // 简短描述
	CreatorId int64        `protobuf:"varint,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"` // 创建者ID
	OwnerId   int64        `protobuf:"varint,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`       // 所有者ID
	GroupId   int64        `protobuf:"varint,6,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`       // 组织ID
	Origin    string       `protobuf:"bytes,7,opt,name=origin,proto3" json:"origin,omitempty"`                         // 来源
	Status    int32        `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                        // 状态
	IsAchieve bool         `protobuf:"varint,9,opt,name=is_achieve,json=isAchieve,proto3" json:"is_achieve,omitempty"` // 是否归档
	IsClose   bool         `protobuf:"varint,10,opt,name=is_close,json=isClose,proto3" json:"is_close,omitempty"`      // 是否关闭
	IsAiGen   bool         `protobuf:"varint,11,opt,name=is_ai_gen,json=isAiGen,proto3" json:"is_ai_gen,omitempty"`    // 是否AI生成
	Params    *StoryParams `protobuf:"bytes,12,opt,name=params,proto3" json:"params,omitempty"`                        // 故事参数
	Roles     []*StoryRole `protobuf:"bytes,13,rep,name=roles,proto3" json:"roles,omitempty"`                          // 角色列表
}

func (x *CreateStoryRequest) Reset() {
	*x = CreateStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoryRequest) ProtoMessage() {}

func (x *CreateStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoryRequest.ProtoReflect.Descriptor instead.
func (*CreateStoryRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{8}
}

func (x *CreateStoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateStoryRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateStoryRequest) GetShortDesc() string {
	if x != nil {
		return x.ShortDesc
	}
	return ""
}

func (x *CreateStoryRequest) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CreateStoryRequest) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *CreateStoryRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *CreateStoryRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *CreateStoryRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateStoryRequest) GetIsAchieve() bool {
	if x != nil {
		return x.IsAchieve
	}
	return false
}

func (x *CreateStoryRequest) GetIsClose() bool {
	if x != nil {
		return x.IsClose
	}
	return false
}

func (x *CreateStoryRequest) GetIsAiGen() bool {
	if x != nil {
		return x.IsAiGen
	}
	return false
}

func (x *CreateStoryRequest) GetParams() *StoryParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *CreateStoryRequest) GetRoles() []*StoryRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

// CreateStoryResponse 创建故事的响应结果
type CreateStoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 响应码
	Message string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 响应消息
	Data    *CreateStoryResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateStoryResponse) Reset() {
	*x = CreateStoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoryResponse) ProtoMessage() {}

func (x *CreateStoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoryResponse.ProtoReflect.Descriptor instead.
func (*CreateStoryResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{9}
}

func (x *CreateStoryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateStoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateStoryResponse) GetData() *CreateStoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// UpdateStoryRequest 更新故事的请求参数
type UpdateStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortDesc string       `protobuf:"bytes,1,opt,name=short_desc,json=shortDesc,proto3" json:"short_desc,omitempty"`  // 简短描述
	Origin    string       `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`                         // 来源
	Status    int32        `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                        // 状态
	IsAchieve bool         `protobuf:"varint,4,opt,name=is_achieve,json=isAchieve,proto3" json:"is_achieve,omitempty"` // 是否归档
	IsClose   bool         `protobuf:"varint,5,opt,name=is_close,json=isClose,proto3" json:"is_close,omitempty"`       // 是否关闭
	IsAiGen   bool         `protobuf:"varint,6,opt,name=is_ai_gen,json=isAiGen,proto3" json:"is_ai_gen,omitempty"`     // 是否AI生成
	Params    *StoryParams `protobuf:"bytes,7,opt,name=params,proto3" json:"params,omitempty"`                         // 故事参数
	StoryId   int64        `protobuf:"varint,8,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`       // 故事ID
	Roles     []*StoryRole `protobuf:"bytes,10,rep,name=roles,proto3" json:"roles,omitempty"`                          // 角色列表
}

func (x *UpdateStoryRequest) Reset() {
	*x = UpdateStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoryRequest) ProtoMessage() {}

func (x *UpdateStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateStoryRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateStoryRequest) GetShortDesc() string {
	if x != nil {
		return x.ShortDesc
	}
	return ""
}

func (x *UpdateStoryRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *UpdateStoryRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateStoryRequest) GetIsAchieve() bool {
	if x != nil {
		return x.IsAchieve
	}
	return false
}

func (x *UpdateStoryRequest) GetIsClose() bool {
	if x != nil {
		return x.IsClose
	}
	return false
}

func (x *UpdateStoryRequest) GetIsAiGen() bool {
	if x != nil {
		return x.IsAiGen
	}
	return false
}

func (x *UpdateStoryRequest) GetParams() *StoryParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *UpdateStoryRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *UpdateStoryRequest) GetRoles() []*StoryRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

// UpdateStoryResponse 更新故事的响应结果
type UpdateStoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 响应码
	Message string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 响应消息
	Data    *UpdateStoryResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateStoryResponse) Reset() {
	*x = UpdateStoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoryResponse) ProtoMessage() {}

func (x *UpdateStoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateStoryResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateStoryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateStoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateStoryResponse) GetData() *UpdateStoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetStoryInfoRequest 获取故事信息的请求参数
type GetStoryInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId int64 `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"` // 故事ID
}

func (x *GetStoryInfoRequest) Reset() {
	*x = GetStoryInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryInfoRequest) ProtoMessage() {}

func (x *GetStoryInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryInfoRequest.ProtoReflect.Descriptor instead.
func (*GetStoryInfoRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{12}
}

func (x *GetStoryInfoRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

// GetStoryInfoResponse 获取故事信息的响应结果
type GetStoryInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 响应码
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 响应消息
	Data    *GetStoryInfoResponse_Data `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStoryInfoResponse) Reset() {
	*x = GetStoryInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryInfoResponse) ProtoMessage() {}

func (x *GetStoryInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryInfoResponse.ProtoReflect.Descriptor instead.
func (*GetStoryInfoResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{13}
}

func (x *GetStoryInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStoryInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoryInfoResponse) GetData() *GetStoryInfoResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// CreateStoryboardRequest 创建故事板的请求参数
type CreateStoryboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board *StoryBoard `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"` // 故事板信息
}

func (x *CreateStoryboardRequest) Reset() {
	*x = CreateStoryboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoryboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoryboardRequest) ProtoMessage() {}

func (x *CreateStoryboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoryboardRequest.ProtoReflect.Descriptor instead.
func (*CreateStoryboardRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{14}
}

func (x *CreateStoryboardRequest) GetBoard() *StoryBoard {
	if x != nil {
		return x.Board
	}
	return nil
}

// CreateStoryboardResponse 创建故事板的响应结果
type CreateStoryboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 响应码
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 响应消息
	Data    *CreateStoryboardResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateStoryboardResponse) Reset() {
	*x = CreateStoryboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoryboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoryboardResponse) ProtoMessage() {}

func (x *CreateStoryboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoryboardResponse.ProtoReflect.Descriptor instead.
func (*CreateStoryboardResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{15}
}

func (x *CreateStoryboardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateStoryboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateStoryboardResponse) GetData() *CreateStoryboardResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetStoryboardRequest 获取故事板的请求参数
type GetStoryboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"` // 故事板ID
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`    // 用户ID
}

func (x *GetStoryboardRequest) Reset() {
	*x = GetStoryboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryboardRequest) ProtoMessage() {}

func (x *GetStoryboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryboardRequest.ProtoReflect.Descriptor instead.
func (*GetStoryboardRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{16}
}

func (x *GetStoryboardRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *GetStoryboardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// GetStoryboardResponse 获取故事板的响应结果
type GetStoryboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 响应码
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 响应消息
	Data    *GetStoryboardResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStoryboardResponse) Reset() {
	*x = GetStoryboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryboardResponse) ProtoMessage() {}

func (x *GetStoryboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryboardResponse.ProtoReflect.Descriptor instead.
func (*GetStoryboardResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{17}
}

func (x *GetStoryboardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStoryboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoryboardResponse) GetData() *GetStoryboardResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// GetStoryboardsRequest 获取故事板列表的请求参数
type GetStoryboardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId       int64              `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`                                 // 故事ID
	TimelineId    int64              `protobuf:"varint,2,opt,name=timeline_id,json=timelineId,proto3" json:"timeline_id,omitempty"`                        // 时间线ID
	StartTime     int64              `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                           // 开始时间
	EndTime       int64              `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                 // 结束时间
	UserId        int64              `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                    // 用户ID
	IsMultiBranch bool               `protobuf:"varint,7,opt,name=is_multi_branch,json=isMultiBranch,proto3" json:"is_multi_branch,omitempty"`             // 是否多分支
	Page          int32              `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`                                                      // 页码
	PageSize      int32              `protobuf:"varint,9,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                              // 每页大小
	OrderBy       MultiBranchOrderBy `protobuf:"varint,10,opt,name=order_by,json=orderBy,proto3,enum=common.MultiBranchOrderBy" json:"order_by,omitempty"` // 排序方式
}

func (x *GetStoryboardsRequest) Reset() {
	*x = GetStoryboardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryboardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryboardsRequest) ProtoMessage() {}

func (x *GetStoryboardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryboardsRequest.ProtoReflect.Descriptor instead.
func (*GetStoryboardsRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{18}
}

func (x *GetStoryboardsRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *GetStoryboardsRequest) GetTimelineId() int64 {
	if x != nil {
		return x.TimelineId
	}
	return 0
}

func (x *GetStoryboardsRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetStoryboardsRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetStoryboardsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetStoryboardsRequest) GetIsMultiBranch() bool {
	if x != nil {
		return x.IsMultiBranch
	}
	return false
}

func (x *GetStoryboardsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetStoryboardsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetStoryboardsRequest) GetOrderBy() MultiBranchOrderBy {
	if x != nil {
		return x.OrderBy
	}
	return MultiBranchOrderBy_MultiBranchOrderByUnspecified
}

// StoryBoardActiveRole 故事板活动中的角色信息
type StoryBoardActiveRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId     int64  `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`            // 角色ID
	RoleName   string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`       // 角色名称
	RoleAvatar string `protobuf:"bytes,3,opt,name=role_avatar,json=roleAvatar,proto3" json:"role_avatar,omitempty"` // 角色头像
}

func (x *StoryBoardActiveRole) Reset() {
	*x = StoryBoardActiveRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryBoardActiveRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryBoardActiveRole) ProtoMessage() {}

func (x *StoryBoardActiveRole) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryBoardActiveRole.ProtoReflect.Descriptor instead.
func (*StoryBoardActiveRole) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{19}
}

func (x *StoryBoardActiveRole) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *StoryBoardActiveRole) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *StoryBoardActiveRole) GetRoleAvatar() string {
	if x != nil {
		return x.RoleAvatar
	}
	return ""
}

// StoryBoardActiveUser 故事板活动中的用户信息
type StoryBoardActiveUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`            // 用户ID
	UserName   string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`       // 用户名称
	UserAvatar string `protobuf:"bytes,3,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"` // 用户头像
}

func (x *StoryBoardActiveUser) Reset() {
	*x = StoryBoardActiveUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryBoardActiveUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryBoardActiveUser) ProtoMessage() {}

func (x *StoryBoardActiveUser) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryBoardActiveUser.ProtoReflect.Descriptor instead.
func (*StoryBoardActiveUser) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{20}
}

func (x *StoryBoardActiveUser) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StoryBoardActiveUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *StoryBoardActiveUser) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

// StoryBoardActive 故事板活动信息
type StoryBoardActive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Storyboard        *StoryBoard             `protobuf:"bytes,1,opt,name=storyboard,proto3" json:"storyboard,omitempty"`                                           // 故事板信息
	TotalLikeCount    int64                   `protobuf:"varint,2,opt,name=total_like_count,json=totalLikeCount,proto3" json:"total_like_count,omitempty"`          // 总点赞数
	TotalCommentCount int64                   `protobuf:"varint,3,opt,name=total_comment_count,json=totalCommentCount,proto3" json:"total_comment_count,omitempty"` // 总评论数
	TotalShareCount   int64                   `protobuf:"varint,4,opt,name=total_share_count,json=totalShareCount,proto3" json:"total_share_count,omitempty"`       // 总分享数
	TotalRenderCount  int64                   `protobuf:"varint,5,opt,name=total_render_count,json=totalRenderCount,proto3" json:"total_render_count,omitempty"`    // 总渲染数
	TotalForkCount    int64                   `protobuf:"varint,6,opt,name=total_fork_count,json=totalForkCount,proto3" json:"total_fork_count,omitempty"`          // 总分叉数
	Users             []*StoryBoardActiveUser `protobuf:"bytes,7,rep,name=users,proto3" json:"users,omitempty"`                                                     // 用户列表
	Roles             []*StoryBoardActiveRole `protobuf:"bytes,8,rep,name=roles,proto3" json:"roles,omitempty"`                                                     // 角色列表
	Creator           *StoryBoardActiveUser   `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`                                                 // 创建者信息
	Summary           *StorySummaryInfo       `protobuf:"bytes,10,opt,name=summary,proto3" json:"summary,omitempty"`                                                // 摘要信息
	Isliked           bool                    `protobuf:"varint,11,opt,name=isliked,proto3" json:"isliked,omitempty"`                                               // 是否点赞
	Mtime             int64                   `protobuf:"varint,12,opt,name=mtime,proto3" json:"mtime,omitempty"`                                                   // 修改时间
}

func (x *StoryBoardActive) Reset() {
	*x = StoryBoardActive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryBoardActive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryBoardActive) ProtoMessage() {}

func (x *StoryBoardActive) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryBoardActive.ProtoReflect.Descriptor instead.
func (*StoryBoardActive) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{21}
}

func (x *StoryBoardActive) GetStoryboard() *StoryBoard {
	if x != nil {
		return x.Storyboard
	}
	return nil
}

func (x *StoryBoardActive) GetTotalLikeCount() int64 {
	if x != nil {
		return x.TotalLikeCount
	}
	return 0
}

func (x *StoryBoardActive) GetTotalCommentCount() int64 {
	if x != nil {
		return x.TotalCommentCount
	}
	return 0
}

func (x *StoryBoardActive) GetTotalShareCount() int64 {
	if x != nil {
		return x.TotalShareCount
	}
	return 0
}

func (x *StoryBoardActive) GetTotalRenderCount() int64 {
	if x != nil {
		return x.TotalRenderCount
	}
	return 0
}

func (x *StoryBoardActive) GetTotalForkCount() int64 {
	if x != nil {
		return x.TotalForkCount
	}
	return 0
}

func (x *StoryBoardActive) GetUsers() []*StoryBoardActiveUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *StoryBoardActive) GetRoles() []*StoryBoardActiveRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *StoryBoardActive) GetCreator() *StoryBoardActiveUser {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *StoryBoardActive) GetSummary() *StorySummaryInfo {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *StoryBoardActive) GetIsliked() bool {
	if x != nil {
		return x.Isliked
	}
	return false
}

func (x *StoryBoardActive) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

// StorySummaryInfo 故事摘要信息
type StorySummaryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId           int64  `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`                                  // 故事ID
	StoryTitle        string `protobuf:"bytes,2,opt,name=story_title,json=storyTitle,proto3" json:"story_title,omitempty"`                          // 故事标题
	StoryAvatar       string `protobuf:"bytes,3,opt,name=story_avatar,json=storyAvatar,proto3" json:"story_avatar,omitempty"`                       // 故事头像
	StoryDescription  string `protobuf:"bytes,4,opt,name=story_description,json=storyDescription,proto3" json:"story_description,omitempty"`        // 故事描述
	StoryCover        string `protobuf:"bytes,5,opt,name=story_cover,json=storyCover,proto3" json:"story_cover,omitempty"`                          // 故事封面
	StoryTags         string `protobuf:"bytes,6,opt,name=story_tags,json=storyTags,proto3" json:"story_tags,omitempty"`                             // 故事标签
	CreateTime        int64  `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                         // 创建时间
	CreateUserId      int64  `protobuf:"varint,8,opt,name=create_user_id,json=createUserId,proto3" json:"create_user_id,omitempty"`                 // 创建用户ID
	TotalBoardCount   int64  `protobuf:"varint,9,opt,name=total_board_count,json=totalBoardCount,proto3" json:"total_board_count,omitempty"`        // 故事板总数
	TotalLikeCount    int64  `protobuf:"varint,10,opt,name=total_like_count,json=totalLikeCount,proto3" json:"total_like_count,omitempty"`          // 点赞总数
	TotalCommentCount int64  `protobuf:"varint,11,opt,name=total_comment_count,json=totalCommentCount,proto3" json:"total_comment_count,omitempty"` // 评论总数
	TotalShareCount   int64  `protobuf:"varint,12,opt,name=total_share_count,json=totalShareCount,proto3" json:"total_share_count,omitempty"`       // 分享总数
	TotalRenderCount  int64  `protobuf:"varint,13,opt,name=total_render_count,json=totalRenderCount,proto3" json:"total_render_count,omitempty"`    // 渲染总数
	TotalForkCount    int64  `protobuf:"varint,14,opt,name=total_fork_count,json=totalForkCount,proto3" json:"total_fork_count,omitempty"`          // 分叉总数
	TotalViewCount    int64  `protobuf:"varint,15,opt,name=total_view_count,json=totalViewCount,proto3" json:"total_view_count,omitempty"`          // 查看总数
}

func (x *StorySummaryInfo) Reset() {
	*x = StorySummaryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorySummaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorySummaryInfo) ProtoMessage() {}

func (x *StorySummaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorySummaryInfo.ProtoReflect.Descriptor instead.
func (*StorySummaryInfo) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{22}
}

func (x *StorySummaryInfo) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *StorySummaryInfo) GetStoryTitle() string {
	if x != nil {
		return x.StoryTitle
	}
	return ""
}

func (x *StorySummaryInfo) GetStoryAvatar() string {
	if x != nil {
		return x.StoryAvatar
	}
	return ""
}

func (x *StorySummaryInfo) GetStoryDescription() string {
	if x != nil {
		return x.StoryDescription
	}
	return ""
}

func (x *StorySummaryInfo) GetStoryCover() string {
	if x != nil {
		return x.StoryCover
	}
	return ""
}

func (x *StorySummaryInfo) GetStoryTags() string {
	if x != nil {
		return x.StoryTags
	}
	return ""
}

func (x *StorySummaryInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *StorySummaryInfo) GetCreateUserId() int64 {
	if x != nil {
		return x.CreateUserId
	}
	return 0
}

func (x *StorySummaryInfo) GetTotalBoardCount() int64 {
	if x != nil {
		return x.TotalBoardCount
	}
	return 0
}

func (x *StorySummaryInfo) GetTotalLikeCount() int64 {
	if x != nil {
		return x.TotalLikeCount
	}
	return 0
}

func (x *StorySummaryInfo) GetTotalCommentCount() int64 {
	if x != nil {
		return x.TotalCommentCount
	}
	return 0
}

func (x *StorySummaryInfo) GetTotalShareCount() int64 {
	if x != nil {
		return x.TotalShareCount
	}
	return 0
}

func (x *StorySummaryInfo) GetTotalRenderCount() int64 {
	if x != nil {
		return x.TotalRenderCount
	}
	return 0
}

func (x *StorySummaryInfo) GetTotalForkCount() int64 {
	if x != nil {
		return x.TotalForkCount
	}
	return 0
}

func (x *StorySummaryInfo) GetTotalViewCount() int64 {
	if x != nil {
		return x.TotalViewCount
	}
	return 0
}

// GetStoryboardsResponse 获取故事板列表的响应结果
type GetStoryboardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      // 响应码
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // 响应消息
	Data    *GetStoryboardsResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStoryboardsResponse) Reset() {
	*x = GetStoryboardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryboardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryboardsResponse) ProtoMessage() {}

func (x *GetStoryboardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryboardsResponse.ProtoReflect.Descriptor instead.
func (*GetStoryboardsResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{23}
}

func (x *GetStoryboardsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStoryboardsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoryboardsResponse) GetData() *GetStoryboardsResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DelStoryboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	StoryId int64 `protobuf:"varint,2,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	UserId  int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DelStoryboardRequest) Reset() {
	*x = DelStoryboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelStoryboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStoryboardRequest) ProtoMessage() {}

func (x *DelStoryboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStoryboardRequest.ProtoReflect.Descriptor instead.
func (*DelStoryboardRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{24}
}

func (x *DelStoryboardRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *DelStoryboardRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *DelStoryboardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DelStoryboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelStoryboardResponse) Reset() {
	*x = DelStoryboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelStoryboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStoryboardResponse) ProtoMessage() {}

func (x *DelStoryboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStoryboardResponse.ProtoReflect.Descriptor instead.
func (*DelStoryboardResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{25}
}

func (x *DelStoryboardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelStoryboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ForkStoryboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevBoardId int64       `protobuf:"varint,1,opt,name=prev_board_id,json=prevBoardId,proto3" json:"prev_board_id,omitempty"`
	StoryId     int64       `protobuf:"varint,2,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	UserId      int64       `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Board       *StoryBoard `protobuf:"bytes,4,opt,name=board,proto3" json:"board,omitempty"`
}

func (x *ForkStoryboardRequest) Reset() {
	*x = ForkStoryboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkStoryboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkStoryboardRequest) ProtoMessage() {}

func (x *ForkStoryboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkStoryboardRequest.ProtoReflect.Descriptor instead.
func (*ForkStoryboardRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{26}
}

func (x *ForkStoryboardRequest) GetPrevBoardId() int64 {
	if x != nil {
		return x.PrevBoardId
	}
	return 0
}

func (x *ForkStoryboardRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *ForkStoryboardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ForkStoryboardRequest) GetBoard() *StoryBoard {
	if x != nil {
		return x.Board
	}
	return nil
}

type ForkStoryboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ForkStoryboardResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ForkStoryboardResponse) Reset() {
	*x = ForkStoryboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkStoryboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkStoryboardResponse) ProtoMessage() {}

func (x *ForkStoryboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkStoryboardResponse.ProtoReflect.Descriptor instead.
func (*ForkStoryboardResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{27}
}

func (x *ForkStoryboardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ForkStoryboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ForkStoryboardResponse) GetData() *ForkStoryboardResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateStoryboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId int64             `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	StoryId int64             `protobuf:"varint,2,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	UserId  int64             `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Params  *StoryBoardParams `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *UpdateStoryboardRequest) Reset() {
	*x = UpdateStoryboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoryboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoryboardRequest) ProtoMessage() {}

func (x *UpdateStoryboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoryboardRequest.ProtoReflect.Descriptor instead.
func (*UpdateStoryboardRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateStoryboardRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *UpdateStoryboardRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *UpdateStoryboardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateStoryboardRequest) GetParams() *StoryBoardParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type UpdateStoryboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *UpdateStoryboardResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateStoryboardResponse) Reset() {
	*x = UpdateStoryboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoryboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoryboardResponse) ProtoMessage() {}

func (x *UpdateStoryboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoryboardResponse.ProtoReflect.Descriptor instead.
func (*UpdateStoryboardResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateStoryboardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateStoryboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateStoryboardResponse) GetData() *UpdateStoryboardResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type WatchStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId int64 `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *WatchStoryRequest) Reset() {
	*x = WatchStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchStoryRequest) ProtoMessage() {}

func (x *WatchStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchStoryRequest.ProtoReflect.Descriptor instead.
func (*WatchStoryRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{30}
}

func (x *WatchStoryRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *WatchStoryRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type WatchStoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *WatchStoryResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WatchStoryResponse) Reset() {
	*x = WatchStoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchStoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchStoryResponse) ProtoMessage() {}

func (x *WatchStoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchStoryResponse.ProtoReflect.Descriptor instead.
func (*WatchStoryResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{31}
}

func (x *WatchStoryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WatchStoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WatchStoryResponse) GetData() *WatchStoryResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type LikeStoryboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StoryId int64 `protobuf:"varint,3,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
}

func (x *LikeStoryboardRequest) Reset() {
	*x = LikeStoryboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeStoryboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeStoryboardRequest) ProtoMessage() {}

func (x *LikeStoryboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeStoryboardRequest.ProtoReflect.Descriptor instead.
func (*LikeStoryboardRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{32}
}

func (x *LikeStoryboardRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *LikeStoryboardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LikeStoryboardRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

type LikeStoryboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *LikeStoryboardResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *LikeStoryboardResponse) Reset() {
	*x = LikeStoryboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeStoryboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeStoryboardResponse) ProtoMessage() {}

func (x *LikeStoryboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeStoryboardResponse.ProtoReflect.Descriptor instead.
func (*LikeStoryboardResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{33}
}

func (x *LikeStoryboardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LikeStoryboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LikeStoryboardResponse) GetData() *LikeStoryboardResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type UnLikeStoryboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StoryId int64 `protobuf:"varint,3,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
}

func (x *UnLikeStoryboardRequest) Reset() {
	*x = UnLikeStoryboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLikeStoryboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLikeStoryboardRequest) ProtoMessage() {}

func (x *UnLikeStoryboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLikeStoryboardRequest.ProtoReflect.Descriptor instead.
func (*UnLikeStoryboardRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{34}
}

func (x *UnLikeStoryboardRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *UnLikeStoryboardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UnLikeStoryboardRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

type UnLikeStoryboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UnLikeStoryboardResponse) Reset() {
	*x = UnLikeStoryboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLikeStoryboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLikeStoryboardResponse) ProtoMessage() {}

func (x *UnLikeStoryboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLikeStoryboardResponse.ProtoReflect.Descriptor instead.
func (*UnLikeStoryboardResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{35}
}

func (x *UnLikeStoryboardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UnLikeStoryboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ShareStoryboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StoryId int64 `protobuf:"varint,3,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
}

func (x *ShareStoryboardRequest) Reset() {
	*x = ShareStoryboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareStoryboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareStoryboardRequest) ProtoMessage() {}

func (x *ShareStoryboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareStoryboardRequest.ProtoReflect.Descriptor instead.
func (*ShareStoryboardRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{36}
}

func (x *ShareStoryboardRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *ShareStoryboardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ShareStoryboardRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

type ShareStoryboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ShareStoryboardResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ShareStoryboardResponse) Reset() {
	*x = ShareStoryboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareStoryboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareStoryboardResponse) ProtoMessage() {}

func (x *ShareStoryboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareStoryboardResponse.ProtoReflect.Descriptor instead.
func (*ShareStoryboardResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{37}
}

func (x *ShareStoryboardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShareStoryboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ShareStoryboardResponse) GetData() *ShareStoryboardResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type RenderStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId      int64      `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	UserId       int64      `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsRegenerate bool       `protobuf:"varint,4,opt,name=is_regenerate,json=isRegenerate,proto3" json:"is_regenerate,omitempty"`
	BoardId      int64      `protobuf:"varint,7,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	RenderType   RenderType `protobuf:"varint,9,opt,name=render_type,json=renderType,proto3,enum=common.RenderType" json:"render_type,omitempty"`
}

func (x *RenderStoryRequest) Reset() {
	*x = RenderStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryRequest) ProtoMessage() {}

func (x *RenderStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryRequest.ProtoReflect.Descriptor instead.
func (*RenderStoryRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{38}
}

func (x *RenderStoryRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *RenderStoryRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RenderStoryRequest) GetIsRegenerate() bool {
	if x != nil {
		return x.IsRegenerate
	}
	return false
}

func (x *RenderStoryRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *RenderStoryRequest) GetRenderType() RenderType {
	if x != nil {
		return x.RenderType
	}
	return RenderType_RENDER_TYPE_TEXT_UNSPECIFIED
}

type RenderStoryStructureValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  string            `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Urls  []string          `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"`
	Value int32             `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Nums  int32             `protobuf:"varint,4,opt,name=nums,proto3" json:"nums,omitempty"`
	Extra map[string]string `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RenderStoryStructureValue) Reset() {
	*x = RenderStoryStructureValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryStructureValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryStructureValue) ProtoMessage() {}

func (x *RenderStoryStructureValue) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryStructureValue.ProtoReflect.Descriptor instead.
func (*RenderStoryStructureValue) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{39}
}

func (x *RenderStoryStructureValue) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RenderStoryStructureValue) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *RenderStoryStructureValue) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RenderStoryStructureValue) GetNums() int32 {
	if x != nil {
		return x.Nums
	}
	return 0
}

func (x *RenderStoryStructureValue) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type StoryChapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 章节情节简述
	ChapterSummary *ChapterSummary `protobuf:"bytes,1,opt,name=chapter_summary,json=chapterSummary,proto3" json:"chapter_summary,omitempty"`
	// 章节详细情节
	ChapterDetailInfo *ChapterDetailInformation `protobuf:"bytes,2,opt,name=chapter_detail_info,json=chapterDetailInfo,proto3" json:"chapter_detail_info,omitempty"`
}

func (x *StoryChapter) Reset() {
	*x = StoryChapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryChapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryChapter) ProtoMessage() {}

func (x *StoryChapter) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryChapter.ProtoReflect.Descriptor instead.
func (*StoryChapter) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{40}
}

func (x *StoryChapter) GetChapterSummary() *ChapterSummary {
	if x != nil {
		return x.ChapterSummary
	}
	return nil
}

func (x *StoryChapter) GetChapterDetailInfo() *ChapterDetailInformation {
	if x != nil {
		return x.ChapterDetailInfo
	}
	return nil
}

// ChapterSummary 表示章节的基本信息
type ChapterSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 章节题目
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 章节内容
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 参与人物
	Characters []*Character `protobuf:"bytes,3,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *ChapterSummary) Reset() {
	*x = ChapterSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterSummary) ProtoMessage() {}

func (x *ChapterSummary) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterSummary.ProtoReflect.Descriptor instead.
func (*ChapterSummary) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{41}
}

func (x *ChapterSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChapterSummary) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChapterSummary) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

// ChapterDetailInformation 包含多个详细情节
type ChapterDetailInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 详细情节列表
	Details []*DetailScene `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ChapterDetailInformation) Reset() {
	*x = ChapterDetailInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterDetailInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterDetailInformation) ProtoMessage() {}

func (x *ChapterDetailInformation) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterDetailInformation.ProtoReflect.Descriptor instead.
func (*ChapterDetailInformation) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{42}
}

func (x *ChapterDetailInformation) GetDetails() []*DetailScene {
	if x != nil {
		return x.Details
	}
	return nil
}

// DetailScene 表示具体的场景信息
type DetailScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 情节id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 情节内容
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 参与人物
	Characters []*Character `protobuf:"bytes,3,rep,name=characters,proto3" json:"characters,omitempty"`
	// 图片提示词
	ImagePrompt string `protobuf:"bytes,4,opt,name=image_prompt,json=imagePrompt,proto3" json:"image_prompt,omitempty"`
}

func (x *DetailScene) Reset() {
	*x = DetailScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailScene) ProtoMessage() {}

func (x *DetailScene) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailScene.ProtoReflect.Descriptor instead.
func (*DetailScene) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{43}
}

func (x *DetailScene) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DetailScene) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DetailScene) GetCharacters() []*Character {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *DetailScene) GetImagePrompt() string {
	if x != nil {
		return x.ImagePrompt
	}
	return ""
}

// Character 表示角色信息
type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 角色id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 角色姓名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 角色描述
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{44}
}

func (x *Character) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Character) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Character) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type StoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryNameAndTheme *StoryNameAndTheme `protobuf:"bytes,1,opt,name=story_name_and_theme,json=故事名称和主题,proto3" json:"story_name_and_theme,omitempty"`
	StoryChapters     []*ChapterInfo     `protobuf:"bytes,2,rep,name=story_chapters,json=故事章节,proto3" json:"story_chapters,omitempty"`
}

func (x *StoryInfo) Reset() {
	*x = StoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryInfo) ProtoMessage() {}

func (x *StoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryInfo.ProtoReflect.Descriptor instead.
func (*StoryInfo) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{45}
}

func (x *StoryInfo) GetStoryNameAndTheme() *StoryNameAndTheme {
	if x != nil {
		return x.StoryNameAndTheme
	}
	return nil
}

func (x *StoryInfo) GetStoryChapters() []*ChapterInfo {
	if x != nil {
		return x.StoryChapters
	}
	return nil
}

// StoryNameAndTheme 表示故事的名称和主题信息
type StoryNameAndTheme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,json=故事名称,proto3" json:"name,omitempty"`
	Theme       string `protobuf:"bytes,2,opt,name=theme,json=故事主题,proto3" json:"theme,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,json=故事简介,proto3" json:"description,omitempty"`
}

func (x *StoryNameAndTheme) Reset() {
	*x = StoryNameAndTheme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryNameAndTheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryNameAndTheme) ProtoMessage() {}

func (x *StoryNameAndTheme) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryNameAndTheme.ProtoReflect.Descriptor instead.
func (*StoryNameAndTheme) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{46}
}

func (x *StoryNameAndTheme) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoryNameAndTheme) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *StoryNameAndTheme) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// ChapterInfo 表示单个章节的信息
type ChapterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,json=章节ID,proto3" json:"id,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,json=章节题目,proto3" json:"title,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,json=章节内容,proto3" json:"content,omitempty"`
}

func (x *ChapterInfo) Reset() {
	*x = ChapterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterInfo) ProtoMessage() {}

func (x *ChapterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterInfo.ProtoReflect.Descriptor instead.
func (*ChapterInfo) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{47}
}

func (x *ChapterInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChapterInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChapterInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type RenderStoryDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       string     `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Status     int32      `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Urls       []string   `protobuf:"bytes,3,rep,name=urls,proto3" json:"urls,omitempty"`
	StoryId    int64      `protobuf:"varint,4,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	BoardId    int64      `protobuf:"varint,5,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId     int64      `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RenderType RenderType `protobuf:"varint,7,opt,name=render_type,json=renderType,proto3,enum=common.RenderType" json:"render_type,omitempty"`
	Result     *StoryInfo `protobuf:"bytes,8,opt,name=result,proto3" json:"result,omitempty"`
	Timecost   int32      `protobuf:"varint,9,opt,name=timecost,proto3" json:"timecost,omitempty"`
}

func (x *RenderStoryDetail) Reset() {
	*x = RenderStoryDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryDetail) ProtoMessage() {}

func (x *RenderStoryDetail) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryDetail.ProtoReflect.Descriptor instead.
func (*RenderStoryDetail) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{48}
}

func (x *RenderStoryDetail) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RenderStoryDetail) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RenderStoryDetail) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *RenderStoryDetail) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *RenderStoryDetail) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *RenderStoryDetail) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RenderStoryDetail) GetRenderType() RenderType {
	if x != nil {
		return x.RenderType
	}
	return RenderType_RENDER_TYPE_TEXT_UNSPECIFIED
}

func (x *RenderStoryDetail) GetResult() *StoryInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RenderStoryDetail) GetTimecost() int32 {
	if x != nil {
		return x.Timecost
	}
	return 0
}

type RenderStoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *RenderStoryDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RenderStoryResponse) Reset() {
	*x = RenderStoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryResponse) ProtoMessage() {}

func (x *RenderStoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryResponse.ProtoReflect.Descriptor instead.
func (*RenderStoryResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{49}
}

func (x *RenderStoryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RenderStoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RenderStoryResponse) GetData() *RenderStoryDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type RenderStoryboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId      int64      `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	StoryId      int64      `protobuf:"varint,2,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	UserId       int64      `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsRegenerate bool       `protobuf:"varint,4,opt,name=is_regenerate,json=isRegenerate,proto3" json:"is_regenerate,omitempty"`
	RenderType   RenderType `protobuf:"varint,6,opt,name=render_type,json=renderType,proto3,enum=common.RenderType" json:"render_type,omitempty"`
}

func (x *RenderStoryboardRequest) Reset() {
	*x = RenderStoryboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryboardRequest) ProtoMessage() {}

func (x *RenderStoryboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryboardRequest.ProtoReflect.Descriptor instead.
func (*RenderStoryboardRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{50}
}

func (x *RenderStoryboardRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *RenderStoryboardRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *RenderStoryboardRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RenderStoryboardRequest) GetIsRegenerate() bool {
	if x != nil {
		return x.IsRegenerate
	}
	return false
}

func (x *RenderStoryboardRequest) GetRenderType() RenderType {
	if x != nil {
		return x.RenderType
	}
	return RenderType_RENDER_TYPE_TEXT_UNSPECIFIED
}

type RenderStoryboardDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       string        `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Status     int32         `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Urls       []string      `protobuf:"bytes,3,rep,name=urls,proto3" json:"urls,omitempty"`
	StoryId    int64         `protobuf:"varint,4,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	BoardId    int64         `protobuf:"varint,5,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId     int64         `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RenderType RenderType    `protobuf:"varint,7,opt,name=render_type,json=renderType,proto3,enum=common.RenderType" json:"render_type,omitempty"`
	Result     *StoryChapter `protobuf:"bytes,8,opt,name=result,proto3" json:"result,omitempty"`
	Timecost   int32         `protobuf:"varint,9,opt,name=timecost,proto3" json:"timecost,omitempty"`
}

func (x *RenderStoryboardDetail) Reset() {
	*x = RenderStoryboardDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryboardDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryboardDetail) ProtoMessage() {}

func (x *RenderStoryboardDetail) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryboardDetail.ProtoReflect.Descriptor instead.
func (*RenderStoryboardDetail) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{51}
}

func (x *RenderStoryboardDetail) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RenderStoryboardDetail) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RenderStoryboardDetail) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *RenderStoryboardDetail) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *RenderStoryboardDetail) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *RenderStoryboardDetail) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RenderStoryboardDetail) GetRenderType() RenderType {
	if x != nil {
		return x.RenderType
	}
	return RenderType_RENDER_TYPE_TEXT_UNSPECIFIED
}

func (x *RenderStoryboardDetail) GetResult() *StoryChapter {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RenderStoryboardDetail) GetTimecost() int32 {
	if x != nil {
		return x.Timecost
	}
	return 0
}

type RenderStoryboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *RenderStoryboardDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RenderStoryboardResponse) Reset() {
	*x = RenderStoryboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryboardResponse) ProtoMessage() {}

func (x *RenderStoryboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryboardResponse.ProtoReflect.Descriptor instead.
func (*RenderStoryboardResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{52}
}

func (x *RenderStoryboardResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RenderStoryboardResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RenderStoryboardResponse) GetData() *RenderStoryboardDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type GenStoryboardTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId     int64      `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	StoryId     int64      `protobuf:"varint,2,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	UserId      int64      `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RenderType  RenderType `protobuf:"varint,6,opt,name=render_type,json=renderType,proto3,enum=common.RenderType" json:"render_type,omitempty"`
	Prompt      string     `protobuf:"bytes,9,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Title       string     `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	Description string     `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	SenceNum    int32      `protobuf:"varint,13,opt,name=sence_num,json=senceNum,proto3" json:"sence_num,omitempty"`
}

func (x *GenStoryboardTextRequest) Reset() {
	*x = GenStoryboardTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenStoryboardTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenStoryboardTextRequest) ProtoMessage() {}

func (x *GenStoryboardTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenStoryboardTextRequest.ProtoReflect.Descriptor instead.
func (*GenStoryboardTextRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{53}
}

func (x *GenStoryboardTextRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *GenStoryboardTextRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *GenStoryboardTextRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GenStoryboardTextRequest) GetRenderType() RenderType {
	if x != nil {
		return x.RenderType
	}
	return RenderType_RENDER_TYPE_TEXT_UNSPECIFIED
}

func (x *GenStoryboardTextRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *GenStoryboardTextRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GenStoryboardTextRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GenStoryboardTextRequest) GetSenceNum() int32 {
	if x != nil {
		return x.SenceNum
	}
	return 0
}

type GenStoryboardTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *RenderStoryboardDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GenStoryboardTextResponse) Reset() {
	*x = GenStoryboardTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenStoryboardTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenStoryboardTextResponse) ProtoMessage() {}

func (x *GenStoryboardTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenStoryboardTextResponse.ProtoReflect.Descriptor instead.
func (*GenStoryboardTextResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{54}
}

func (x *GenStoryboardTextResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GenStoryboardTextResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GenStoryboardTextResponse) GetData() *RenderStoryboardDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type GenStoryboardImagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId      int64      `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	StoryId      int64      `protobuf:"varint,2,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	UserId       int64      `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsRegenerate bool       `protobuf:"varint,4,opt,name=is_regenerate,json=isRegenerate,proto3" json:"is_regenerate,omitempty"`
	RenderType   RenderType `protobuf:"varint,6,opt,name=render_type,json=renderType,proto3,enum=common.RenderType" json:"render_type,omitempty"`
	SenceId      int32      `protobuf:"varint,7,opt,name=sence_id,json=senceId,proto3" json:"sence_id,omitempty"`
	SenceNameKey string     `protobuf:"bytes,8,opt,name=sence_name_key,json=senceNameKey,proto3" json:"sence_name_key,omitempty"`
	Prompt       string     `protobuf:"bytes,9,opt,name=prompt,proto3" json:"prompt,omitempty"`
}

func (x *GenStoryboardImagesRequest) Reset() {
	*x = GenStoryboardImagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenStoryboardImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenStoryboardImagesRequest) ProtoMessage() {}

func (x *GenStoryboardImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenStoryboardImagesRequest.ProtoReflect.Descriptor instead.
func (*GenStoryboardImagesRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{55}
}

func (x *GenStoryboardImagesRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *GenStoryboardImagesRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *GenStoryboardImagesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GenStoryboardImagesRequest) GetIsRegenerate() bool {
	if x != nil {
		return x.IsRegenerate
	}
	return false
}

func (x *GenStoryboardImagesRequest) GetRenderType() RenderType {
	if x != nil {
		return x.RenderType
	}
	return RenderType_RENDER_TYPE_TEXT_UNSPECIFIED
}

func (x *GenStoryboardImagesRequest) GetSenceId() int32 {
	if x != nil {
		return x.SenceId
	}
	return 0
}

func (x *GenStoryboardImagesRequest) GetSenceNameKey() string {
	if x != nil {
		return x.SenceNameKey
	}
	return ""
}

func (x *GenStoryboardImagesRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

type GenStoryboardImagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *RenderStoryboardDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GenStoryboardImagesResponse) Reset() {
	*x = GenStoryboardImagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenStoryboardImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenStoryboardImagesResponse) ProtoMessage() {}

func (x *GenStoryboardImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenStoryboardImagesResponse.ProtoReflect.Descriptor instead.
func (*GenStoryboardImagesResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{56}
}

func (x *GenStoryboardImagesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GenStoryboardImagesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GenStoryboardImagesResponse) GetData() *RenderStoryboardDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type FetchGroupStorysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId  int64 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId   int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page     int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *FetchGroupStorysRequest) Reset() {
	*x = FetchGroupStorysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchGroupStorysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGroupStorysRequest) ProtoMessage() {}

func (x *FetchGroupStorysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGroupStorysRequest.ProtoReflect.Descriptor instead.
func (*FetchGroupStorysRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{57}
}

func (x *FetchGroupStorysRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *FetchGroupStorysRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FetchGroupStorysRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FetchGroupStorysRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FetchGroupStorysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *FetchGroupStorysResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FetchGroupStorysResponse) Reset() {
	*x = FetchGroupStorysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchGroupStorysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGroupStorysResponse) ProtoMessage() {}

func (x *FetchGroupStorysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGroupStorysResponse.ProtoReflect.Descriptor instead.
func (*FetchGroupStorysResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{58}
}

func (x *FetchGroupStorysResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FetchGroupStorysResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FetchGroupStorysResponse) GetData() *FetchGroupStorysResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetStoryRenderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId      int64 `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	RenderStatus int32 `protobuf:"varint,2,opt,name=render_status,json=renderStatus,proto3" json:"render_status,omitempty"`
	RenderType   int32 `protobuf:"varint,3,opt,name=render_type,json=renderType,proto3" json:"render_type,omitempty"`
	UserId       int64 `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetStoryRenderRequest) Reset() {
	*x = GetStoryRenderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryRenderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryRenderRequest) ProtoMessage() {}

func (x *GetStoryRenderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryRenderRequest.ProtoReflect.Descriptor instead.
func (*GetStoryRenderRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{59}
}

func (x *GetStoryRenderRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *GetStoryRenderRequest) GetRenderStatus() int32 {
	if x != nil {
		return x.RenderStatus
	}
	return 0
}

func (x *GetStoryRenderRequest) GetRenderType() int32 {
	if x != nil {
		return x.RenderType
	}
	return 0
}

func (x *GetStoryRenderRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetStoryRenderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GetStoryRenderResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStoryRenderResponse) Reset() {
	*x = GetStoryRenderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryRenderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryRenderResponse) ProtoMessage() {}

func (x *GetStoryRenderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryRenderResponse.ProtoReflect.Descriptor instead.
func (*GetStoryRenderResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{60}
}

func (x *GetStoryRenderResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStoryRenderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoryRenderResponse) GetData() *GetStoryRenderResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetStoryBoardRenderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId      int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	RenderStatus int32 `protobuf:"varint,2,opt,name=render_status,json=renderStatus,proto3" json:"render_status,omitempty"`
	RenderType   int32 `protobuf:"varint,3,opt,name=render_type,json=renderType,proto3" json:"render_type,omitempty"`
}

func (x *GetStoryBoardRenderRequest) Reset() {
	*x = GetStoryBoardRenderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardRenderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardRenderRequest) ProtoMessage() {}

func (x *GetStoryBoardRenderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardRenderRequest.ProtoReflect.Descriptor instead.
func (*GetStoryBoardRenderRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{61}
}

func (x *GetStoryBoardRenderRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *GetStoryBoardRenderRequest) GetRenderStatus() int32 {
	if x != nil {
		return x.RenderStatus
	}
	return 0
}

func (x *GetStoryBoardRenderRequest) GetRenderType() int32 {
	if x != nil {
		return x.RenderType
	}
	return 0
}

type GetStoryBoardRenderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GetStoryBoardRenderResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStoryBoardRenderResponse) Reset() {
	*x = GetStoryBoardRenderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardRenderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardRenderResponse) ProtoMessage() {}

func (x *GetStoryBoardRenderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardRenderResponse.ProtoReflect.Descriptor instead.
func (*GetStoryBoardRenderResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{62}
}

func (x *GetStoryBoardRenderResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStoryBoardRenderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoryBoardRenderResponse) GetData() *GetStoryBoardRenderResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ContinueRenderStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId     int64        `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	PrevBoardId int64        `protobuf:"varint,2,opt,name=prev_board_id,json=prevBoardId,proto3" json:"prev_board_id,omitempty"`
	UserId      int64        `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RenderType  RenderType   `protobuf:"varint,4,opt,name=render_type,json=renderType,proto3,enum=common.RenderType" json:"render_type,omitempty"`
	Prompt      string       `protobuf:"bytes,5,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Title       string       `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Description string       `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Background  string       `protobuf:"bytes,8,opt,name=background,proto3" json:"background,omitempty"`
	Roles       []*StoryRole `protobuf:"bytes,9,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ContinueRenderStoryRequest) Reset() {
	*x = ContinueRenderStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinueRenderStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinueRenderStoryRequest) ProtoMessage() {}

func (x *ContinueRenderStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinueRenderStoryRequest.ProtoReflect.Descriptor instead.
func (*ContinueRenderStoryRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{63}
}

func (x *ContinueRenderStoryRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *ContinueRenderStoryRequest) GetPrevBoardId() int64 {
	if x != nil {
		return x.PrevBoardId
	}
	return 0
}

func (x *ContinueRenderStoryRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ContinueRenderStoryRequest) GetRenderType() RenderType {
	if x != nil {
		return x.RenderType
	}
	return RenderType_RENDER_TYPE_TEXT_UNSPECIFIED
}

func (x *ContinueRenderStoryRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *ContinueRenderStoryRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ContinueRenderStoryRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ContinueRenderStoryRequest) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *ContinueRenderStoryRequest) GetRoles() []*StoryRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

type ContinueRenderStoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *RenderStoryboardDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ContinueRenderStoryResponse) Reset() {
	*x = ContinueRenderStoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinueRenderStoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinueRenderStoryResponse) ProtoMessage() {}

func (x *ContinueRenderStoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinueRenderStoryResponse.ProtoReflect.Descriptor instead.
func (*ContinueRenderStoryResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{64}
}

func (x *ContinueRenderStoryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ContinueRenderStoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ContinueRenderStoryResponse) GetData() *RenderStoryboardDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

type RenderStoryRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId    int64      `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	BoardId    int64      `protobuf:"varint,2,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId     int64      `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Prompt     string     `protobuf:"bytes,4,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Background string     `protobuf:"bytes,5,opt,name=background,proto3" json:"background,omitempty"`
	Params     *StoryRole `protobuf:"bytes,6,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *RenderStoryRolesRequest) Reset() {
	*x = RenderStoryRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryRolesRequest) ProtoMessage() {}

func (x *RenderStoryRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryRolesRequest.ProtoReflect.Descriptor instead.
func (*RenderStoryRolesRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{65}
}

func (x *RenderStoryRolesRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *RenderStoryRolesRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *RenderStoryRolesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RenderStoryRolesRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *RenderStoryRolesRequest) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *RenderStoryRolesRequest) GetParams() *StoryRole {
	if x != nil {
		return x.Params
	}
	return nil
}

type RenderStoryRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	List    []*StoryRole `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RenderStoryRolesResponse) Reset() {
	*x = RenderStoryRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryRolesResponse) ProtoMessage() {}

func (x *RenderStoryRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryRolesResponse.ProtoReflect.Descriptor instead.
func (*RenderStoryRolesResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{66}
}

func (x *RenderStoryRolesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RenderStoryRolesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RenderStoryRolesResponse) GetList() []*StoryRole {
	if x != nil {
		return x.List
	}
	return nil
}

type RenderStoryRoleDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId     int64      `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Role       *StoryRole `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Prompt     string     `protobuf:"bytes,3,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Background string     `protobuf:"bytes,4,opt,name=background,proto3" json:"background,omitempty"`
	UserId     int64      `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RenderStoryRoleDetailRequest) Reset() {
	*x = RenderStoryRoleDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryRoleDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryRoleDetailRequest) ProtoMessage() {}

func (x *RenderStoryRoleDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryRoleDetailRequest.ProtoReflect.Descriptor instead.
func (*RenderStoryRoleDetailRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{67}
}

func (x *RenderStoryRoleDetailRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RenderStoryRoleDetailRequest) GetRole() *StoryRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RenderStoryRoleDetailRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *RenderStoryRoleDetailRequest) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *RenderStoryRoleDetailRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RenderStoryRoleDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Role    *StoryRole `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *RenderStoryRoleDetailResponse) Reset() {
	*x = RenderStoryRoleDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryRoleDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryRoleDetailResponse) ProtoMessage() {}

func (x *RenderStoryRoleDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryRoleDetailResponse.ProtoReflect.Descriptor instead.
func (*RenderStoryRoleDetailResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{68}
}

func (x *RenderStoryRoleDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RenderStoryRoleDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RenderStoryRoleDetailResponse) GetRole() *StoryRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type UpdateStoryRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   *StoryRole `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	UserId int64      `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdateStoryRoleRequest) Reset() {
	*x = UpdateStoryRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoryRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoryRoleRequest) ProtoMessage() {}

func (x *UpdateStoryRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoryRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateStoryRoleRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{69}
}

func (x *UpdateStoryRoleRequest) GetRole() *StoryRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *UpdateStoryRoleRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateStoryRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateStoryRoleResponse) Reset() {
	*x = UpdateStoryRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoryRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoryRoleResponse) ProtoMessage() {}

func (x *UpdateStoryRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoryRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateStoryRoleResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{70}
}

func (x *UpdateStoryRoleResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateStoryRoleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetStoryRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId int64 `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetStoryRolesRequest) Reset() {
	*x = GetStoryRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryRolesRequest) ProtoMessage() {}

func (x *GetStoryRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryRolesRequest.ProtoReflect.Descriptor instead.
func (*GetStoryRolesRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{71}
}

func (x *GetStoryRolesRequest) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *GetStoryRolesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetStoryRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GetStoryRolesResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStoryRolesResponse) Reset() {
	*x = GetStoryRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryRolesResponse) ProtoMessage() {}

func (x *GetStoryRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryRolesResponse.ProtoReflect.Descriptor instead.
func (*GetStoryRolesResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{72}
}

func (x *GetStoryRolesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStoryRolesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoryRolesResponse) GetData() *GetStoryRolesResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetStoryBoardRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetStoryBoardRolesRequest) Reset() {
	*x = GetStoryBoardRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardRolesRequest) ProtoMessage() {}

func (x *GetStoryBoardRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardRolesRequest.ProtoReflect.Descriptor instead.
func (*GetStoryBoardRolesRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{73}
}

func (x *GetStoryBoardRolesRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *GetStoryBoardRolesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetStoryBoardRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GetStoryBoardRolesResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStoryBoardRolesResponse) Reset() {
	*x = GetStoryBoardRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardRolesResponse) ProtoMessage() {}

func (x *GetStoryBoardRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardRolesResponse.ProtoReflect.Descriptor instead.
func (*GetStoryBoardRolesResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{74}
}

func (x *GetStoryBoardRolesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStoryBoardRolesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoryBoardRolesResponse) GetData() *GetStoryBoardRolesResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type StoryBoardSence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenceId      int64    `protobuf:"varint,1,opt,name=sence_id,json=senceId,proto3" json:"sence_id,omitempty"`
	Content      string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	CharacterIds []string `protobuf:"bytes,3,rep,name=character_ids,json=characterIds,proto3" json:"character_ids,omitempty"`
	CreatorId    int64    `protobuf:"varint,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	StoryId      int64    `protobuf:"varint,5,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	BoardId      int64    `protobuf:"varint,6,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	ImagePrompts string   `protobuf:"bytes,7,opt,name=image_prompts,json=imagePrompts,proto3" json:"image_prompts,omitempty"`
	AudioPrompts string   `protobuf:"bytes,8,opt,name=audio_prompts,json=audioPrompts,proto3" json:"audio_prompts,omitempty"`
	VideoPrompts string   `protobuf:"bytes,9,opt,name=video_prompts,json=videoPrompts,proto3" json:"video_prompts,omitempty"`
	IsGenerating int32    `protobuf:"varint,10,opt,name=is_generating,json=isGenerating,proto3" json:"is_generating,omitempty"`
	GenResult    string   `protobuf:"bytes,11,opt,name=gen_result,json=genResult,proto3" json:"gen_result,omitempty"`
	Images       []string `protobuf:"bytes,12,rep,name=images,proto3" json:"images,omitempty"`
	AudioUrl     string   `protobuf:"bytes,13,opt,name=audio_url,json=audioUrl,proto3" json:"audio_url,omitempty"`
	VideoUrl     string   `protobuf:"bytes,14,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
	Status       int32    `protobuf:"varint,15,opt,name=status,proto3" json:"status,omitempty"`
	Ctime        int64    `protobuf:"varint,16,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime        int64    `protobuf:"varint,17,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *StoryBoardSence) Reset() {
	*x = StoryBoardSence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryBoardSence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryBoardSence) ProtoMessage() {}

func (x *StoryBoardSence) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryBoardSence.ProtoReflect.Descriptor instead.
func (*StoryBoardSence) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{75}
}

func (x *StoryBoardSence) GetSenceId() int64 {
	if x != nil {
		return x.SenceId
	}
	return 0
}

func (x *StoryBoardSence) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *StoryBoardSence) GetCharacterIds() []string {
	if x != nil {
		return x.CharacterIds
	}
	return nil
}

func (x *StoryBoardSence) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *StoryBoardSence) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *StoryBoardSence) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *StoryBoardSence) GetImagePrompts() string {
	if x != nil {
		return x.ImagePrompts
	}
	return ""
}

func (x *StoryBoardSence) GetAudioPrompts() string {
	if x != nil {
		return x.AudioPrompts
	}
	return ""
}

func (x *StoryBoardSence) GetVideoPrompts() string {
	if x != nil {
		return x.VideoPrompts
	}
	return ""
}

func (x *StoryBoardSence) GetIsGenerating() int32 {
	if x != nil {
		return x.IsGenerating
	}
	return 0
}

func (x *StoryBoardSence) GetGenResult() string {
	if x != nil {
		return x.GenResult
	}
	return ""
}

func (x *StoryBoardSence) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *StoryBoardSence) GetAudioUrl() string {
	if x != nil {
		return x.AudioUrl
	}
	return ""
}

func (x *StoryBoardSence) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *StoryBoardSence) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StoryBoardSence) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *StoryBoardSence) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type GetStoryBoardSencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetStoryBoardSencesRequest) Reset() {
	*x = GetStoryBoardSencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardSencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardSencesRequest) ProtoMessage() {}

func (x *GetStoryBoardSencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardSencesRequest.ProtoReflect.Descriptor instead.
func (*GetStoryBoardSencesRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{76}
}

func (x *GetStoryBoardSencesRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *GetStoryBoardSencesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetStoryBoardSencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *GetStoryBoardSencesResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStoryBoardSencesResponse) Reset() {
	*x = GetStoryBoardSencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardSencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardSencesResponse) ProtoMessage() {}

func (x *GetStoryBoardSencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardSencesResponse.ProtoReflect.Descriptor instead.
func (*GetStoryBoardSencesResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{77}
}

func (x *GetStoryBoardSencesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStoryBoardSencesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoryBoardSencesResponse) GetData() *GetStoryBoardSencesResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateStoryBoardSenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sence  *StoryBoardSence `protobuf:"bytes,1,opt,name=sence,proto3" json:"sence,omitempty"`
	UserId int64            `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateStoryBoardSenceRequest) Reset() {
	*x = CreateStoryBoardSenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoryBoardSenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoryBoardSenceRequest) ProtoMessage() {}

func (x *CreateStoryBoardSenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoryBoardSenceRequest.ProtoReflect.Descriptor instead.
func (*CreateStoryBoardSenceRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{78}
}

func (x *CreateStoryBoardSenceRequest) GetSence() *StoryBoardSence {
	if x != nil {
		return x.Sence
	}
	return nil
}

func (x *CreateStoryBoardSenceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateStoryBoardSenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *CreateStoryBoardSenceResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateStoryBoardSenceResponse) Reset() {
	*x = CreateStoryBoardSenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoryBoardSenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoryBoardSenceResponse) ProtoMessage() {}

func (x *CreateStoryBoardSenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoryBoardSenceResponse.ProtoReflect.Descriptor instead.
func (*CreateStoryBoardSenceResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{79}
}

func (x *CreateStoryBoardSenceResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateStoryBoardSenceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateStoryBoardSenceResponse) GetData() *CreateStoryBoardSenceResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateStoryBoardSenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sence  *StoryBoardSence `protobuf:"bytes,1,opt,name=sence,proto3" json:"sence,omitempty"`
	UserId int64            `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdateStoryBoardSenceRequest) Reset() {
	*x = UpdateStoryBoardSenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoryBoardSenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoryBoardSenceRequest) ProtoMessage() {}

func (x *UpdateStoryBoardSenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoryBoardSenceRequest.ProtoReflect.Descriptor instead.
func (*UpdateStoryBoardSenceRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{80}
}

func (x *UpdateStoryBoardSenceRequest) GetSence() *StoryBoardSence {
	if x != nil {
		return x.Sence
	}
	return nil
}

func (x *UpdateStoryBoardSenceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateStoryBoardSenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateStoryBoardSenceResponse) Reset() {
	*x = UpdateStoryBoardSenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoryBoardSenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoryBoardSenceResponse) ProtoMessage() {}

func (x *UpdateStoryBoardSenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoryBoardSenceResponse.ProtoReflect.Descriptor instead.
func (*UpdateStoryBoardSenceResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{81}
}

func (x *UpdateStoryBoardSenceResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateStoryBoardSenceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteStoryBoardSenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenceId int64 `protobuf:"varint,1,opt,name=sence_id,json=senceId,proto3" json:"sence_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteStoryBoardSenceRequest) Reset() {
	*x = DeleteStoryBoardSenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStoryBoardSenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoryBoardSenceRequest) ProtoMessage() {}

func (x *DeleteStoryBoardSenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoryBoardSenceRequest.ProtoReflect.Descriptor instead.
func (*DeleteStoryBoardSenceRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{82}
}

func (x *DeleteStoryBoardSenceRequest) GetSenceId() int64 {
	if x != nil {
		return x.SenceId
	}
	return 0
}

func (x *DeleteStoryBoardSenceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteStoryBoardSenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteStoryBoardSenceResponse) Reset() {
	*x = DeleteStoryBoardSenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStoryBoardSenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStoryBoardSenceResponse) ProtoMessage() {}

func (x *DeleteStoryBoardSenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStoryBoardSenceResponse.ProtoReflect.Descriptor instead.
func (*DeleteStoryBoardSenceResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{83}
}

func (x *DeleteStoryBoardSenceResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteStoryBoardSenceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RenderStoryBoardSenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenceId int64 `protobuf:"varint,1,opt,name=sence_id,json=senceId,proto3" json:"sence_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BoardId int32 `protobuf:"varint,3,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
}

func (x *RenderStoryBoardSenceRequest) Reset() {
	*x = RenderStoryBoardSenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryBoardSenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryBoardSenceRequest) ProtoMessage() {}

func (x *RenderStoryBoardSenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryBoardSenceRequest.ProtoReflect.Descriptor instead.
func (*RenderStoryBoardSenceRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{84}
}

func (x *RenderStoryBoardSenceRequest) GetSenceId() int64 {
	if x != nil {
		return x.SenceId
	}
	return 0
}

func (x *RenderStoryBoardSenceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RenderStoryBoardSenceRequest) GetBoardId() int32 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

type RenderStoryBoardSenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message         string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	GeneratingStage int32            `protobuf:"varint,3,opt,name=generating_stage,json=generatingStage,proto3" json:"generating_stage,omitempty"`
	Data            *StoryBoardSence `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RenderStoryBoardSenceResponse) Reset() {
	*x = RenderStoryBoardSenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryBoardSenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryBoardSenceResponse) ProtoMessage() {}

func (x *RenderStoryBoardSenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryBoardSenceResponse.ProtoReflect.Descriptor instead.
func (*RenderStoryBoardSenceResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{85}
}

func (x *RenderStoryBoardSenceResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RenderStoryBoardSenceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RenderStoryBoardSenceResponse) GetGeneratingStage() int32 {
	if x != nil {
		return x.GeneratingStage
	}
	return 0
}

func (x *RenderStoryBoardSenceResponse) GetData() *StoryBoardSence {
	if x != nil {
		return x.Data
	}
	return nil
}

type RenderStoryBoardSencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BoardId int32 `protobuf:"varint,2,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
}

func (x *RenderStoryBoardSencesRequest) Reset() {
	*x = RenderStoryBoardSencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryBoardSencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryBoardSencesRequest) ProtoMessage() {}

func (x *RenderStoryBoardSencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryBoardSencesRequest.ProtoReflect.Descriptor instead.
func (*RenderStoryBoardSencesRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{86}
}

func (x *RenderStoryBoardSencesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RenderStoryBoardSencesRequest) GetBoardId() int32 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

type RenderStoryBoardSencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message         string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	GeneratingStage int32              `protobuf:"varint,3,opt,name=generating_stage,json=generatingStage,proto3" json:"generating_stage,omitempty"`
	List            []*StoryBoardSence `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RenderStoryBoardSencesResponse) Reset() {
	*x = RenderStoryBoardSencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenderStoryBoardSencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStoryBoardSencesResponse) ProtoMessage() {}

func (x *RenderStoryBoardSencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStoryBoardSencesResponse.ProtoReflect.Descriptor instead.
func (*RenderStoryBoardSencesResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{87}
}

func (x *RenderStoryBoardSencesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RenderStoryBoardSencesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RenderStoryBoardSencesResponse) GetGeneratingStage() int32 {
	if x != nil {
		return x.GeneratingStage
	}
	return 0
}

func (x *RenderStoryBoardSencesResponse) GetList() []*StoryBoardSence {
	if x != nil {
		return x.List
	}
	return nil
}

type GetStoryBoardSenceGenerateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenceId int64 `protobuf:"varint,1,opt,name=sence_id,json=senceId,proto3" json:"sence_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetStoryBoardSenceGenerateRequest) Reset() {
	*x = GetStoryBoardSenceGenerateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardSenceGenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardSenceGenerateRequest) ProtoMessage() {}

func (x *GetStoryBoardSenceGenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardSenceGenerateRequest.ProtoReflect.Descriptor instead.
func (*GetStoryBoardSenceGenerateRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{88}
}

func (x *GetStoryBoardSenceGenerateRequest) GetSenceId() int64 {
	if x != nil {
		return x.SenceId
	}
	return 0
}

func (x *GetStoryBoardSenceGenerateRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetStoryBoardSenceGenerateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            int32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message         string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	GeneratingStage int32            `protobuf:"varint,3,opt,name=generating_stage,json=generatingStage,proto3" json:"generating_stage,omitempty"`
	Data            *StoryBoardSence `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetStoryBoardSenceGenerateResponse) Reset() {
	*x = GetStoryBoardSenceGenerateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardSenceGenerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardSenceGenerateResponse) ProtoMessage() {}

func (x *GetStoryBoardSenceGenerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardSenceGenerateResponse.ProtoReflect.Descriptor instead.
func (*GetStoryBoardSenceGenerateResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{89}
}

func (x *GetStoryBoardSenceGenerateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStoryBoardSenceGenerateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoryBoardSenceGenerateResponse) GetGeneratingStage() int32 {
	if x != nil {
		return x.GeneratingStage
	}
	return 0
}

func (x *GetStoryBoardSenceGenerateResponse) GetData() *StoryBoardSence {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetStoryBoardGenerateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId  int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetStoryBoardGenerateRequest) Reset() {
	*x = GetStoryBoardGenerateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardGenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardGenerateRequest) ProtoMessage() {}

func (x *GetStoryBoardGenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardGenerateRequest.ProtoReflect.Descriptor instead.
func (*GetStoryBoardGenerateRequest) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{90}
}

func (x *GetStoryBoardGenerateRequest) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *GetStoryBoardGenerateRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetStoryBoardGenerateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code            int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message         string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	GeneratingStage int32              `protobuf:"varint,3,opt,name=generating_stage,json=generatingStage,proto3" json:"generating_stage,omitempty"`
	List            []*StoryBoardSence `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetStoryBoardGenerateResponse) Reset() {
	*x = GetStoryBoardGenerateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardGenerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardGenerateResponse) ProtoMessage() {}

func (x *GetStoryBoardGenerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardGenerateResponse.ProtoReflect.Descriptor instead.
func (*GetStoryBoardGenerateResponse) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{91}
}

func (x *GetStoryBoardGenerateResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetStoryBoardGenerateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStoryBoardGenerateResponse) GetGeneratingStage() int32 {
	if x != nil {
		return x.GeneratingStage
	}
	return 0
}

func (x *GetStoryBoardGenerateResponse) GetList() []*StoryBoardSence {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateStoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId int32 `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"` // 故事ID
	BoardId int32 `protobuf:"varint,2,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"` // 故事板ID
}

func (x *CreateStoryResponse_Data) Reset() {
	*x = CreateStoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoryResponse_Data) ProtoMessage() {}

func (x *CreateStoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoryResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateStoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{9, 0}
}

func (x *CreateStoryResponse_Data) GetStoryId() int32 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *CreateStoryResponse_Data) GetBoardId() int32 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

type UpdateStoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId int32 `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"` // 故事ID
}

func (x *UpdateStoryResponse_Data) Reset() {
	*x = UpdateStoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoryResponse_Data) ProtoMessage() {}

func (x *UpdateStoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoryResponse_Data.ProtoReflect.Descriptor instead.
func (*UpdateStoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{11, 0}
}

func (x *UpdateStoryResponse_Data) GetStoryId() int32 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

type GetStoryInfoResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info    *Story    `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`       // 故事信息
	Creator *UserInfo `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"` // 创建者信息
}

func (x *GetStoryInfoResponse_Data) Reset() {
	*x = GetStoryInfoResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryInfoResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryInfoResponse_Data) ProtoMessage() {}

func (x *GetStoryInfoResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryInfoResponse_Data.ProtoReflect.Descriptor instead.
func (*GetStoryInfoResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{13, 0}
}

func (x *GetStoryInfoResponse_Data) GetInfo() *Story {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetStoryInfoResponse_Data) GetCreator() *UserInfo {
	if x != nil {
		return x.Creator
	}
	return nil
}

type CreateStoryboardResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"` // 故事板ID
}

func (x *CreateStoryboardResponse_Data) Reset() {
	*x = CreateStoryboardResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoryboardResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoryboardResponse_Data) ProtoMessage() {}

func (x *CreateStoryboardResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoryboardResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateStoryboardResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CreateStoryboardResponse_Data) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

type GetStoryboardResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardInfo *StoryBoardActive `protobuf:"bytes,1,opt,name=board_info,json=boardInfo,proto3" json:"board_info,omitempty"` // 故事板活动信息
	Creator   *UserInfo         `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`                      // 创建者信息
}

func (x *GetStoryboardResponse_Data) Reset() {
	*x = GetStoryboardResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryboardResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryboardResponse_Data) ProtoMessage() {}

func (x *GetStoryboardResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryboardResponse_Data.ProtoReflect.Descriptor instead.
func (*GetStoryboardResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{17, 0}
}

func (x *GetStoryboardResponse_Data) GetBoardInfo() *StoryBoardActive {
	if x != nil {
		return x.BoardInfo
	}
	return nil
}

func (x *GetStoryboardResponse_Data) GetCreator() *UserInfo {
	if x != nil {
		return x.Creator
	}
	return nil
}

type GetStoryboardsResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List          []*StoryBoardActive `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`                                           // 故事板活动列表
	IsMultiBranch bool                `protobuf:"varint,4,opt,name=is_multi_branch,json=isMultiBranch,proto3" json:"is_multi_branch,omitempty"` // 是否多分支
	Total         int64               `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`                                        // 总数
	Offset        int64               `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`                                      // 偏移量
	PageSize      int64               `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                  // 每页大小
}

func (x *GetStoryboardsResponse_Data) Reset() {
	*x = GetStoryboardsResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryboardsResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryboardsResponse_Data) ProtoMessage() {}

func (x *GetStoryboardsResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryboardsResponse_Data.ProtoReflect.Descriptor instead.
func (*GetStoryboardsResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GetStoryboardsResponse_Data) GetList() []*StoryBoardActive {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetStoryboardsResponse_Data) GetIsMultiBranch() bool {
	if x != nil {
		return x.IsMultiBranch
	}
	return false
}

func (x *GetStoryboardsResponse_Data) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetStoryboardsResponse_Data) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetStoryboardsResponse_Data) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ForkStoryboardResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardId     int64 `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	StoryId     int64 `protobuf:"varint,2,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	TimelineId  int64 `protobuf:"varint,3,opt,name=timeline_id,json=timelineId,proto3" json:"timeline_id,omitempty"`
	PrevBoardId int64 `protobuf:"varint,4,opt,name=prev_board_id,json=prevBoardId,proto3" json:"prev_board_id,omitempty"`
}

func (x *ForkStoryboardResponse_Data) Reset() {
	*x = ForkStoryboardResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForkStoryboardResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkStoryboardResponse_Data) ProtoMessage() {}

func (x *ForkStoryboardResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkStoryboardResponse_Data.ProtoReflect.Descriptor instead.
func (*ForkStoryboardResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{27, 0}
}

func (x *ForkStoryboardResponse_Data) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *ForkStoryboardResponse_Data) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *ForkStoryboardResponse_Data) GetTimelineId() int64 {
	if x != nil {
		return x.TimelineId
	}
	return 0
}

func (x *ForkStoryboardResponse_Data) GetPrevBoardId() int64 {
	if x != nil {
		return x.PrevBoardId
	}
	return 0
}

type UpdateStoryboardResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId int64 `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	BoardId int64 `protobuf:"varint,2,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
}

func (x *UpdateStoryboardResponse_Data) Reset() {
	*x = UpdateStoryboardResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoryboardResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoryboardResponse_Data) ProtoMessage() {}

func (x *UpdateStoryboardResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoryboardResponse_Data.ProtoReflect.Descriptor instead.
func (*UpdateStoryboardResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{29, 0}
}

func (x *UpdateStoryboardResponse_Data) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *UpdateStoryboardResponse_Data) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

type WatchStoryResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId int64 `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
}

func (x *WatchStoryResponse_Data) Reset() {
	*x = WatchStoryResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchStoryResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchStoryResponse_Data) ProtoMessage() {}

func (x *WatchStoryResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchStoryResponse_Data.ProtoReflect.Descriptor instead.
func (*WatchStoryResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{31, 0}
}

func (x *WatchStoryResponse_Data) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

type LikeStoryboardResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId int64 `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	BoardId int64 `protobuf:"varint,2,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId  int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	LikeNum int64 `protobuf:"varint,4,opt,name=like_num,json=likeNum,proto3" json:"like_num,omitempty"`
}

func (x *LikeStoryboardResponse_Data) Reset() {
	*x = LikeStoryboardResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeStoryboardResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeStoryboardResponse_Data) ProtoMessage() {}

func (x *LikeStoryboardResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeStoryboardResponse_Data.ProtoReflect.Descriptor instead.
func (*LikeStoryboardResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{33, 0}
}

func (x *LikeStoryboardResponse_Data) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *LikeStoryboardResponse_Data) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *LikeStoryboardResponse_Data) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LikeStoryboardResponse_Data) GetLikeNum() int64 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

type ShareStoryboardResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryId  int64 `protobuf:"varint,1,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	BoardId  int64 `protobuf:"varint,2,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	UserId   int64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ShareNum int64 `protobuf:"varint,4,opt,name=share_num,json=shareNum,proto3" json:"share_num,omitempty"`
}

func (x *ShareStoryboardResponse_Data) Reset() {
	*x = ShareStoryboardResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareStoryboardResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareStoryboardResponse_Data) ProtoMessage() {}

func (x *ShareStoryboardResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareStoryboardResponse_Data.ProtoReflect.Descriptor instead.
func (*ShareStoryboardResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{37, 0}
}

func (x *ShareStoryboardResponse_Data) GetStoryId() int64 {
	if x != nil {
		return x.StoryId
	}
	return 0
}

func (x *ShareStoryboardResponse_Data) GetBoardId() int64 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *ShareStoryboardResponse_Data) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ShareStoryboardResponse_Data) GetShareNum() int64 {
	if x != nil {
		return x.ShareNum
	}
	return 0
}

type FetchGroupStorysResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*Story    `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Creator []*UserInfo `protobuf:"bytes,3,rep,name=creator,proto3" json:"creator,omitempty"`
}

func (x *FetchGroupStorysResponse_Data) Reset() {
	*x = FetchGroupStorysResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchGroupStorysResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGroupStorysResponse_Data) ProtoMessage() {}

func (x *FetchGroupStorysResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGroupStorysResponse_Data.ProtoReflect.Descriptor instead.
func (*FetchGroupStorysResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{58, 0}
}

func (x *FetchGroupStorysResponse_Data) GetList() []*Story {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FetchGroupStorysResponse_Data) GetCreator() []*UserInfo {
	if x != nil {
		return x.Creator
	}
	return nil
}

type GetStoryRenderResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*RenderStoryDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetStoryRenderResponse_Data) Reset() {
	*x = GetStoryRenderResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryRenderResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryRenderResponse_Data) ProtoMessage() {}

func (x *GetStoryRenderResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryRenderResponse_Data.ProtoReflect.Descriptor instead.
func (*GetStoryRenderResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{60, 0}
}

func (x *GetStoryRenderResponse_Data) GetList() []*RenderStoryDetail {
	if x != nil {
		return x.List
	}
	return nil
}

type GetStoryBoardRenderResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*RenderStoryboardDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetStoryBoardRenderResponse_Data) Reset() {
	*x = GetStoryBoardRenderResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardRenderResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardRenderResponse_Data) ProtoMessage() {}

func (x *GetStoryBoardRenderResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardRenderResponse_Data.ProtoReflect.Descriptor instead.
func (*GetStoryBoardRenderResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{62, 0}
}

func (x *GetStoryBoardRenderResponse_Data) GetList() []*RenderStoryboardDetail {
	if x != nil {
		return x.List
	}
	return nil
}

type GetStoryRolesResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*StoryRole `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Creator []*UserInfo  `protobuf:"bytes,3,rep,name=creator,proto3" json:"creator,omitempty"`
}

func (x *GetStoryRolesResponse_Data) Reset() {
	*x = GetStoryRolesResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryRolesResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryRolesResponse_Data) ProtoMessage() {}

func (x *GetStoryRolesResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryRolesResponse_Data.ProtoReflect.Descriptor instead.
func (*GetStoryRolesResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{72, 0}
}

func (x *GetStoryRolesResponse_Data) GetList() []*StoryRole {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetStoryRolesResponse_Data) GetCreator() []*UserInfo {
	if x != nil {
		return x.Creator
	}
	return nil
}

type GetStoryBoardRolesResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List    []*StoryRole `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Creator []*UserInfo  `protobuf:"bytes,3,rep,name=creator,proto3" json:"creator,omitempty"`
}

func (x *GetStoryBoardRolesResponse_Data) Reset() {
	*x = GetStoryBoardRolesResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardRolesResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardRolesResponse_Data) ProtoMessage() {}

func (x *GetStoryBoardRolesResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardRolesResponse_Data.ProtoReflect.Descriptor instead.
func (*GetStoryBoardRolesResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{74, 0}
}

func (x *GetStoryBoardRolesResponse_Data) GetList() []*StoryRole {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetStoryBoardRolesResponse_Data) GetCreator() []*UserInfo {
	if x != nil {
		return x.Creator
	}
	return nil
}

type GetStoryBoardSencesResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*StoryBoardSence `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetStoryBoardSencesResponse_Data) Reset() {
	*x = GetStoryBoardSencesResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoryBoardSencesResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoryBoardSencesResponse_Data) ProtoMessage() {}

func (x *GetStoryBoardSencesResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoryBoardSencesResponse_Data.ProtoReflect.Descriptor instead.
func (*GetStoryBoardSencesResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{77, 0}
}

func (x *GetStoryBoardSencesResponse_Data) GetList() []*StoryBoardSence {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateStoryBoardSenceResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenceId int64 `protobuf:"varint,1,opt,name=sence_id,json=senceId,proto3" json:"sence_id,omitempty"`
}

func (x *CreateStoryBoardSenceResponse_Data) Reset() {
	*x = CreateStoryBoardSenceResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_story_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoryBoardSenceResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoryBoardSenceResponse_Data) ProtoMessage() {}

func (x *CreateStoryBoardSenceResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_story_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoryBoardSenceResponse_Data.ProtoReflect.Descriptor instead.
func (*CreateStoryBoardSenceResponse_Data) Descriptor() ([]byte, []int) {
	return file_story_proto_rawDescGZIP(), []int{79, 0}
}

func (x *CreateStoryBoardSenceResponse_Data) GetSenceId() int64 {
	if x != nil {
		return x.SenceId
	}
	return 0
}

var File_story_proto protoreflect.FileDescriptor

var file_story_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x07,
	0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x76, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07,
	0x76, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41,
	0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x69, 0x5f, 0x67, 0x65, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x69, 0x47, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x6f,
	0x6f, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x2b, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x6c, 0x69, 0x6b,
	0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x12, 0x4d, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x68, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xc9, 0x02, 0x0a,
	0x0b, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x66,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x66, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x69, 0x63,
	0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x69, 0x63, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x69,
	0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x72, 0x65, 0x66, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x8a, 0x05, 0x0a, 0x0a, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x72, 0x65,
	0x76, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x61, 0x69, 0x5f, 0x67, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x41, 0x69, 0x47, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x64, 0x12,
	0x30, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x2d, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x68, 0x61,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x55, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x89, 0x03, 0x0a,
	0x0f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f,
	0x6e, 0x67, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x47, 0x6f, 0x61, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x67,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0xf8, 0x06, 0x0a, 0x09, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x42, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x66, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x66, 0x6f, 0x6c, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x66, 0x6f, 0x6c, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x4d,
	0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x68, 0x61, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x8d, 0x05, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x4e, 0x75, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x75, 0x6d, 0x53, 0x74,
	0x65, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4e, 0x75, 0x6d, 0x53, 0x74,
	0x65, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x65, 0x66, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x52, 0x65, 0x66, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6f, 0x6d,
	0x69, 0x63, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x69, 0x63,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x65, 0x67, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4e,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x75, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x47, 0x75, 0x69, 0x64,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x20, 0x0a,
	0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x34, 0x0a, 0x15, 0x53, 0x65, 0x6c, 0x66, 0x33, 0x32, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15,
	0x53, 0x65, 0x6c, 0x66, 0x33, 0x32, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x53, 0x65, 0x6c, 0x66, 0x36, 0x34, 0x41,
	0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x53, 0x65, 0x6c, 0x66, 0x36, 0x34, 0x41, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x53,
	0x65, 0x6c, 0x66, 0x31, 0x32, 0x38, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x53, 0x65, 0x6c,
	0x66, 0x31, 0x32, 0x38, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x8e, 0x03,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x61, 0x69, 0x5f, 0x67, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x41, 0x69, 0x47, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0xb7,
	0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3c, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0xaa, 0x02, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61,
	0x69, 0x5f, 0x67, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41,
	0x69, 0x47, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x21, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x55, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x2a, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x43, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x22, 0xa6, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x21, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x6b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a,
	0x0a, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x09, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x22, 0xb6, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69,
	0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0x6d, 0x0a, 0x14, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x6f, 0x6c, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x6d, 0x0a, 0x14, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xa8, 0x04, 0x0a, 0x10, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x32,
	0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6b, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x32, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x32, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0xd9, 0x04, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x6f, 0x72,
	0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xa9, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0xa7, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x65, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x15, 0x46,
	0x6f, 0x72, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x72, 0x65,
	0x76, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x83, 0x02, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x6b, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x81, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76,
	0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x70, 0x72, 0x65, 0x76, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x3c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x47, 0x0a,
	0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x21, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x15, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x16,
	0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6b, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x70, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x22,
	0x68, 0x0a, 0x17, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x18, 0x55, 0x6e, 0x4c,
	0x69, 0x6b, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x67, 0x0a, 0x16, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0xf5, 0x01, 0x0a,
	0x17, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x72, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x4e, 0x75, 0x6d, 0x22, 0xbd, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x0b, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x6e, 0x75, 0x6d, 0x73, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xa1, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x50, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x11, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x73, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x22, 0x49, 0x0a, 0x18, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x31, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0x51, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x96, 0x01, 0x0a, 0x09, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65,
	0x52, 0x15, 0xe6, 0x95, 0x85, 0xe4, 0xba, 0x8b, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0xe5, 0x92,
	0x8c, 0xe4, 0xb8, 0xbb, 0xe9, 0xa2, 0x98, 0x12, 0x39, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0xe6, 0x95, 0x85, 0xe4, 0xba, 0x8b, 0xe7, 0xab, 0xa0, 0xe8,
	0x8a, 0x82, 0x22, 0x6f, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x41,
	0x6e, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0xe6, 0x95, 0x85, 0xe4, 0xba, 0x8b, 0xe5, 0x90, 0x8d,
	0xe7, 0xa7, 0xb0, 0x12, 0x1b, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0xe6, 0x95, 0x85, 0xe4, 0xba, 0x8b, 0xe4, 0xb8, 0xbb, 0xe9, 0xa2, 0x98,
	0x12, 0x21, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0xe6, 0x95, 0x85, 0xe4, 0xba, 0x8b, 0xe7, 0xae, 0x80,
	0xe4, 0xbb, 0x8b, 0x22, 0x5f, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0xe7, 0xab, 0xa0, 0xe8, 0x8a, 0x82, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0xe7, 0xab, 0xa0, 0xe8, 0x8a, 0x82, 0xe9,
	0xa2, 0x98, 0xe7, 0x9b, 0xae, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0xe7, 0xab, 0xa0, 0xe8, 0x8a, 0x82, 0xe5, 0x86,
	0x85, 0xe5, 0xae, 0xb9, 0x22, 0x9e, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x72, 0x0a, 0x13, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc2, 0x01, 0x0a, 0x17, 0x52, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x52,
	0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa6,
	0x02, 0x0a, 0x16, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x63, 0x6f, 0x73, 0x74, 0x22, 0x7c, 0x0a, 0x18, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x0b, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x22, 0x7d, 0x0a, 0x19, 0x47, 0x65, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x9e, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x52, 0x65, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x22, 0x7f, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x17, 0x46, 0x65, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x18, 0x46, 0x65, 0x74, 0x63, 0x68, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x55, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x35, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7d,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc5, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3a, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc2, 0x02, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x65, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0b,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x27, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x1b, 0x43, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcb, 0x01, 0x0a, 0x17,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x29,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x6f, 0x0a, 0x18, 0x52, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x1c, 0x52,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x74, 0x0a, 0x1d,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0x58, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xd8, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x59, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x4f, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe2, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x59, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x22, 0x89, 0x04, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x73, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x65, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x50,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xbe, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x33, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x66, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x1d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x21, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x52, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6d, 0x0a, 0x1c, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a,
	0x1d, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63,
	0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x52, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x53, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x2a, 0xeb, 0x02,
	0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01, 0x12,
	0x1c, 0x0a, 0x18, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a,
	0x19, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47,
	0x45, 0x5f, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d,
	0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45,
	0x5f, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x43, 0x45, 0x4e, 0x45, 0x10, 0x04, 0x12,
	0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x05, 0x12,
	0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x06, 0x12,
	0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x07, 0x12,
	0x1d, 0x0a, 0x19, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x08, 0x12, 0x1b,
	0x0a, 0x17, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x41,
	0x47, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f,
	0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x0a, 0x2a, 0x80, 0x02, 0x0a, 0x0a,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45,
	0x4e, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b,
	0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52,
	0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x1a, 0x0a,
	0x16, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f,
	0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x45, 0x4e,
	0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x53, 0x45,
	0x4e, 0x43, 0x45, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x43, 0x48, 0x41, 0x52, 0x41, 0x43,
	0x54, 0x45, 0x52, 0x53, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10,
	0x06, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x2a, 0x93,
	0x05, 0x0a, 0x19, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x28,
	0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2b, 0x0a, 0x27, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x65, 0x12, 0x2a, 0x0a, 0x26, 0x53, 0x54, 0x4f, 0x52, 0x59,
	0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x66, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x41,
	0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x67, 0x12, 0x33, 0x0a, 0x2e,
	0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x53, 0x10, 0xc9,
	0x01, 0x12, 0x32, 0x0a, 0x2d, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44,
	0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x47,
	0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54,
	0x45, 0x44, 0x10, 0xca, 0x01, 0x12, 0x2f, 0x0a, 0x2a, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x42,
	0x4f, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x53, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0xcb, 0x01, 0x12, 0x32, 0x0a, 0x2d, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f,
	0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0xad, 0x02, 0x12, 0x31, 0x0a, 0x2c, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x4f,
	0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0xae, 0x02, 0x12, 0x2e, 0x0a,
	0x29, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x55,
	0x44, 0x49, 0x4f, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xaf, 0x02, 0x12, 0x32, 0x0a,
	0x2d, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e,
	0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x45,
	0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x91,
	0x03, 0x12, 0x31, 0x0a, 0x2c, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x41, 0x52, 0x44,
	0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x47,
	0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x92, 0x03, 0x12, 0x2e, 0x0a, 0x29, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x4f,
	0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53,
	0x54, 0x41, 0x47, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x93, 0x03, 0x42, 0x76, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x42, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61,
	0x70, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xca, 0x02, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xe2, 0x02,
	0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_story_proto_rawDescOnce sync.Once
	file_story_proto_rawDescData = file_story_proto_rawDesc
)

func file_story_proto_rawDescGZIP() []byte {
	file_story_proto_rawDescOnce.Do(func() {
		file_story_proto_rawDescData = protoimpl.X.CompressGZIP(file_story_proto_rawDescData)
	})
	return file_story_proto_rawDescData
}

var file_story_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_story_proto_msgTypes = make([]protoimpl.MessageInfo, 111)
var file_story_proto_goTypes = []interface{}{
	(StoryboardStage)(0),                       // 0: common.StoryboardStage
	(RenderType)(0),                            // 1: common.RenderType
	(StoryBoardGeneratingStage)(0),             // 2: common.StoryBoardGeneratingStage
	(*Story)(nil),                              // 3: common.Story
	(*StoryParams)(nil),                        // 4: common.StoryParams
	(*StoryBoard)(nil),                         // 5: common.StoryBoard
	(*StoryBoardSences)(nil),                   // 6: common.StoryBoardSences
	(*CharacterDetail)(nil),                    // 7: common.CharacterDetail
	(*StoryRole)(nil),                          // 8: common.StoryRole
	(*StoryBoardParams)(nil),                   // 9: common.StoryBoardParams
	(*TimeLine)(nil),                           // 10: common.TimeLine
	(*CreateStoryRequest)(nil),                 // 11: common.CreateStoryRequest
	(*CreateStoryResponse)(nil),                // 12: common.CreateStoryResponse
	(*UpdateStoryRequest)(nil),                 // 13: common.UpdateStoryRequest
	(*UpdateStoryResponse)(nil),                // 14: common.UpdateStoryResponse
	(*GetStoryInfoRequest)(nil),                // 15: common.GetStoryInfoRequest
	(*GetStoryInfoResponse)(nil),               // 16: common.GetStoryInfoResponse
	(*CreateStoryboardRequest)(nil),            // 17: common.CreateStoryboardRequest
	(*CreateStoryboardResponse)(nil),           // 18: common.CreateStoryboardResponse
	(*GetStoryboardRequest)(nil),               // 19: common.GetStoryboardRequest
	(*GetStoryboardResponse)(nil),              // 20: common.GetStoryboardResponse
	(*GetStoryboardsRequest)(nil),              // 21: common.GetStoryboardsRequest
	(*StoryBoardActiveRole)(nil),               // 22: common.StoryBoardActiveRole
	(*StoryBoardActiveUser)(nil),               // 23: common.StoryBoardActiveUser
	(*StoryBoardActive)(nil),                   // 24: common.StoryBoardActive
	(*StorySummaryInfo)(nil),                   // 25: common.StorySummaryInfo
	(*GetStoryboardsResponse)(nil),             // 26: common.GetStoryboardsResponse
	(*DelStoryboardRequest)(nil),               // 27: common.DelStoryboardRequest
	(*DelStoryboardResponse)(nil),              // 28: common.DelStoryboardResponse
	(*ForkStoryboardRequest)(nil),              // 29: common.ForkStoryboardRequest
	(*ForkStoryboardResponse)(nil),             // 30: common.ForkStoryboardResponse
	(*UpdateStoryboardRequest)(nil),            // 31: common.UpdateStoryboardRequest
	(*UpdateStoryboardResponse)(nil),           // 32: common.UpdateStoryboardResponse
	(*WatchStoryRequest)(nil),                  // 33: common.WatchStoryRequest
	(*WatchStoryResponse)(nil),                 // 34: common.WatchStoryResponse
	(*LikeStoryboardRequest)(nil),              // 35: common.LikeStoryboardRequest
	(*LikeStoryboardResponse)(nil),             // 36: common.LikeStoryboardResponse
	(*UnLikeStoryboardRequest)(nil),            // 37: common.UnLikeStoryboardRequest
	(*UnLikeStoryboardResponse)(nil),           // 38: common.UnLikeStoryboardResponse
	(*ShareStoryboardRequest)(nil),             // 39: common.ShareStoryboardRequest
	(*ShareStoryboardResponse)(nil),            // 40: common.ShareStoryboardResponse
	(*RenderStoryRequest)(nil),                 // 41: common.RenderStoryRequest
	(*RenderStoryStructureValue)(nil),          // 42: common.RenderStoryStructureValue
	(*StoryChapter)(nil),                       // 43: common.StoryChapter
	(*ChapterSummary)(nil),                     // 44: common.ChapterSummary
	(*ChapterDetailInformation)(nil),           // 45: common.ChapterDetailInformation
	(*DetailScene)(nil),                        // 46: common.DetailScene
	(*Character)(nil),                          // 47: common.Character
	(*StoryInfo)(nil),                          // 48: common.StoryInfo
	(*StoryNameAndTheme)(nil),                  // 49: common.StoryNameAndTheme
	(*ChapterInfo)(nil),                        // 50: common.ChapterInfo
	(*RenderStoryDetail)(nil),                  // 51: common.RenderStoryDetail
	(*RenderStoryResponse)(nil),                // 52: common.RenderStoryResponse
	(*RenderStoryboardRequest)(nil),            // 53: common.RenderStoryboardRequest
	(*RenderStoryboardDetail)(nil),             // 54: common.RenderStoryboardDetail
	(*RenderStoryboardResponse)(nil),           // 55: common.RenderStoryboardResponse
	(*GenStoryboardTextRequest)(nil),           // 56: common.GenStoryboardTextRequest
	(*GenStoryboardTextResponse)(nil),          // 57: common.GenStoryboardTextResponse
	(*GenStoryboardImagesRequest)(nil),         // 58: common.GenStoryboardImagesRequest
	(*GenStoryboardImagesResponse)(nil),        // 59: common.GenStoryboardImagesResponse
	(*FetchGroupStorysRequest)(nil),            // 60: common.FetchGroupStorysRequest
	(*FetchGroupStorysResponse)(nil),           // 61: common.FetchGroupStorysResponse
	(*GetStoryRenderRequest)(nil),              // 62: common.GetStoryRenderRequest
	(*GetStoryRenderResponse)(nil),             // 63: common.GetStoryRenderResponse
	(*GetStoryBoardRenderRequest)(nil),         // 64: common.GetStoryBoardRenderRequest
	(*GetStoryBoardRenderResponse)(nil),        // 65: common.GetStoryBoardRenderResponse
	(*ContinueRenderStoryRequest)(nil),         // 66: common.ContinueRenderStoryRequest
	(*ContinueRenderStoryResponse)(nil),        // 67: common.ContinueRenderStoryResponse
	(*RenderStoryRolesRequest)(nil),            // 68: common.RenderStoryRolesRequest
	(*RenderStoryRolesResponse)(nil),           // 69: common.RenderStoryRolesResponse
	(*RenderStoryRoleDetailRequest)(nil),       // 70: common.RenderStoryRoleDetailRequest
	(*RenderStoryRoleDetailResponse)(nil),      // 71: common.RenderStoryRoleDetailResponse
	(*UpdateStoryRoleRequest)(nil),             // 72: common.UpdateStoryRoleRequest
	(*UpdateStoryRoleResponse)(nil),            // 73: common.UpdateStoryRoleResponse
	(*GetStoryRolesRequest)(nil),               // 74: common.GetStoryRolesRequest
	(*GetStoryRolesResponse)(nil),              // 75: common.GetStoryRolesResponse
	(*GetStoryBoardRolesRequest)(nil),          // 76: common.GetStoryBoardRolesRequest
	(*GetStoryBoardRolesResponse)(nil),         // 77: common.GetStoryBoardRolesResponse
	(*StoryBoardSence)(nil),                    // 78: common.StoryBoardSence
	(*GetStoryBoardSencesRequest)(nil),         // 79: common.GetStoryBoardSencesRequest
	(*GetStoryBoardSencesResponse)(nil),        // 80: common.GetStoryBoardSencesResponse
	(*CreateStoryBoardSenceRequest)(nil),       // 81: common.CreateStoryBoardSenceRequest
	(*CreateStoryBoardSenceResponse)(nil),      // 82: common.CreateStoryBoardSenceResponse
	(*UpdateStoryBoardSenceRequest)(nil),       // 83: common.UpdateStoryBoardSenceRequest
	(*UpdateStoryBoardSenceResponse)(nil),      // 84: common.UpdateStoryBoardSenceResponse
	(*DeleteStoryBoardSenceRequest)(nil),       // 85: common.DeleteStoryBoardSenceRequest
	(*DeleteStoryBoardSenceResponse)(nil),      // 86: common.DeleteStoryBoardSenceResponse
	(*RenderStoryBoardSenceRequest)(nil),       // 87: common.RenderStoryBoardSenceRequest
	(*RenderStoryBoardSenceResponse)(nil),      // 88: common.RenderStoryBoardSenceResponse
	(*RenderStoryBoardSencesRequest)(nil),      // 89: common.RenderStoryBoardSencesRequest
	(*RenderStoryBoardSencesResponse)(nil),     // 90: common.RenderStoryBoardSencesResponse
	(*GetStoryBoardSenceGenerateRequest)(nil),  // 91: common.GetStoryBoardSenceGenerateRequest
	(*GetStoryBoardSenceGenerateResponse)(nil), // 92: common.GetStoryBoardSenceGenerateResponse
	(*GetStoryBoardGenerateRequest)(nil),       // 93: common.GetStoryBoardGenerateRequest
	(*GetStoryBoardGenerateResponse)(nil),      // 94: common.GetStoryBoardGenerateResponse
	(*CreateStoryResponse_Data)(nil),           // 95: common.CreateStoryResponse.Data
	(*UpdateStoryResponse_Data)(nil),           // 96: common.UpdateStoryResponse.Data
	(*GetStoryInfoResponse_Data)(nil),          // 97: common.GetStoryInfoResponse.Data
	(*CreateStoryboardResponse_Data)(nil),      // 98: common.CreateStoryboardResponse.Data
	(*GetStoryboardResponse_Data)(nil),         // 99: common.GetStoryboardResponse.Data
	(*GetStoryboardsResponse_Data)(nil),        // 100: common.GetStoryboardsResponse.Data
	(*ForkStoryboardResponse_Data)(nil),        // 101: common.ForkStoryboardResponse.Data
	(*UpdateStoryboardResponse_Data)(nil),      // 102: common.UpdateStoryboardResponse.Data
	(*WatchStoryResponse_Data)(nil),            // 103: common.WatchStoryResponse.Data
	(*LikeStoryboardResponse_Data)(nil),        // 104: common.LikeStoryboardResponse.Data
	(*ShareStoryboardResponse_Data)(nil),       // 105: common.ShareStoryboardResponse.Data
	nil,                                        // 106: common.RenderStoryStructureValue.ExtraEntry
	(*FetchGroupStorysResponse_Data)(nil),      // 107: common.FetchGroupStorysResponse.Data
	(*GetStoryRenderResponse_Data)(nil),        // 108: common.GetStoryRenderResponse.Data
	(*GetStoryBoardRenderResponse_Data)(nil),   // 109: common.GetStoryBoardRenderResponse.Data
	(*GetStoryRolesResponse_Data)(nil),         // 110: common.GetStoryRolesResponse.Data
	(*GetStoryBoardRolesResponse_Data)(nil),    // 111: common.GetStoryBoardRolesResponse.Data
	(*GetStoryBoardSencesResponse_Data)(nil),   // 112: common.GetStoryBoardSencesResponse.Data
	(*CreateStoryBoardSenceResponse_Data)(nil), // 113: common.CreateStoryBoardSenceResponse.Data
	(*Tags)(nil),                               // 114: common.Tags
	(ScopeType)(0),                             // 115: common.ScopeType
	(*WhatCurrentUserStatus)(nil),              // 116: common.WhatCurrentUserStatus
	(*UserInfo)(nil),                           // 117: common.UserInfo
	(MultiBranchOrderBy)(0),                    // 118: common.MultiBranchOrderBy
}
var file_story_proto_depIdxs = []int32{
	114, // 0: common.Story.tags:type_name -> common.Tags
	115, // 1: common.Story.visable:type_name -> common.ScopeType
	4,   // 2: common.Story.params:type_name -> common.StoryParams
	116, // 3: common.Story.current_user_status:type_name -> common.WhatCurrentUserStatus
	8,   // 4: common.StoryBoard.roles:type_name -> common.StoryRole
	9,   // 5: common.StoryBoard.params:type_name -> common.StoryBoardParams
	6,   // 6: common.StoryBoard.sences:type_name -> common.StoryBoardSences
	0,   // 7: common.StoryBoard.stage:type_name -> common.StoryboardStage
	116, // 8: common.StoryBoard.current_user_status:type_name -> common.WhatCurrentUserStatus
	78,  // 9: common.StoryBoardSences.list:type_name -> common.StoryBoardSence
	7,   // 10: common.StoryRole.character_detail:type_name -> common.CharacterDetail
	116, // 11: common.StoryRole.current_user_status:type_name -> common.WhatCurrentUserStatus
	117, // 12: common.StoryRole.creator:type_name -> common.UserInfo
	4,   // 13: common.CreateStoryRequest.params:type_name -> common.StoryParams
	8,   // 14: common.CreateStoryRequest.roles:type_name -> common.StoryRole
	95,  // 15: common.CreateStoryResponse.data:type_name -> common.CreateStoryResponse.Data
	4,   // 16: common.UpdateStoryRequest.params:type_name -> common.StoryParams
	8,   // 17: common.UpdateStoryRequest.roles:type_name -> common.StoryRole
	96,  // 18: common.UpdateStoryResponse.data:type_name -> common.UpdateStoryResponse.Data
	97,  // 19: common.GetStoryInfoResponse.data:type_name -> common.GetStoryInfoResponse.Data
	5,   // 20: common.CreateStoryboardRequest.board:type_name -> common.StoryBoard
	98,  // 21: common.CreateStoryboardResponse.data:type_name -> common.CreateStoryboardResponse.Data
	99,  // 22: common.GetStoryboardResponse.data:type_name -> common.GetStoryboardResponse.Data
	118, // 23: common.GetStoryboardsRequest.order_by:type_name -> common.MultiBranchOrderBy
	5,   // 24: common.StoryBoardActive.storyboard:type_name -> common.StoryBoard
	23,  // 25: common.StoryBoardActive.users:type_name -> common.StoryBoardActiveUser
	22,  // 26: common.StoryBoardActive.roles:type_name -> common.StoryBoardActiveRole
	23,  // 27: common.StoryBoardActive.creator:type_name -> common.StoryBoardActiveUser
	25,  // 28: common.StoryBoardActive.summary:type_name -> common.StorySummaryInfo
	100, // 29: common.GetStoryboardsResponse.data:type_name -> common.GetStoryboardsResponse.Data
	5,   // 30: common.ForkStoryboardRequest.board:type_name -> common.StoryBoard
	101, // 31: common.ForkStoryboardResponse.data:type_name -> common.ForkStoryboardResponse.Data
	9,   // 32: common.UpdateStoryboardRequest.params:type_name -> common.StoryBoardParams
	102, // 33: common.UpdateStoryboardResponse.data:type_name -> common.UpdateStoryboardResponse.Data
	103, // 34: common.WatchStoryResponse.data:type_name -> common.WatchStoryResponse.Data
	104, // 35: common.LikeStoryboardResponse.data:type_name -> common.LikeStoryboardResponse.Data
	105, // 36: common.ShareStoryboardResponse.data:type_name -> common.ShareStoryboardResponse.Data
	1,   // 37: common.RenderStoryRequest.render_type:type_name -> common.RenderType
	106, // 38: common.RenderStoryStructureValue.extra:type_name -> common.RenderStoryStructureValue.ExtraEntry
	44,  // 39: common.StoryChapter.chapter_summary:type_name -> common.ChapterSummary
	45,  // 40: common.StoryChapter.chapter_detail_info:type_name -> common.ChapterDetailInformation
	47,  // 41: common.ChapterSummary.characters:type_name -> common.Character
	46,  // 42: common.ChapterDetailInformation.details:type_name -> common.DetailScene
	47,  // 43: common.DetailScene.characters:type_name -> common.Character
	49,  // 44: common.StoryInfo.story_name_and_theme:type_name -> common.StoryNameAndTheme
	50,  // 45: common.StoryInfo.story_chapters:type_name -> common.ChapterInfo
	1,   // 46: common.RenderStoryDetail.render_type:type_name -> common.RenderType
	48,  // 47: common.RenderStoryDetail.result:type_name -> common.StoryInfo
	51,  // 48: common.RenderStoryResponse.data:type_name -> common.RenderStoryDetail
	1,   // 49: common.RenderStoryboardRequest.render_type:type_name -> common.RenderType
	1,   // 50: common.RenderStoryboardDetail.render_type:type_name -> common.RenderType
	43,  // 51: common.RenderStoryboardDetail.result:type_name -> common.StoryChapter
	54,  // 52: common.RenderStoryboardResponse.data:type_name -> common.RenderStoryboardDetail
	1,   // 53: common.GenStoryboardTextRequest.render_type:type_name -> common.RenderType
	54,  // 54: common.GenStoryboardTextResponse.data:type_name -> common.RenderStoryboardDetail
	1,   // 55: common.GenStoryboardImagesRequest.render_type:type_name -> common.RenderType
	54,  // 56: common.GenStoryboardImagesResponse.data:type_name -> common.RenderStoryboardDetail
	107, // 57: common.FetchGroupStorysResponse.data:type_name -> common.FetchGroupStorysResponse.Data
	108, // 58: common.GetStoryRenderResponse.data:type_name -> common.GetStoryRenderResponse.Data
	109, // 59: common.GetStoryBoardRenderResponse.data:type_name -> common.GetStoryBoardRenderResponse.Data
	1,   // 60: common.ContinueRenderStoryRequest.render_type:type_name -> common.RenderType
	8,   // 61: common.ContinueRenderStoryRequest.roles:type_name -> common.StoryRole
	54,  // 62: common.ContinueRenderStoryResponse.data:type_name -> common.RenderStoryboardDetail
	8,   // 63: common.RenderStoryRolesRequest.params:type_name -> common.StoryRole
	8,   // 64: common.RenderStoryRolesResponse.list:type_name -> common.StoryRole
	8,   // 65: common.RenderStoryRoleDetailRequest.role:type_name -> common.StoryRole
	8,   // 66: common.RenderStoryRoleDetailResponse.role:type_name -> common.StoryRole
	8,   // 67: common.UpdateStoryRoleRequest.role:type_name -> common.StoryRole
	110, // 68: common.GetStoryRolesResponse.data:type_name -> common.GetStoryRolesResponse.Data
	111, // 69: common.GetStoryBoardRolesResponse.data:type_name -> common.GetStoryBoardRolesResponse.Data
	112, // 70: common.GetStoryBoardSencesResponse.data:type_name -> common.GetStoryBoardSencesResponse.Data
	78,  // 71: common.CreateStoryBoardSenceRequest.sence:type_name -> common.StoryBoardSence
	113, // 72: common.CreateStoryBoardSenceResponse.data:type_name -> common.CreateStoryBoardSenceResponse.Data
	78,  // 73: common.UpdateStoryBoardSenceRequest.sence:type_name -> common.StoryBoardSence
	78,  // 74: common.RenderStoryBoardSenceResponse.data:type_name -> common.StoryBoardSence
	78,  // 75: common.RenderStoryBoardSencesResponse.list:type_name -> common.StoryBoardSence
	78,  // 76: common.GetStoryBoardSenceGenerateResponse.data:type_name -> common.StoryBoardSence
	78,  // 77: common.GetStoryBoardGenerateResponse.list:type_name -> common.StoryBoardSence
	3,   // 78: common.GetStoryInfoResponse.Data.info:type_name -> common.Story
	117, // 79: common.GetStoryInfoResponse.Data.creator:type_name -> common.UserInfo
	24,  // 80: common.GetStoryboardResponse.Data.board_info:type_name -> common.StoryBoardActive
	117, // 81: common.GetStoryboardResponse.Data.creator:type_name -> common.UserInfo
	24,  // 82: common.GetStoryboardsResponse.Data.list:type_name -> common.StoryBoardActive
	3,   // 83: common.FetchGroupStorysResponse.Data.list:type_name -> common.Story
	117, // 84: common.FetchGroupStorysResponse.Data.creator:type_name -> common.UserInfo
	51,  // 85: common.GetStoryRenderResponse.Data.list:type_name -> common.RenderStoryDetail
	54,  // 86: common.GetStoryBoardRenderResponse.Data.list:type_name -> common.RenderStoryboardDetail
	8,   // 87: common.GetStoryRolesResponse.Data.list:type_name -> common.StoryRole
	117, // 88: common.GetStoryRolesResponse.Data.creator:type_name -> common.UserInfo
	8,   // 89: common.GetStoryBoardRolesResponse.Data.list:type_name -> common.StoryRole
	117, // 90: common.GetStoryBoardRolesResponse.Data.creator:type_name -> common.UserInfo
	78,  // 91: common.GetStoryBoardSencesResponse.Data.list:type_name -> common.StoryBoardSence
	92,  // [92:92] is the sub-list for method output_type
	92,  // [92:92] is the sub-list for method input_type
	92,  // [92:92] is the sub-list for extension type_name
	92,  // [92:92] is the sub-list for extension extendee
	0,   // [0:92] is the sub-list for field type_name
}

func init() { file_story_proto_init() }
func file_story_proto_init() {
	if File_story_proto != nil {
		return
	}
	file_base_proto_init()
	file_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_story_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Story); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryBoardSences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryBoardParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoryboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoryboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryboardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryBoardActiveRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryBoardActiveUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryBoardActive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorySummaryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryboardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelStoryboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelStoryboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkStoryboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkStoryboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoryboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoryboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchStoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeStoryboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeStoryboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLikeStoryboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnLikeStoryboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareStoryboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareStoryboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryStructureValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryChapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterDetailInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryNameAndTheme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryboardDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenStoryboardTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenStoryboardTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenStoryboardImagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenStoryboardImagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchGroupStorysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchGroupStorysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryRenderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryRenderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardRenderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardRenderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinueRenderStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinueRenderStoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryRoleDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryRoleDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoryRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoryRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryBoardSence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardSencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardSencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoryBoardSenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoryBoardSenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoryBoardSenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoryBoardSenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStoryBoardSenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStoryBoardSenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryBoardSenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryBoardSenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryBoardSencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenderStoryBoardSencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardSenceGenerateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardSenceGenerateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardGenerateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardGenerateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryInfoResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoryboardResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryboardResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryboardsResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForkStoryboardResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoryboardResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchStoryResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeStoryboardResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareStoryboardResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchGroupStorysResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryRenderResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardRenderResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryRolesResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardRolesResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoryBoardSencesResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_story_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoryBoardSenceResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_story_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   111,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_story_proto_goTypes,
		DependencyIndexes: file_story_proto_depIdxs,
		EnumInfos:         file_story_proto_enumTypes,
		MessageInfos:      file_story_proto_msgTypes,
	}.Build()
	File_story_proto = out.File
	file_story_proto_rawDesc = nil
	file_story_proto_goTypes = nil
	file_story_proto_depIdxs = nil
}
