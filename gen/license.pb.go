// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: license.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LicenseStatus int32

const (
	LicenseStatus_IsNormal  LicenseStatus = 0
	LicenseStatus_IsAbandon LicenseStatus = 1
	LicenseStatus_Expired   LicenseStatus = 2
	LicenseStatus_Disabled  LicenseStatus = 3
	LicenseStatus_Deleted   LicenseStatus = 4
	LicenseStatus_Unknown   LicenseStatus = 5
)

// Enum value maps for LicenseStatus.
var (
	LicenseStatus_name = map[int32]string{
		0: "IsNormal",
		1: "IsAbandon",
		2: "Expired",
		3: "Disabled",
		4: "Deleted",
		5: "Unknown",
	}
	LicenseStatus_value = map[string]int32{
		"IsNormal":  0,
		"IsAbandon": 1,
		"Expired":   2,
		"Disabled":  3,
		"Deleted":   4,
		"Unknown":   5,
	}
)

func (x LicenseStatus) Enum() *LicenseStatus {
	p := new(LicenseStatus)
	*p = x
	return p
}

func (x LicenseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LicenseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_license_proto_enumTypes[0].Descriptor()
}

func (LicenseStatus) Type() protoreflect.EnumType {
	return &file_license_proto_enumTypes[0]
}

func (x LicenseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LicenseStatus.Descriptor instead.
func (LicenseStatus) EnumDescriptor() ([]byte, []int) {
	return file_license_proto_rawDescGZIP(), []int{0}
}

type LicenseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LicenseId int32         `protobuf:"varint,1,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	License   string        `protobuf:"bytes,2,opt,name=license,proto3" json:"license,omitempty"`
	Name      string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email     string        `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Url       string        `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Desc      string        `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Avatar    string        `protobuf:"bytes,7,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Status    LicenseStatus `protobuf:"varint,8,opt,name=status,proto3,enum=common.LicenseStatus" json:"status,omitempty"`
	Creator   int64         `protobuf:"varint,9,opt,name=creator,proto3" json:"creator,omitempty"`
	Ctime     int64         `protobuf:"varint,18,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime     int64         `protobuf:"varint,19,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *LicenseInfo) Reset() {
	*x = LicenseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_license_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseInfo) ProtoMessage() {}

func (x *LicenseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_license_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseInfo.ProtoReflect.Descriptor instead.
func (*LicenseInfo) Descriptor() ([]byte, []int) {
	return file_license_proto_rawDescGZIP(), []int{0}
}

func (x *LicenseInfo) GetLicenseId() int32 {
	if x != nil {
		return x.LicenseId
	}
	return 0
}

func (x *LicenseInfo) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *LicenseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LicenseInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LicenseInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *LicenseInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *LicenseInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *LicenseInfo) GetStatus() LicenseStatus {
	if x != nil {
		return x.Status
	}
	return LicenseStatus_IsNormal
}

func (x *LicenseInfo) GetCreator() int64 {
	if x != nil {
		return x.Creator
	}
	return 0
}

func (x *LicenseInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *LicenseInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type LicenseUseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LicenseId int32         `protobuf:"varint,1,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	ProjectId int64         `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Status    LicenseStatus `protobuf:"varint,3,opt,name=status,proto3,enum=common.LicenseStatus" json:"status,omitempty"`
	Ctime     int64         `protobuf:"varint,4,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime     int64         `protobuf:"varint,5,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *LicenseUseStatus) Reset() {
	*x = LicenseUseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_license_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseUseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseUseStatus) ProtoMessage() {}

func (x *LicenseUseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_license_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseUseStatus.ProtoReflect.Descriptor instead.
func (*LicenseUseStatus) Descriptor() ([]byte, []int) {
	return file_license_proto_rawDescGZIP(), []int{1}
}

func (x *LicenseUseStatus) GetLicenseId() int32 {
	if x != nil {
		return x.LicenseId
	}
	return 0
}

func (x *LicenseUseStatus) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *LicenseUseStatus) GetStatus() LicenseStatus {
	if x != nil {
		return x.Status
	}
	return LicenseStatus_IsNormal
}

func (x *LicenseUseStatus) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *LicenseUseStatus) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

var File_license_proto protoreflect.FileDescriptor

var file_license_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x02, 0x0a, 0x0b, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x10, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x2a, 0x61, 0x0a, 0x0d, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x73, 0x4e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x73, 0x41, 0x62, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x10, 0x03,
	0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x05, 0x42, 0x78, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x0c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0xa2, 0x02,
	0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xca, 0x02, 0x06,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xe2, 0x02, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_license_proto_rawDescOnce sync.Once
	file_license_proto_rawDescData = file_license_proto_rawDesc
)

func file_license_proto_rawDescGZIP() []byte {
	file_license_proto_rawDescOnce.Do(func() {
		file_license_proto_rawDescData = protoimpl.X.CompressGZIP(file_license_proto_rawDescData)
	})
	return file_license_proto_rawDescData
}

var file_license_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_license_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_license_proto_goTypes = []interface{}{
	(LicenseStatus)(0),       // 0: common.LicenseStatus
	(*LicenseInfo)(nil),      // 1: common.LicenseInfo
	(*LicenseUseStatus)(nil), // 2: common.LicenseUseStatus
}
var file_license_proto_depIdxs = []int32{
	0, // 0: common.LicenseInfo.status:type_name -> common.LicenseStatus
	0, // 1: common.LicenseUseStatus.status:type_name -> common.LicenseStatus
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_license_proto_init() }
func file_license_proto_init() {
	if File_license_proto != nil {
		return
	}
	file_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_license_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_license_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseUseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_license_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_license_proto_goTypes,
		DependencyIndexes: file_license_proto_depIdxs,
		EnumInfos:         file_license_proto_enumTypes,
		MessageInfos:      file_license_proto_msgTypes,
	}.Build()
	File_license_proto = out.File
	file_license_proto_rawDesc = nil
	file_license_proto_goTypes = nil
	file_license_proto_depIdxs = nil
}
