// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: base.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LikeType int32

const (
	LikeType_Browser LikeType = 0
	LikeType_Left    LikeType = 1
	LikeType_Middle  LikeType = 2
	LikeType_Right   LikeType = 3
)

// Enum value maps for LikeType.
var (
	LikeType_name = map[int32]string{
		0: "Browser",
		1: "Left",
		2: "Middle",
		3: "Right",
	}
	LikeType_value = map[string]int32{
		"Browser": 0,
		"Left":    1,
		"Middle":  2,
		"Right":   3,
	}
)

func (x LikeType) Enum() *LikeType {
	p := new(LikeType)
	*p = x
	return p
}

func (x LikeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LikeType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[0].Descriptor()
}

func (LikeType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[0]
}

func (x LikeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LikeType.Descriptor instead.
func (LikeType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{0}
}

type GenderType int32

const (
	// 不公开性别
	GenderType_None   GenderType = 0
	GenderType_Man    GenderType = 1
	GenderType_Women  GenderType = 2
	GenderType_Double GenderType = 3
)

// Enum value maps for GenderType.
var (
	GenderType_name = map[int32]string{
		0: "None",
		1: "Man",
		2: "Women",
		3: "Double",
	}
	GenderType_value = map[string]int32{
		"None":   0,
		"Man":    1,
		"Women":  2,
		"Double": 3,
	}
)

func (x GenderType) Enum() *GenderType {
	p := new(GenderType)
	*p = x
	return p
}

func (x GenderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenderType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[1].Descriptor()
}

func (GenderType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[1]
}

func (x GenderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenderType.Descriptor instead.
func (GenderType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{1}
}

type UserStatus int32

const (
	UserStatus_Rest      UserStatus = 0
	UserStatus_Study     UserStatus = 1
	UserStatus_Busy      UserStatus = 2
	UserStatus_Working   UserStatus = 3
	UserStatus_Invisible UserStatus = 4
	UserStatus_Idle      UserStatus = 5
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "Rest",
		1: "Study",
		2: "Busy",
		3: "Working",
		4: "Invisible",
		5: "Idle",
	}
	UserStatus_value = map[string]int32{
		"Rest":      0,
		"Study":     1,
		"Busy":      2,
		"Working":   3,
		"Invisible": 4,
		"Idle":      5,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[2].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[2]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{2}
}

type GroupStatus int32

const (
	GroupStatus_NotReady GroupStatus = 0
	GroupStatus_Normal   GroupStatus = 1
	GroupStatus_ViewOnly GroupStatus = 2
	GroupStatus_Abandon  GroupStatus = 3
)

// Enum value maps for GroupStatus.
var (
	GroupStatus_name = map[int32]string{
		0: "NotReady",
		1: "Normal",
		2: "ViewOnly",
		3: "Abandon",
	}
	GroupStatus_value = map[string]int32{
		"NotReady": 0,
		"Normal":   1,
		"ViewOnly": 2,
		"Abandon":  3,
	}
)

func (x GroupStatus) Enum() *GroupStatus {
	p := new(GroupStatus)
	*p = x
	return p
}

func (x GroupStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[3].Descriptor()
}

func (GroupStatus) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[3]
}

func (x GroupStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupStatus.Descriptor instead.
func (GroupStatus) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{3}
}

type ActiveType int32

const (
	ActiveType_AllActive ActiveType = 0
	ActiveType_Like      ActiveType = 1
	ActiveType_Share     ActiveType = 2
	ActiveType_Comment   ActiveType = 3
	ActiveType_Collect   ActiveType = 4
	ActiveType_DisAgree  ActiveType = 5
)

// Enum value maps for ActiveType.
var (
	ActiveType_name = map[int32]string{
		0: "AllActive",
		1: "Like",
		2: "Share",
		3: "Comment",
		4: "Collect",
		5: "DisAgree",
	}
	ActiveType_value = map[string]int32{
		"AllActive": 0,
		"Like":      1,
		"Share":     2,
		"Comment":   3,
		"Collect":   4,
		"DisAgree":  5,
	}
)

func (x ActiveType) Enum() *ActiveType {
	p := new(ActiveType)
	*p = x
	return p
}

func (x ActiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[4].Descriptor()
}

func (ActiveType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[4]
}

func (x ActiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActiveType.Descriptor instead.
func (ActiveType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{4}
}

type ItemType int32

const (
	ItemType_AllItem   ItemType = 0
	ItemType_ShortWord ItemType = 1
	ItemType_Paper     ItemType = 2
	ItemType_Picture   ItemType = 3
	ItemType_Video     ItemType = 4
	ItemType_Music     ItemType = 5
	ItemType_Link      ItemType = 6
	ItemType_Location  ItemType = 7
)

// Enum value maps for ItemType.
var (
	ItemType_name = map[int32]string{
		0: "AllItem",
		1: "ShortWord",
		2: "Paper",
		3: "Picture",
		4: "Video",
		5: "Music",
		6: "Link",
		7: "Location",
	}
	ItemType_value = map[string]int32{
		"AllItem":   0,
		"ShortWord": 1,
		"Paper":     2,
		"Picture":   3,
		"Video":     4,
		"Music":     5,
		"Link":      6,
		"Location":  7,
	}
)

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}

func (x ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[5].Descriptor()
}

func (ItemType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[5]
}

func (x ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemType.Descriptor instead.
func (ItemType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{5}
}

type AuthType int32

const (
	AuthType_NotSupport AuthType = 0
	AuthType_WithPhone  AuthType = 1
	AuthType_WithEmail  AuthType = 2
)

// Enum value maps for AuthType.
var (
	AuthType_name = map[int32]string{
		0: "NotSupport",
		1: "WithPhone",
		2: "WithEmail",
	}
	AuthType_value = map[string]int32{
		"NotSupport": 0,
		"WithPhone":  1,
		"WithEmail":  2,
	}
)

func (x AuthType) Enum() *AuthType {
	p := new(AuthType)
	*p = x
	return p
}

func (x AuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[6].Descriptor()
}

func (AuthType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[6]
}

func (x AuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthType.Descriptor instead.
func (AuthType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{6}
}

type ScopeType int32

const (
	ScopeType_AllPublic  ScopeType = 0
	ScopeType_Public     ScopeType = 1
	ScopeType_Private    ScopeType = 2
	ScopeType_Someone    ScopeType = 3
	ScopeType_GruopScope ScopeType = 4
)

// Enum value maps for ScopeType.
var (
	ScopeType_name = map[int32]string{
		0: "AllPublic",
		1: "Public",
		2: "Private",
		3: "Someone",
		4: "GruopScope",
	}
	ScopeType_value = map[string]int32{
		"AllPublic":  0,
		"Public":     1,
		"Private":    2,
		"Someone":    3,
		"GruopScope": 4,
	}
)

func (x ScopeType) Enum() *ScopeType {
	p := new(ScopeType)
	*p = x
	return p
}

func (x ScopeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScopeType) Descriptor() protoreflect.EnumDescriptor {
	return file_base_proto_enumTypes[7].Descriptor()
}

func (ScopeType) Type() protoreflect.EnumType {
	return &file_base_proto_enumTypes[7]
}

func (x ScopeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScopeType.Descriptor instead.
func (ScopeType) EnumDescriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{7}
}

type Tags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   int32  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	CreatorId int32  `protobuf:"varint,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status    int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	IsGlobal  int32  `protobuf:"varint,5,opt,name=is_global,json=isGlobal,proto3" json:"is_global,omitempty"`
	Id        int32  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	Ctime     int64  `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime     int64  `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *Tags) Reset() {
	*x = Tags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tags) ProtoMessage() {}

func (x *Tags) ProtoReflect() protoreflect.Message {
	mi := &file_base_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tags.ProtoReflect.Descriptor instead.
func (*Tags) Descriptor() ([]byte, []int) {
	return file_base_proto_rawDescGZIP(), []int{0}
}

func (x *Tags) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Tags) GetCreatorId() int32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *Tags) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tags) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Tags) GetIsGlobal() int32 {
	if x != nil {
		return x.IsGlobal
	}
	return 0
}

func (x *Tags) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tags) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *Tags) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

var File_base_proto protoreflect.FileDescriptor

var file_base_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xc5, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x2a, 0x38, 0x0a, 0x08,
	0x4c, 0x69, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x65, 0x66, 0x74, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x10, 0x03, 0x2a, 0x36, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x4d, 0x61, 0x6e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x6f, 0x6d, 0x65, 0x6e,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x10, 0x03, 0x2a, 0x51,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04,
	0x52, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x74, 0x75, 0x64, 0x79, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x64, 0x6c, 0x65, 0x10,
	0x05, 0x2a, 0x42, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x69,
	0x65, 0x77, 0x4f, 0x6e, 0x6c, 0x79, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x62, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x10, 0x03, 0x2a, 0x58, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x41, 0x67, 0x72, 0x65, 0x65, 0x10, 0x05, 0x2a,
	0x6c, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x41,
	0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x57, 0x6f, 0x72, 0x64, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x06, 0x12,
	0x0c, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x2a, 0x38, 0x0a,
	0x08, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x69, 0x74,
	0x68, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x10, 0x02, 0x2a, 0x50, 0x0a, 0x09, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x6f, 0x6d, 0x65, 0x6f, 0x6e, 0x65, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x72, 0x75,
	0x6f, 0x70, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x10, 0x04, 0x42, 0x75, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x09, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x67, 0x72, 0x61, 0x70, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58,
	0xaa, 0x02, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xca, 0x02, 0x06, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0xe2, 0x02, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_base_proto_rawDescOnce sync.Once
	file_base_proto_rawDescData = file_base_proto_rawDesc
)

func file_base_proto_rawDescGZIP() []byte {
	file_base_proto_rawDescOnce.Do(func() {
		file_base_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_proto_rawDescData)
	})
	return file_base_proto_rawDescData
}

var file_base_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_base_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_base_proto_goTypes = []interface{}{
	(LikeType)(0),    // 0: common.LikeType
	(GenderType)(0),  // 1: common.GenderType
	(UserStatus)(0),  // 2: common.UserStatus
	(GroupStatus)(0), // 3: common.GroupStatus
	(ActiveType)(0),  // 4: common.ActiveType
	(ItemType)(0),    // 5: common.ItemType
	(AuthType)(0),    // 6: common.AuthType
	(ScopeType)(0),   // 7: common.ScopeType
	(*Tags)(nil),     // 8: common.Tags
}
var file_base_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_base_proto_init() }
func file_base_proto_init() {
	if File_base_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_base_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_base_proto_goTypes,
		DependencyIndexes: file_base_proto_depIdxs,
		EnumInfos:         file_base_proto_enumTypes,
		MessageInfos:      file_base_proto_msgTypes,
	}.Build()
	File_base_proto = out.File
	file_base_proto_rawDesc = nil
	file_base_proto_goTypes = nil
	file_base_proto_depIdxs = nil
}
