// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: error.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用响应状态码
type ResponseCode int32

const (
	// 成功 (0)
	ResponseCode_OK ResponseCode = 0 // 请求成功
	// 系统级错误 (1-99)
	ResponseCode_SYSTEM_ERROR         ResponseCode = 1  // 系统错误
	ResponseCode_INTERNAL_ERROR       ResponseCode = 2  // 内部错误
	ResponseCode_DATABASE_ERROR       ResponseCode = 3  // 数据库错误
	ResponseCode_CACHE_ERROR          ResponseCode = 4  // 缓存错误
	ResponseCode_NETWORK_ERROR        ResponseCode = 5  // 网络错误
	ResponseCode_TIMEOUT_ERROR        ResponseCode = 6  // 超时错误
	ResponseCode_SERVICE_UNAVAILABLE  ResponseCode = 7  // 服务不可用
	ResponseCode_TOO_MANY_REQUESTS    ResponseCode = 8  // 请求过于频繁
	ResponseCode_CONFIGURATION_ERROR  ResponseCode = 9  // 配置错误
	ResponseCode_INITIALIZATION_ERROR ResponseCode = 10 // 初始化错误
	// 认证和授权错误 (100-199)
	ResponseCode_UNAUTHORIZED        ResponseCode = 100 // 未授权
	ResponseCode_TOKEN_EXPIRED       ResponseCode = 101 // Token过期
	ResponseCode_TOKEN_INVALID       ResponseCode = 102 // Token无效
	ResponseCode_PERMISSION_DENIED   ResponseCode = 103 // 权限不足
	ResponseCode_ACCOUNT_NOT_FOUND   ResponseCode = 104 // 账号不存在
	ResponseCode_WRONG_PASSWORD      ResponseCode = 105 // 密码错误
	ResponseCode_ACCOUNT_DISABLED    ResponseCode = 106 // 账号已禁用
	ResponseCode_LOGIN_REQUIRED      ResponseCode = 107 // 需要登���
	ResponseCode_TOKEN_MISSING       ResponseCode = 108 // Token缺失
	ResponseCode_SESSION_EXPIRED     ResponseCode = 109 // 会话过期
	ResponseCode_INVALID_CREDENTIALS ResponseCode = 110 // 无效的凭证
	ResponseCode_ACCOUNT_LOCKED      ResponseCode = 111 // 账号已锁定
	ResponseCode_ACCOUNT_EXPIRED     ResponseCode = 112 // 账号已过期
	ResponseCode_INVALID_LOGIN_TYPE  ResponseCode = 113 // 无效的登录类型
	// 参数验证错误 (200-299)
	ResponseCode_INVALID_PARAMETER ResponseCode = 200 // 无效的参数
	ResponseCode_MISSING_PARAMETER ResponseCode = 201 // 缺少参数
	ResponseCode_INVALID_FORMAT    ResponseCode = 202 // 格式错误
	ResponseCode_INVALID_LENGTH    ResponseCode = 203 // 长度错误
	ResponseCode_INVALID_VALUE     ResponseCode = 204 // 值错误
	ResponseCode_INVALID_TYPE      ResponseCode = 205 // 类型错误
	ResponseCode_INVALID_SYNTAX    ResponseCode = 206 // 语法错误
	ResponseCode_INVALID_ENCODING  ResponseCode = 207 // 编码错误
	ResponseCode_INVALID_OPERATION ResponseCode = 208 // 无效的操作
	ResponseCode_VALIDATION_FAILED ResponseCode = 209 // 验证失败
	// 资源错误 (300-399)
	ResponseCode_RESOURCE_NOT_FOUND      ResponseCode = 300 // 资源不存在
	ResponseCode_RESOURCE_ALREADY_EXISTS ResponseCode = 301 // 资源已存在
	ResponseCode_RESOURCE_EXPIRED        ResponseCode = 302 // 资源已过期
	ResponseCode_RESOURCE_EXHAUSTED      ResponseCode = 303 // 资源耗尽
	ResponseCode_RESOURCE_BUSY           ResponseCode = 304 // 资源忙碌
	ResponseCode_RESOURCE_LOCKED         ResponseCode = 305 // 资源已锁定
	ResponseCode_RESOURCE_UNAVAILABLE    ResponseCode = 306 // 资源不可用
	ResponseCode_RESOURCE_QUOTA_EXCEEDED ResponseCode = 307 // 资源配额超限
	ResponseCode_RESOURCE_CORRUPTED      ResponseCode = 308 // 资源已损坏
	// 用户相关错误 (400-499)
	ResponseCode_USER_NOT_FOUND           ResponseCode = 400 // 用户不存在
	ResponseCode_USER_ALREADY_EXISTS      ResponseCode = 401 // 用户已存在
	ResponseCode_USER_NOT_ACTIVE          ResponseCode = 402 // 用户未激活
	ResponseCode_USER_BLOCKED             ResponseCode = 403 // 用户已封禁
	ResponseCode_USER_PROFILE_INCOMPLETE  ResponseCode = 404 // 用户资料不完整
	ResponseCode_USER_OPERATION_DENIED    ResponseCode = 405 // 用户操作被拒绝
	ResponseCode_USER_QUOTA_EXCEEDED      ResponseCode = 406 // 用户配额超限
	ResponseCode_USER_STATUS_ERROR        ResponseCode = 407 // 用户状态错误
	ResponseCode_USER_VERIFICATION_FAILED ResponseCode = 408 // 用户验证失败
	ResponseCode_USER_ROLE_INVALID        ResponseCode = 409 // 用户角色无效
	// 组织相关错误 (500-599)
	ResponseCode_GROUP_NOT_FOUND         ResponseCode = 500 // 组织不存在
	ResponseCode_GROUP_ALREADY_EXISTS    ResponseCode = 501 // 组织已存在
	ResponseCode_NOT_GROUP_MEMBER        ResponseCode = 502 // 非组织成员
	ResponseCode_GROUP_PERMISSION_DENIED ResponseCode = 503 // 组织权限不足
	ResponseCode_GROUP_FULL              ResponseCode = 504 // 组织人数已满
	ResponseCode_GROUP_CLOSED            ResponseCode = 505 // 组织已关闭
	ResponseCode_GROUP_OPERATION_DENIED  ResponseCode = 506 // 组织操作被拒绝
	ResponseCode_GROUP_STATUS_ERROR      ResponseCode = 507 // 组织状态错误
	ResponseCode_GROUP_TYPE_INVALID      ResponseCode = 508 // 组织类型无效
	ResponseCode_GROUP_QUOTA_EXCEEDED    ResponseCode = 509 // 组织配额超限
	// 项目相关错误 (600-699)
	ResponseCode_PROJECT_NOT_FOUND         ResponseCode = 600 // 项目不存在
	ResponseCode_PROJECT_ALREADY_EXISTS    ResponseCode = 601 // 项目已存在
	ResponseCode_PROJECT_PERMISSION_DENIED ResponseCode = 602 // 项目权限不足
	ResponseCode_PROJECT_CLOSED            ResponseCode = 603 // 项目已关闭
	ResponseCode_PROJECT_ARCHIVED          ResponseCode = 604 // 项目已归档
	ResponseCode_PROJECT_FULL              ResponseCode = 605 // 项目已满
	ResponseCode_PROJECT_STATUS_ERROR      ResponseCode = 606 // 项目状态错误
	ResponseCode_PROJECT_TYPE_INVALID      ResponseCode = 607 // 项目类型无效
	ResponseCode_PROJECT_OPERATION_DENIED  ResponseCode = 608 // 项目操作被拒绝
	ResponseCode_PROJECT_QUOTA_EXCEEDED    ResponseCode = 609 // 项目配额超限
	// 故事相关错误 (700-799)
	ResponseCode_STORY_NOT_FOUND         ResponseCode = 700 // 故事不存在
	ResponseCode_STORY_ALREADY_EXISTS    ResponseCode = 701 // 故事已存在
	ResponseCode_STORY_PERMISSION_DENIED ResponseCode = 702 // 故事权限不足
	ResponseCode_STORY_LOCKED            ResponseCode = 703 // 故事已锁定
	ResponseCode_STORY_ARCHIVED          ResponseCode = 704 // 故事已归档
	ResponseCode_STORY_STATUS_ERROR      ResponseCode = 705 // 故事状态错误
	ResponseCode_STORY_VERSION_ERROR     ResponseCode = 706 // 故事版本错误
	ResponseCode_STORY_CONTENT_ERROR     ResponseCode = 707 // 故事内容错误
	ResponseCode_STORY_OPERATION_DENIED  ResponseCode = 708 // 故事操作被拒绝
	ResponseCode_STORY_GENERATION_FAILED ResponseCode = 709 // 故事生成失败
	// 故事板相关错误 (800-899)
	ResponseCode_STORYBOARD_NOT_FOUND         ResponseCode = 800 // 故事板不存在
	ResponseCode_STORYBOARD_ALREADY_EXISTS    ResponseCode = 801 // 故事板已存在
	ResponseCode_STORYBOARD_PERMISSION_DENIED ResponseCode = 802 // 故事板权限不足
	ResponseCode_STORYBOARD_RENDER_ERROR      ResponseCode = 803 // 故事板渲染错误
	ResponseCode_STORYBOARD_LOCKED            ResponseCode = 804 // 故事板已锁定
	ResponseCode_STORYBOARD_STATUS_ERROR      ResponseCode = 805 // 故事板状态错误
	ResponseCode_STORYBOARD_VERSION_ERROR     ResponseCode = 806 // 故事板版本错误
	ResponseCode_STORYBOARD_SCENE_ERROR       ResponseCode = 807 // 故���板场景错误
	ResponseCode_STORYBOARD_GENERATION_FAILED ResponseCode = 808 // 故事板生成失败
	ResponseCode_STORYBOARD_OPERATION_DENIED  ResponseCode = 809 // 故事板操作被拒绝
	// 角色相关错误 (900-999)
	ResponseCode_ROLE_NOT_FOUND         ResponseCode = 900 // 角色不存在
	ResponseCode_ROLE_ALREADY_EXISTS    ResponseCode = 901 // 角色已存在
	ResponseCode_ROLE_PERMISSION_DENIED ResponseCode = 902 // 角色权限不足
	ResponseCode_ROLE_RENDER_ERROR      ResponseCode = 903 // 角色渲染错误
	ResponseCode_ROLE_LOCKED            ResponseCode = 904 // 角色已锁定
	ResponseCode_ROLE_STATUS_ERROR      ResponseCode = 905 // 角色状态错误
	ResponseCode_ROLE_TYPE_INVALID      ResponseCode = 906 // 角色类型无效
	ResponseCode_ROLE_QUOTA_EXCEEDED    ResponseCode = 907 // 角色配额超限
	ResponseCode_ROLE_GENERATION_FAILED ResponseCode = 908 // 角色生成失败
	ResponseCode_ROLE_OPERATION_DENIED  ResponseCode = 909 // 角色操作被拒绝
	// 内容相关错误 (1000-1099)
	ResponseCode_CONTENT_NOT_FOUND         ResponseCode = 1000 // 内容不存在
	ResponseCode_CONTENT_ALREADY_EXISTS    ResponseCode = 1001 // 内容已存在
	ResponseCode_CONTENT_PERMISSION_DENIED ResponseCode = 1002 // 内容权限不足
	ResponseCode_CONTENT_TYPE_INVALID      ResponseCode = 1003 // 内容类型无效
	ResponseCode_CONTENT_SIZE_EXCEEDED     ResponseCode = 1004 // 内容大小超限
	ResponseCode_CONTENT_FORMAT_ERROR      ResponseCode = 1005 // 内容格式错误
	ResponseCode_CONTENT_LOCKED            ResponseCode = 1006 // 内容已锁定
	ResponseCode_CONTENT_EXPIRED           ResponseCode = 1007 // 内容已过期
	ResponseCode_CONTENT_CORRUPTED         ResponseCode = 1008 // 内容已损坏
	ResponseCode_CONTENT_OPERATION_DENIED  ResponseCode = 1009 // 内容操作被拒绝
	// 操作相关错误 (1100-1199)
	ResponseCode_OPERATION_FAILED        ResponseCode = 1100 // 操作失败
	ResponseCode_OPERATION_TIMEOUT       ResponseCode = 1101 // 操作超时
	ResponseCode_OPERATION_CANCELLED     ResponseCode = 1102 // 操作已取消
	ResponseCode_OPERATION_NOT_SUPPORTED ResponseCode = 1103 // 操作不支持
	ResponseCode_OPERATION_IN_PROGRESS   ResponseCode = 1104 // 操作进行中
	ResponseCode_OPERATION_ABORTED       ResponseCode = 1105 // 操作已中止
	ResponseCode_OPERATION_REJECTED      ResponseCode = 1106 // 操作被拒绝
	ResponseCode_OPERATION_INVALID       ResponseCode = 1107 // 操作无效
	ResponseCode_OPERATION_CONFLICT      ResponseCode = 1108 // 操作冲突
	ResponseCode_OPERATION_TOO_FREQUENT  ResponseCode = 1109 // 操作过于频繁
	// 限制相关错误 (1200-1299)
	ResponseCode_RATE_LIMIT_EXCEEDED       ResponseCode = 1200 // 速率限制超限
	ResponseCode_QUOTA_EXCEEDED            ResponseCode = 1201 // 配额超限
	ResponseCode_SIZE_LIMIT_EXCEEDED       ResponseCode = 1202 // 大小限制超限
	ResponseCode_TIME_LIMIT_EXCEEDED       ResponseCode = 1203 // 时间限制超限
	ResponseCode_FREQUENCY_LIMIT_EXCEEDED  ResponseCode = 1204 // 频率限制超限
	ResponseCode_CONCURRENT_LIMIT_EXCEEDED ResponseCode = 1205 // 并发限制超限
	ResponseCode_STORAGE_LIMIT_EXCEEDED    ResponseCode = 1206 // 存储限制超限
	ResponseCode_BANDWIDTH_LIMIT_EXCEEDED  ResponseCode = 1207 // 带宽限制超限
	ResponseCode_REQUEST_LIMIT_EXCEEDED    ResponseCode = 1208 // 请求限制超限
	ResponseCode_USER_LIMIT_EXCEEDED       ResponseCode = 1209 // 用户限制超限
	// AI生成相关错误 (1300-1399)
	ResponseCode_AI_GENERATION_FAILED   ResponseCode = 1300 // AI生成失败
	ResponseCode_AI_SERVICE_UNAVAILABLE ResponseCode = 1301 // AI服务不可用
	ResponseCode_AI_QUOTA_EXCEEDED      ResponseCode = 1302 // AI配额超限
	ResponseCode_AI_MODEL_ERROR         ResponseCode = 1303 // AI模型错误
	ResponseCode_AI_PARAMETER_ERROR     ResponseCode = 1304 // AI参数错误
	ResponseCode_AI_CONTENT_ERROR       ResponseCode = 1305 // AI内容错误
	ResponseCode_AI_TIMEOUT             ResponseCode = 1306 // AI处理超时
	ResponseCode_AI_RATE_LIMITED        ResponseCode = 1307 // AI速率受限
	ResponseCode_AI_CONTEXT_ERROR       ResponseCode = 1308 // AI上下文错误
	ResponseCode_AI_RESPONSE_ERROR      ResponseCode = 1309 // AI响应错误
	// 评论相关错误 (1400-1499)
	ResponseCode_COMMENT_NOT_FOUND         ResponseCode = 1400 // 评论不存在
	ResponseCode_COMMENT_ALREADY_EXISTS    ResponseCode = 1401 // 评论已存在
	ResponseCode_COMMENT_PERMISSION_DENIED ResponseCode = 1402 // 评论权限不足
	ResponseCode_COMMENT_LOCKED            ResponseCode = 1403 // 评论已锁定
	ResponseCode_COMMENT_STATUS_ERROR      ResponseCode = 1404 // 评论状态错误
	// 点赞相关错误 (1500-1599)
	ResponseCode_LIKE_NOT_FOUND         ResponseCode = 1500 // 点赞不存在
	ResponseCode_LIKE_ALREADY_EXISTS    ResponseCode = 1501 // 点赞已存在
	ResponseCode_LIKE_PERMISSION_DENIED ResponseCode = 1502 // 点赞权限不足
	ResponseCode_LIKE_LOCKED            ResponseCode = 1503 // 点赞已锁定
	ResponseCode_LIKE_STATUS_ERROR      ResponseCode = 1504 // 点赞状态错误
	// VIP\充值相关错误 (1600-1699)
	ResponseCode_VIP_NOT_FOUND         ResponseCode = 1600 // VIP不存在
	ResponseCode_VIP_ALREADY_EXISTS    ResponseCode = 1601 // VIP已存在
	ResponseCode_VIP_PERMISSION_DENIED ResponseCode = 1602 // VIP权限不足
	ResponseCode_VIP_LOCKED            ResponseCode = 1603 // VIP已锁定
	ResponseCode_VIP_STATUS_ERROR      ResponseCode = 1604 // VIP状态错误
	// 支付相关错误 (1700-1799)
	ResponseCode_PAYMENT_NOT_FOUND         ResponseCode = 1700 // 支付不存在
	ResponseCode_PAYMENT_ALREADY_EXISTS    ResponseCode = 1701 // 支付已存在
	ResponseCode_PAYMENT_PERMISSION_DENIED ResponseCode = 1702 // 支付权限不足
	ResponseCode_PAYMENT_LOCKED            ResponseCode = 1703 // 支付已锁定
	ResponseCode_PAYMENT_STATUS_ERROR      ResponseCode = 1704 // 支付状态错误
	// 订单相关错误 (1800-1899)
	ResponseCode_ORDER_NOT_FOUND         ResponseCode = 1800 // 订单不存在
	ResponseCode_ORDER_ALREADY_EXISTS    ResponseCode = 1801 // 订单已存在
	ResponseCode_ORDER_PERMISSION_DENIED ResponseCode = 1802 // 订单权限不足
	ResponseCode_ORDER_LOCKED            ResponseCode = 1803 // 订单已锁定
	ResponseCode_ORDER_STATUS_ERROR      ResponseCode = 1804 // 订单状态错误
	// 消息相关错误 (1900-1999)
	ResponseCode_MESSAGE_NOT_FOUND         ResponseCode = 1900 // 消息不存在
	ResponseCode_MESSAGE_ALREADY_EXISTS    ResponseCode = 1901 // 消息已存在
	ResponseCode_MESSAGE_PERMISSION_DENIED ResponseCode = 1902 // 消息权限不足
	ResponseCode_MESSAGE_LOCKED            ResponseCode = 1903 // 消息已锁定
	ResponseCode_MESSAGE_STATUS_ERROR      ResponseCode = 1904 // 消息状态错误
)

// Enum value maps for ResponseCode.
var (
	ResponseCode_name = map[int32]string{
		0:    "OK",
		1:    "SYSTEM_ERROR",
		2:    "INTERNAL_ERROR",
		3:    "DATABASE_ERROR",
		4:    "CACHE_ERROR",
		5:    "NETWORK_ERROR",
		6:    "TIMEOUT_ERROR",
		7:    "SERVICE_UNAVAILABLE",
		8:    "TOO_MANY_REQUESTS",
		9:    "CONFIGURATION_ERROR",
		10:   "INITIALIZATION_ERROR",
		100:  "UNAUTHORIZED",
		101:  "TOKEN_EXPIRED",
		102:  "TOKEN_INVALID",
		103:  "PERMISSION_DENIED",
		104:  "ACCOUNT_NOT_FOUND",
		105:  "WRONG_PASSWORD",
		106:  "ACCOUNT_DISABLED",
		107:  "LOGIN_REQUIRED",
		108:  "TOKEN_MISSING",
		109:  "SESSION_EXPIRED",
		110:  "INVALID_CREDENTIALS",
		111:  "ACCOUNT_LOCKED",
		112:  "ACCOUNT_EXPIRED",
		113:  "INVALID_LOGIN_TYPE",
		200:  "INVALID_PARAMETER",
		201:  "MISSING_PARAMETER",
		202:  "INVALID_FORMAT",
		203:  "INVALID_LENGTH",
		204:  "INVALID_VALUE",
		205:  "INVALID_TYPE",
		206:  "INVALID_SYNTAX",
		207:  "INVALID_ENCODING",
		208:  "INVALID_OPERATION",
		209:  "VALIDATION_FAILED",
		300:  "RESOURCE_NOT_FOUND",
		301:  "RESOURCE_ALREADY_EXISTS",
		302:  "RESOURCE_EXPIRED",
		303:  "RESOURCE_EXHAUSTED",
		304:  "RESOURCE_BUSY",
		305:  "RESOURCE_LOCKED",
		306:  "RESOURCE_UNAVAILABLE",
		307:  "RESOURCE_QUOTA_EXCEEDED",
		308:  "RESOURCE_CORRUPTED",
		400:  "USER_NOT_FOUND",
		401:  "USER_ALREADY_EXISTS",
		402:  "USER_NOT_ACTIVE",
		403:  "USER_BLOCKED",
		404:  "USER_PROFILE_INCOMPLETE",
		405:  "USER_OPERATION_DENIED",
		406:  "USER_QUOTA_EXCEEDED",
		407:  "USER_STATUS_ERROR",
		408:  "USER_VERIFICATION_FAILED",
		409:  "USER_ROLE_INVALID",
		500:  "GROUP_NOT_FOUND",
		501:  "GROUP_ALREADY_EXISTS",
		502:  "NOT_GROUP_MEMBER",
		503:  "GROUP_PERMISSION_DENIED",
		504:  "GROUP_FULL",
		505:  "GROUP_CLOSED",
		506:  "GROUP_OPERATION_DENIED",
		507:  "GROUP_STATUS_ERROR",
		508:  "GROUP_TYPE_INVALID",
		509:  "GROUP_QUOTA_EXCEEDED",
		600:  "PROJECT_NOT_FOUND",
		601:  "PROJECT_ALREADY_EXISTS",
		602:  "PROJECT_PERMISSION_DENIED",
		603:  "PROJECT_CLOSED",
		604:  "PROJECT_ARCHIVED",
		605:  "PROJECT_FULL",
		606:  "PROJECT_STATUS_ERROR",
		607:  "PROJECT_TYPE_INVALID",
		608:  "PROJECT_OPERATION_DENIED",
		609:  "PROJECT_QUOTA_EXCEEDED",
		700:  "STORY_NOT_FOUND",
		701:  "STORY_ALREADY_EXISTS",
		702:  "STORY_PERMISSION_DENIED",
		703:  "STORY_LOCKED",
		704:  "STORY_ARCHIVED",
		705:  "STORY_STATUS_ERROR",
		706:  "STORY_VERSION_ERROR",
		707:  "STORY_CONTENT_ERROR",
		708:  "STORY_OPERATION_DENIED",
		709:  "STORY_GENERATION_FAILED",
		800:  "STORYBOARD_NOT_FOUND",
		801:  "STORYBOARD_ALREADY_EXISTS",
		802:  "STORYBOARD_PERMISSION_DENIED",
		803:  "STORYBOARD_RENDER_ERROR",
		804:  "STORYBOARD_LOCKED",
		805:  "STORYBOARD_STATUS_ERROR",
		806:  "STORYBOARD_VERSION_ERROR",
		807:  "STORYBOARD_SCENE_ERROR",
		808:  "STORYBOARD_GENERATION_FAILED",
		809:  "STORYBOARD_OPERATION_DENIED",
		900:  "ROLE_NOT_FOUND",
		901:  "ROLE_ALREADY_EXISTS",
		902:  "ROLE_PERMISSION_DENIED",
		903:  "ROLE_RENDER_ERROR",
		904:  "ROLE_LOCKED",
		905:  "ROLE_STATUS_ERROR",
		906:  "ROLE_TYPE_INVALID",
		907:  "ROLE_QUOTA_EXCEEDED",
		908:  "ROLE_GENERATION_FAILED",
		909:  "ROLE_OPERATION_DENIED",
		1000: "CONTENT_NOT_FOUND",
		1001: "CONTENT_ALREADY_EXISTS",
		1002: "CONTENT_PERMISSION_DENIED",
		1003: "CONTENT_TYPE_INVALID",
		1004: "CONTENT_SIZE_EXCEEDED",
		1005: "CONTENT_FORMAT_ERROR",
		1006: "CONTENT_LOCKED",
		1007: "CONTENT_EXPIRED",
		1008: "CONTENT_CORRUPTED",
		1009: "CONTENT_OPERATION_DENIED",
		1100: "OPERATION_FAILED",
		1101: "OPERATION_TIMEOUT",
		1102: "OPERATION_CANCELLED",
		1103: "OPERATION_NOT_SUPPORTED",
		1104: "OPERATION_IN_PROGRESS",
		1105: "OPERATION_ABORTED",
		1106: "OPERATION_REJECTED",
		1107: "OPERATION_INVALID",
		1108: "OPERATION_CONFLICT",
		1109: "OPERATION_TOO_FREQUENT",
		1200: "RATE_LIMIT_EXCEEDED",
		1201: "QUOTA_EXCEEDED",
		1202: "SIZE_LIMIT_EXCEEDED",
		1203: "TIME_LIMIT_EXCEEDED",
		1204: "FREQUENCY_LIMIT_EXCEEDED",
		1205: "CONCURRENT_LIMIT_EXCEEDED",
		1206: "STORAGE_LIMIT_EXCEEDED",
		1207: "BANDWIDTH_LIMIT_EXCEEDED",
		1208: "REQUEST_LIMIT_EXCEEDED",
		1209: "USER_LIMIT_EXCEEDED",
		1300: "AI_GENERATION_FAILED",
		1301: "AI_SERVICE_UNAVAILABLE",
		1302: "AI_QUOTA_EXCEEDED",
		1303: "AI_MODEL_ERROR",
		1304: "AI_PARAMETER_ERROR",
		1305: "AI_CONTENT_ERROR",
		1306: "AI_TIMEOUT",
		1307: "AI_RATE_LIMITED",
		1308: "AI_CONTEXT_ERROR",
		1309: "AI_RESPONSE_ERROR",
		1400: "COMMENT_NOT_FOUND",
		1401: "COMMENT_ALREADY_EXISTS",
		1402: "COMMENT_PERMISSION_DENIED",
		1403: "COMMENT_LOCKED",
		1404: "COMMENT_STATUS_ERROR",
		1500: "LIKE_NOT_FOUND",
		1501: "LIKE_ALREADY_EXISTS",
		1502: "LIKE_PERMISSION_DENIED",
		1503: "LIKE_LOCKED",
		1504: "LIKE_STATUS_ERROR",
		1600: "VIP_NOT_FOUND",
		1601: "VIP_ALREADY_EXISTS",
		1602: "VIP_PERMISSION_DENIED",
		1603: "VIP_LOCKED",
		1604: "VIP_STATUS_ERROR",
		1700: "PAYMENT_NOT_FOUND",
		1701: "PAYMENT_ALREADY_EXISTS",
		1702: "PAYMENT_PERMISSION_DENIED",
		1703: "PAYMENT_LOCKED",
		1704: "PAYMENT_STATUS_ERROR",
		1800: "ORDER_NOT_FOUND",
		1801: "ORDER_ALREADY_EXISTS",
		1802: "ORDER_PERMISSION_DENIED",
		1803: "ORDER_LOCKED",
		1804: "ORDER_STATUS_ERROR",
		1900: "MESSAGE_NOT_FOUND",
		1901: "MESSAGE_ALREADY_EXISTS",
		1902: "MESSAGE_PERMISSION_DENIED",
		1903: "MESSAGE_LOCKED",
		1904: "MESSAGE_STATUS_ERROR",
	}
	ResponseCode_value = map[string]int32{
		"OK":                           0,
		"SYSTEM_ERROR":                 1,
		"INTERNAL_ERROR":               2,
		"DATABASE_ERROR":               3,
		"CACHE_ERROR":                  4,
		"NETWORK_ERROR":                5,
		"TIMEOUT_ERROR":                6,
		"SERVICE_UNAVAILABLE":          7,
		"TOO_MANY_REQUESTS":            8,
		"CONFIGURATION_ERROR":          9,
		"INITIALIZATION_ERROR":         10,
		"UNAUTHORIZED":                 100,
		"TOKEN_EXPIRED":                101,
		"TOKEN_INVALID":                102,
		"PERMISSION_DENIED":            103,
		"ACCOUNT_NOT_FOUND":            104,
		"WRONG_PASSWORD":               105,
		"ACCOUNT_DISABLED":             106,
		"LOGIN_REQUIRED":               107,
		"TOKEN_MISSING":                108,
		"SESSION_EXPIRED":              109,
		"INVALID_CREDENTIALS":          110,
		"ACCOUNT_LOCKED":               111,
		"ACCOUNT_EXPIRED":              112,
		"INVALID_LOGIN_TYPE":           113,
		"INVALID_PARAMETER":            200,
		"MISSING_PARAMETER":            201,
		"INVALID_FORMAT":               202,
		"INVALID_LENGTH":               203,
		"INVALID_VALUE":                204,
		"INVALID_TYPE":                 205,
		"INVALID_SYNTAX":               206,
		"INVALID_ENCODING":             207,
		"INVALID_OPERATION":            208,
		"VALIDATION_FAILED":            209,
		"RESOURCE_NOT_FOUND":           300,
		"RESOURCE_ALREADY_EXISTS":      301,
		"RESOURCE_EXPIRED":             302,
		"RESOURCE_EXHAUSTED":           303,
		"RESOURCE_BUSY":                304,
		"RESOURCE_LOCKED":              305,
		"RESOURCE_UNAVAILABLE":         306,
		"RESOURCE_QUOTA_EXCEEDED":      307,
		"RESOURCE_CORRUPTED":           308,
		"USER_NOT_FOUND":               400,
		"USER_ALREADY_EXISTS":          401,
		"USER_NOT_ACTIVE":              402,
		"USER_BLOCKED":                 403,
		"USER_PROFILE_INCOMPLETE":      404,
		"USER_OPERATION_DENIED":        405,
		"USER_QUOTA_EXCEEDED":          406,
		"USER_STATUS_ERROR":            407,
		"USER_VERIFICATION_FAILED":     408,
		"USER_ROLE_INVALID":            409,
		"GROUP_NOT_FOUND":              500,
		"GROUP_ALREADY_EXISTS":         501,
		"NOT_GROUP_MEMBER":             502,
		"GROUP_PERMISSION_DENIED":      503,
		"GROUP_FULL":                   504,
		"GROUP_CLOSED":                 505,
		"GROUP_OPERATION_DENIED":       506,
		"GROUP_STATUS_ERROR":           507,
		"GROUP_TYPE_INVALID":           508,
		"GROUP_QUOTA_EXCEEDED":         509,
		"PROJECT_NOT_FOUND":            600,
		"PROJECT_ALREADY_EXISTS":       601,
		"PROJECT_PERMISSION_DENIED":    602,
		"PROJECT_CLOSED":               603,
		"PROJECT_ARCHIVED":             604,
		"PROJECT_FULL":                 605,
		"PROJECT_STATUS_ERROR":         606,
		"PROJECT_TYPE_INVALID":         607,
		"PROJECT_OPERATION_DENIED":     608,
		"PROJECT_QUOTA_EXCEEDED":       609,
		"STORY_NOT_FOUND":              700,
		"STORY_ALREADY_EXISTS":         701,
		"STORY_PERMISSION_DENIED":      702,
		"STORY_LOCKED":                 703,
		"STORY_ARCHIVED":               704,
		"STORY_STATUS_ERROR":           705,
		"STORY_VERSION_ERROR":          706,
		"STORY_CONTENT_ERROR":          707,
		"STORY_OPERATION_DENIED":       708,
		"STORY_GENERATION_FAILED":      709,
		"STORYBOARD_NOT_FOUND":         800,
		"STORYBOARD_ALREADY_EXISTS":    801,
		"STORYBOARD_PERMISSION_DENIED": 802,
		"STORYBOARD_RENDER_ERROR":      803,
		"STORYBOARD_LOCKED":            804,
		"STORYBOARD_STATUS_ERROR":      805,
		"STORYBOARD_VERSION_ERROR":     806,
		"STORYBOARD_SCENE_ERROR":       807,
		"STORYBOARD_GENERATION_FAILED": 808,
		"STORYBOARD_OPERATION_DENIED":  809,
		"ROLE_NOT_FOUND":               900,
		"ROLE_ALREADY_EXISTS":          901,
		"ROLE_PERMISSION_DENIED":       902,
		"ROLE_RENDER_ERROR":            903,
		"ROLE_LOCKED":                  904,
		"ROLE_STATUS_ERROR":            905,
		"ROLE_TYPE_INVALID":            906,
		"ROLE_QUOTA_EXCEEDED":          907,
		"ROLE_GENERATION_FAILED":       908,
		"ROLE_OPERATION_DENIED":        909,
		"CONTENT_NOT_FOUND":            1000,
		"CONTENT_ALREADY_EXISTS":       1001,
		"CONTENT_PERMISSION_DENIED":    1002,
		"CONTENT_TYPE_INVALID":         1003,
		"CONTENT_SIZE_EXCEEDED":        1004,
		"CONTENT_FORMAT_ERROR":         1005,
		"CONTENT_LOCKED":               1006,
		"CONTENT_EXPIRED":              1007,
		"CONTENT_CORRUPTED":            1008,
		"CONTENT_OPERATION_DENIED":     1009,
		"OPERATION_FAILED":             1100,
		"OPERATION_TIMEOUT":            1101,
		"OPERATION_CANCELLED":          1102,
		"OPERATION_NOT_SUPPORTED":      1103,
		"OPERATION_IN_PROGRESS":        1104,
		"OPERATION_ABORTED":            1105,
		"OPERATION_REJECTED":           1106,
		"OPERATION_INVALID":            1107,
		"OPERATION_CONFLICT":           1108,
		"OPERATION_TOO_FREQUENT":       1109,
		"RATE_LIMIT_EXCEEDED":          1200,
		"QUOTA_EXCEEDED":               1201,
		"SIZE_LIMIT_EXCEEDED":          1202,
		"TIME_LIMIT_EXCEEDED":          1203,
		"FREQUENCY_LIMIT_EXCEEDED":     1204,
		"CONCURRENT_LIMIT_EXCEEDED":    1205,
		"STORAGE_LIMIT_EXCEEDED":       1206,
		"BANDWIDTH_LIMIT_EXCEEDED":     1207,
		"REQUEST_LIMIT_EXCEEDED":       1208,
		"USER_LIMIT_EXCEEDED":          1209,
		"AI_GENERATION_FAILED":         1300,
		"AI_SERVICE_UNAVAILABLE":       1301,
		"AI_QUOTA_EXCEEDED":            1302,
		"AI_MODEL_ERROR":               1303,
		"AI_PARAMETER_ERROR":           1304,
		"AI_CONTENT_ERROR":             1305,
		"AI_TIMEOUT":                   1306,
		"AI_RATE_LIMITED":              1307,
		"AI_CONTEXT_ERROR":             1308,
		"AI_RESPONSE_ERROR":            1309,
		"COMMENT_NOT_FOUND":            1400,
		"COMMENT_ALREADY_EXISTS":       1401,
		"COMMENT_PERMISSION_DENIED":    1402,
		"COMMENT_LOCKED":               1403,
		"COMMENT_STATUS_ERROR":         1404,
		"LIKE_NOT_FOUND":               1500,
		"LIKE_ALREADY_EXISTS":          1501,
		"LIKE_PERMISSION_DENIED":       1502,
		"LIKE_LOCKED":                  1503,
		"LIKE_STATUS_ERROR":            1504,
		"VIP_NOT_FOUND":                1600,
		"VIP_ALREADY_EXISTS":           1601,
		"VIP_PERMISSION_DENIED":        1602,
		"VIP_LOCKED":                   1603,
		"VIP_STATUS_ERROR":             1604,
		"PAYMENT_NOT_FOUND":            1700,
		"PAYMENT_ALREADY_EXISTS":       1701,
		"PAYMENT_PERMISSION_DENIED":    1702,
		"PAYMENT_LOCKED":               1703,
		"PAYMENT_STATUS_ERROR":         1704,
		"ORDER_NOT_FOUND":              1800,
		"ORDER_ALREADY_EXISTS":         1801,
		"ORDER_PERMISSION_DENIED":      1802,
		"ORDER_LOCKED":                 1803,
		"ORDER_STATUS_ERROR":           1804,
		"MESSAGE_NOT_FOUND":            1900,
		"MESSAGE_ALREADY_EXISTS":       1901,
		"MESSAGE_PERMISSION_DENIED":    1902,
		"MESSAGE_LOCKED":               1903,
		"MESSAGE_STATUS_ERROR":         1904,
	}
)

func (x ResponseCode) Enum() *ResponseCode {
	p := new(ResponseCode)
	*p = x
	return p
}

func (x ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_error_proto_enumTypes[0].Descriptor()
}

func (ResponseCode) Type() protoreflect.EnumType {
	return &file_error_proto_enumTypes[0]
}

func (x ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseCode.Descriptor instead.
func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_error_proto_rawDescGZIP(), []int{0}
}

var File_error_proto protoreflect.FileDescriptor

var file_error_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2a, 0xec, 0x21, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x43, 0x48,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x45, 0x54,
	0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d,
	0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12,
	0x17, 0x0a, 0x13, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41,
	0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x4f, 0x4f, 0x5f,
	0x4d, 0x41, 0x4e, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x53, 0x10, 0x08, 0x12,
	0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a,
	0x45, 0x44, 0x10, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x58,
	0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x4f, 0x4b, 0x45, 0x4e,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x66, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45,
	0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10,
	0x67, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x68, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x52, 0x4f, 0x4e,
	0x47, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x69, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x10, 0x6a, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x49, 0x52, 0x45, 0x44, 0x10, 0x6b, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x6c, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x6d, 0x12, 0x17,
	0x0a, 0x13, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e,
	0x54, 0x49, 0x41, 0x4c, 0x53, 0x10, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x6f, 0x12, 0x13, 0x0a, 0x0f, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x70,
	0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4c, 0x4f, 0x47, 0x49,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x71, 0x12, 0x16, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0xc8, 0x01,
	0x12, 0x16, 0x0a, 0x11, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x41, 0x52, 0x41,
	0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0xc9, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0xca, 0x01, 0x12, 0x13, 0x0a,
	0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4c, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x10,
	0xcb, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x56, 0x41,
	0x4c, 0x55, 0x45, 0x10, 0xcc, 0x01, 0x12, 0x11, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0xcd, 0x01, 0x12, 0x13, 0x0a, 0x0e, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x59, 0x4e, 0x54, 0x41, 0x58, 0x10, 0xce, 0x01, 0x12, 0x15,
	0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0xcf, 0x01, 0x12, 0x16, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xd0, 0x01, 0x12, 0x16, 0x0a,
	0x11, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0xd1, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xac, 0x02, 0x12, 0x1c,
	0x0a, 0x17, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0xad, 0x02, 0x12, 0x15, 0x0a, 0x10,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44,
	0x10, 0xae, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x45, 0x58, 0x48, 0x41, 0x55, 0x53, 0x54, 0x45, 0x44, 0x10, 0xaf, 0x02, 0x12, 0x12, 0x0a, 0x0d,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0xb0, 0x02,
	0x12, 0x14, 0x0a, 0x0f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0xb1, 0x02, 0x12, 0x19, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0xb2,
	0x02, 0x12, 0x1c, 0x0a, 0x17, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x51, 0x55,
	0x4f, 0x54, 0x41, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0xb3, 0x02, 0x12,
	0x17, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x52,
	0x55, 0x50, 0x54, 0x45, 0x44, 0x10, 0xb4, 0x02, 0x12, 0x13, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x90, 0x03, 0x12, 0x18, 0x0a,
	0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x53, 0x10, 0x91, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x92, 0x03, 0x12, 0x11, 0x0a,
	0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x93, 0x03,
	0x12, 0x1c, 0x0a, 0x17, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45,
	0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x94, 0x03, 0x12, 0x1a,
	0x0a, 0x15, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x95, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45,
	0x44, 0x10, 0x96, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x97, 0x03, 0x12, 0x1d, 0x0a, 0x18,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x98, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x99, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xf4, 0x03, 0x12, 0x19, 0x0a, 0x14, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x53, 0x10, 0xf5, 0x03, 0x12, 0x15, 0x0a, 0x10, 0x4e, 0x4f, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0xf6, 0x03, 0x12, 0x1c, 0x0a, 0x17, 0x47,
	0x52, 0x4f, 0x55, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xf7, 0x03, 0x12, 0x0f, 0x0a, 0x0a, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0xf8, 0x03, 0x12, 0x11, 0x0a, 0x0c, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0xf9, 0x03, 0x12, 0x1b, 0x0a,
	0x16, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xfa, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0xfb, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xfc, 0x03, 0x12, 0x19, 0x0a, 0x14,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x5f, 0x45, 0x58, 0x43, 0x45,
	0x45, 0x44, 0x45, 0x44, 0x10, 0xfd, 0x03, 0x12, 0x16, 0x0a, 0x11, 0x50, 0x52, 0x4f, 0x4a, 0x45,
	0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xd8, 0x04, 0x12,
	0x1b, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0xd9, 0x04, 0x12, 0x1e, 0x0a, 0x19,
	0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xda, 0x04, 0x12, 0x13, 0x0a, 0x0e,
	0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0xdb,
	0x04, 0x12, 0x15, 0x0a, 0x10, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x52, 0x43,
	0x48, 0x49, 0x56, 0x45, 0x44, 0x10, 0xdc, 0x04, 0x12, 0x11, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0xdd, 0x04, 0x12, 0x19, 0x0a, 0x14, 0x50,
	0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0xde, 0x04, 0x12, 0x19, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xdf,
	0x04, 0x12, 0x1d, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x4f, 0x50, 0x45,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xe0, 0x04,
	0x12, 0x1b, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x51, 0x55, 0x4f, 0x54,
	0x41, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0xe1, 0x04, 0x12, 0x14, 0x0a,
	0x0f, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0xbc, 0x05, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x41, 0x4c, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0xbd, 0x05, 0x12, 0x1c,
	0x0a, 0x17, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xbe, 0x05, 0x12, 0x11, 0x0a, 0x0c,
	0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0xbf, 0x05, 0x12,
	0x13, 0x0a, 0x0e, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45,
	0x44, 0x10, 0xc0, 0x05, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xc1, 0x05, 0x12, 0x18, 0x0a,
	0x13, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0xc2, 0x05, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x54, 0x4f, 0x52, 0x59,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xc3,
	0x05, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xc4, 0x05, 0x12, 0x1c,
	0x0a, 0x17, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xc5, 0x05, 0x12, 0x19, 0x0a, 0x14,
	0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0xa0, 0x06, 0x12, 0x1e, 0x0a, 0x19, 0x53, 0x54, 0x4f, 0x52, 0x59,
	0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x53, 0x10, 0xa1, 0x06, 0x12, 0x21, 0x0a, 0x1c, 0x53, 0x54, 0x4f, 0x52, 0x59,
	0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xa2, 0x06, 0x12, 0x1c, 0x0a, 0x17, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xa3, 0x06, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x54, 0x4f, 0x52,
	0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0xa4, 0x06,
	0x12, 0x1c, 0x0a, 0x17, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xa5, 0x06, 0x12, 0x1d,
	0x0a, 0x18, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x56, 0x45, 0x52,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xa6, 0x06, 0x12, 0x1b, 0x0a,
	0x16, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x43, 0x45, 0x4e,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xa7, 0x06, 0x12, 0x21, 0x0a, 0x1c, 0x53, 0x54,
	0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xa8, 0x06, 0x12, 0x20, 0x0a,
	0x1b, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x5f, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xa9, 0x06, 0x12,
	0x13, 0x0a, 0x0e, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x84, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x4c, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x85, 0x07, 0x12, 0x1b,
	0x0a, 0x16, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x86, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x52,
	0x4f, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x87, 0x07, 0x12, 0x10, 0x0a, 0x0b, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x4b,
	0x45, 0x44, 0x10, 0x88, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x89, 0x07, 0x12, 0x16, 0x0a,
	0x11, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x8a, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x51, 0x55,
	0x4f, 0x54, 0x41, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x8b, 0x07, 0x12,
	0x1b, 0x0a, 0x16, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x8c, 0x07, 0x12, 0x1a, 0x0a, 0x15,
	0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x8d, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x54,
	0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xe8, 0x07,
	0x12, 0x1b, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0xe9, 0x07, 0x12, 0x1e, 0x0a,
	0x19, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xea, 0x07, 0x12, 0x19, 0x0a,
	0x14, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xeb, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x4f, 0x4e, 0x54,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45,
	0x44, 0x10, 0xec, 0x07, 0x12, 0x19, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xed, 0x07, 0x12,
	0x13, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0xee, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f,
	0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0xef, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x55, 0x50, 0x54, 0x45, 0x44, 0x10,
	0xf0, 0x07, 0x12, 0x1d, 0x0a, 0x18, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xf1,
	0x07, 0x12, 0x15, 0x0a, 0x10, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xcc, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0xcd, 0x08,
	0x12, 0x18, 0x0a, 0x13, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0xce, 0x08, 0x12, 0x1c, 0x0a, 0x17, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50,
	0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0xcf, 0x08, 0x12, 0x1a, 0x0a, 0x15, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x10, 0xd0, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0xd1, 0x08, 0x12, 0x17, 0x0a, 0x12,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54,
	0x45, 0x44, 0x10, 0xd2, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xd3, 0x08, 0x12, 0x17, 0x0a,
	0x12, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x4c,
	0x49, 0x43, 0x54, 0x10, 0xd4, 0x08, 0x12, 0x1b, 0x0a, 0x16, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x54,
	0x10, 0xd5, 0x08, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0xb0, 0x09, 0x12, 0x13, 0x0a,
	0x0e, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10,
	0xb1, 0x09, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x49, 0x5a, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54,
	0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0xb2, 0x09, 0x12, 0x18, 0x0a, 0x13,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45,
	0x44, 0x45, 0x44, 0x10, 0xb3, 0x09, 0x12, 0x1d, 0x0a, 0x18, 0x46, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44,
	0x45, 0x44, 0x10, 0xb4, 0x09, 0x12, 0x1e, 0x0a, 0x19, 0x43, 0x4f, 0x4e, 0x43, 0x55, 0x52, 0x52,
	0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44,
	0x45, 0x44, 0x10, 0xb5, 0x09, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45,
	0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10,
	0xb6, 0x09, 0x12, 0x1d, 0x0a, 0x18, 0x42, 0x41, 0x4e, 0x44, 0x57, 0x49, 0x44, 0x54, 0x48, 0x5f,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0xb7,
	0x09, 0x12, 0x1b, 0x0a, 0x16, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0xb8, 0x09, 0x12, 0x18,
	0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x43,
	0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0xb9, 0x09, 0x12, 0x19, 0x0a, 0x14, 0x41, 0x49, 0x5f, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x94, 0x0a, 0x12, 0x1b, 0x0a, 0x16, 0x41, 0x49, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x95, 0x0a,
	0x12, 0x16, 0x0a, 0x11, 0x41, 0x49, 0x5f, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x5f, 0x45, 0x58, 0x43,
	0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x96, 0x0a, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x49, 0x5f, 0x4d,
	0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x97, 0x0a, 0x12, 0x17, 0x0a,
	0x12, 0x41, 0x49, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x98, 0x0a, 0x12, 0x15, 0x0a, 0x10, 0x41, 0x49, 0x5f, 0x43, 0x4f, 0x4e,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x99, 0x0a, 0x12, 0x0f, 0x0a,
	0x0a, 0x41, 0x49, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x9a, 0x0a, 0x12, 0x14,
	0x0a, 0x0f, 0x41, 0x49, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45,
	0x44, 0x10, 0x9b, 0x0a, 0x12, 0x15, 0x0a, 0x10, 0x41, 0x49, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45,
	0x58, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x9c, 0x0a, 0x12, 0x16, 0x0a, 0x11, 0x41,
	0x49, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x9d, 0x0a, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xf8, 0x0a, 0x12, 0x1b, 0x0a, 0x16, 0x43,
	0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0xf9, 0x0a, 0x12, 0x1e, 0x0a, 0x19, 0x43, 0x4f, 0x4d, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0xfa, 0x0a, 0x12, 0x13, 0x0a, 0x0e, 0x43, 0x4f, 0x4d, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0xfb, 0x0a, 0x12, 0x19, 0x0a,
	0x14, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xfc, 0x0a, 0x12, 0x13, 0x0a, 0x0e, 0x4c, 0x49, 0x4b, 0x45,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xdc, 0x0b, 0x12, 0x18, 0x0a,
	0x13, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x53, 0x10, 0xdd, 0x0b, 0x12, 0x1b, 0x0a, 0x16, 0x4c, 0x49, 0x4b, 0x45, 0x5f,
	0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45,
	0x44, 0x10, 0xde, 0x0b, 0x12, 0x10, 0x0a, 0x0b, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0xdf, 0x0b, 0x12, 0x16, 0x0a, 0x11, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xe0, 0x0b, 0x12, 0x12,
	0x0a, 0x0d, 0x56, 0x49, 0x50, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0xc0, 0x0c, 0x12, 0x17, 0x0a, 0x12, 0x56, 0x49, 0x50, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44,
	0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0xc1, 0x0c, 0x12, 0x1a, 0x0a, 0x15, 0x56,
	0x49, 0x50, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45,
	0x4e, 0x49, 0x45, 0x44, 0x10, 0xc2, 0x0c, 0x12, 0x0f, 0x0a, 0x0a, 0x56, 0x49, 0x50, 0x5f, 0x4c,
	0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0xc3, 0x0c, 0x12, 0x15, 0x0a, 0x10, 0x56, 0x49, 0x50, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xc4, 0x0c, 0x12,
	0x16, 0x0a, 0x11, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0xa4, 0x0d, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x41, 0x59, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x53, 0x10, 0xa5, 0x0d, 0x12, 0x1e, 0x0a, 0x19, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45,
	0x44, 0x10, 0xa6, 0x0d, 0x12, 0x13, 0x0a, 0x0e, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0xa7, 0x0d, 0x12, 0x19, 0x0a, 0x14, 0x50, 0x41, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0xa8, 0x0d, 0x12, 0x14, 0x0a, 0x0f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x88, 0x0e, 0x12, 0x19, 0x0a, 0x14, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x53, 0x10, 0x89, 0x0e, 0x12, 0x1c, 0x0a, 0x17, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50,
	0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44,
	0x10, 0x8a, 0x0e, 0x12, 0x11, 0x0a, 0x0c, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0x8b, 0x0e, 0x12, 0x17, 0x0a, 0x12, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x8c, 0x0e, 0x12,
	0x16, 0x0a, 0x11, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0xec, 0x0e, 0x12, 0x1b, 0x0a, 0x16, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x53, 0x10, 0xed, 0x0e, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45,
	0x44, 0x10, 0xee, 0x0e, 0x12, 0x13, 0x0a, 0x0e, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f,
	0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0xef, 0x0e, 0x12, 0x19, 0x0a, 0x14, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0xf0, 0x0e, 0x42, 0x76, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x42, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61,
	0x70, 0x65, 0x72, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xca, 0x02, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0xe2, 0x02,
	0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_error_proto_rawDescOnce sync.Once
	file_error_proto_rawDescData = file_error_proto_rawDesc
)

func file_error_proto_rawDescGZIP() []byte {
	file_error_proto_rawDescOnce.Do(func() {
		file_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_error_proto_rawDescData)
	})
	return file_error_proto_rawDescData
}

var file_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_error_proto_goTypes = []interface{}{
	(ResponseCode)(0), // 0: common.ResponseCode
}
var file_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_error_proto_init() }
func file_error_proto_init() {
	if File_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_error_proto_goTypes,
		DependencyIndexes: file_error_proto_depIdxs,
		EnumInfos:         file_error_proto_enumTypes,
	}.Build()
	File_error_proto = out.File
	file_error_proto_rawDesc = nil
	file_error_proto_goTypes = nil
	file_error_proto_depIdxs = nil
}
