// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: view_model.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LikeType int32

const (
	LikeType_Browser LikeType = 0
	// orange,激进的
	LikeType_Left LikeType = 1
	// blue，温和的
	LikeType_Middle LikeType = 2
	// green 保守的
	LikeType_Right LikeType = 3
)

// Enum value maps for LikeType.
var (
	LikeType_name = map[int32]string{
		0: "Browser",
		1: "Left",
		2: "Middle",
		3: "Right",
	}
	LikeType_value = map[string]int32{
		"Browser": 0,
		"Left":    1,
		"Middle":  2,
		"Right":   3,
	}
)

func (x LikeType) Enum() *LikeType {
	p := new(LikeType)
	*p = x
	return p
}

func (x LikeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LikeType) Descriptor() protoreflect.EnumDescriptor {
	return file_view_model_proto_enumTypes[0].Descriptor()
}

func (LikeType) Type() protoreflect.EnumType {
	return &file_view_model_proto_enumTypes[0]
}

func (x LikeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LikeType.Descriptor instead.
func (LikeType) EnumDescriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{0}
}

type GenderType int32

const (
	// 不公开性别
	GenderType_None   GenderType = 0
	GenderType_Man    GenderType = 1
	GenderType_Women  GenderType = 2
	GenderType_Double GenderType = 3
)

// Enum value maps for GenderType.
var (
	GenderType_name = map[int32]string{
		0: "None",
		1: "Man",
		2: "Women",
		3: "Double",
	}
	GenderType_value = map[string]int32{
		"None":   0,
		"Man":    1,
		"Women":  2,
		"Double": 3,
	}
)

func (x GenderType) Enum() *GenderType {
	p := new(GenderType)
	*p = x
	return p
}

func (x GenderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenderType) Descriptor() protoreflect.EnumDescriptor {
	return file_view_model_proto_enumTypes[1].Descriptor()
}

func (GenderType) Type() protoreflect.EnumType {
	return &file_view_model_proto_enumTypes[1]
}

func (x GenderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenderType.Descriptor instead.
func (GenderType) EnumDescriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{1}
}

type UserStatus int32

const (
	UserStatus_Rest      UserStatus = 0
	UserStatus_Study     UserStatus = 1
	UserStatus_Busy      UserStatus = 2
	UserStatus_Working   UserStatus = 3
	UserStatus_Invisible UserStatus = 4
	UserStatus_Idle      UserStatus = 5
)

// Enum value maps for UserStatus.
var (
	UserStatus_name = map[int32]string{
		0: "Rest",
		1: "Study",
		2: "Busy",
		3: "Working",
		4: "Invisible",
		5: "Idle",
	}
	UserStatus_value = map[string]int32{
		"Rest":      0,
		"Study":     1,
		"Busy":      2,
		"Working":   3,
		"Invisible": 4,
		"Idle":      5,
	}
)

func (x UserStatus) Enum() *UserStatus {
	p := new(UserStatus)
	*p = x
	return p
}

func (x UserStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_view_model_proto_enumTypes[2].Descriptor()
}

func (UserStatus) Type() protoreflect.EnumType {
	return &file_view_model_proto_enumTypes[2]
}

func (x UserStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserStatus.Descriptor instead.
func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{2}
}

type GroupStatus int32

const (
	GroupStatus_NotReady GroupStatus = 0
	GroupStatus_Normal   GroupStatus = 1
	GroupStatus_ViewOnly GroupStatus = 2
	GroupStatus_Abandon  GroupStatus = 3
)

// Enum value maps for GroupStatus.
var (
	GroupStatus_name = map[int32]string{
		0: "NotReady",
		1: "Normal",
		2: "ViewOnly",
		3: "Abandon",
	}
	GroupStatus_value = map[string]int32{
		"NotReady": 0,
		"Normal":   1,
		"ViewOnly": 2,
		"Abandon":  3,
	}
)

func (x GroupStatus) Enum() *GroupStatus {
	p := new(GroupStatus)
	*p = x
	return p
}

func (x GroupStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_view_model_proto_enumTypes[3].Descriptor()
}

func (GroupStatus) Type() protoreflect.EnumType {
	return &file_view_model_proto_enumTypes[3]
}

func (x GroupStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupStatus.Descriptor instead.
func (GroupStatus) EnumDescriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{3}
}

type ActiveType int32

const (
	ActiveType_AllActive ActiveType = 0
	ActiveType_Like      ActiveType = 1
	ActiveType_Share     ActiveType = 2
	ActiveType_Comment   ActiveType = 3
	ActiveType_Collect   ActiveType = 4
	ActiveType_DisAgree  ActiveType = 5
)

// Enum value maps for ActiveType.
var (
	ActiveType_name = map[int32]string{
		0: "AllActive",
		1: "Like",
		2: "Share",
		3: "Comment",
		4: "Collect",
		5: "DisAgree",
	}
	ActiveType_value = map[string]int32{
		"AllActive": 0,
		"Like":      1,
		"Share":     2,
		"Comment":   3,
		"Collect":   4,
		"DisAgree":  5,
	}
)

func (x ActiveType) Enum() *ActiveType {
	p := new(ActiveType)
	*p = x
	return p
}

func (x ActiveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActiveType) Descriptor() protoreflect.EnumDescriptor {
	return file_view_model_proto_enumTypes[4].Descriptor()
}

func (ActiveType) Type() protoreflect.EnumType {
	return &file_view_model_proto_enumTypes[4]
}

func (x ActiveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActiveType.Descriptor instead.
func (ActiveType) EnumDescriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{4}
}

type ItemType int32

const (
	ItemType_AllItem   ItemType = 0
	ItemType_ShortWord ItemType = 1
	ItemType_Paper     ItemType = 2
	ItemType_Picture   ItemType = 3
	ItemType_Video     ItemType = 4
	ItemType_Music     ItemType = 5
	ItemType_Link      ItemType = 6
	ItemType_Location  ItemType = 7
)

// Enum value maps for ItemType.
var (
	ItemType_name = map[int32]string{
		0: "AllItem",
		1: "ShortWord",
		2: "Paper",
		3: "Picture",
		4: "Video",
		5: "Music",
		6: "Link",
		7: "Location",
	}
	ItemType_value = map[string]int32{
		"AllItem":   0,
		"ShortWord": 1,
		"Paper":     2,
		"Picture":   3,
		"Video":     4,
		"Music":     5,
		"Link":      6,
		"Location":  7,
	}
)

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}

func (x ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_view_model_proto_enumTypes[5].Descriptor()
}

func (ItemType) Type() protoreflect.EnumType {
	return &file_view_model_proto_enumTypes[5]
}

func (x ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemType.Descriptor instead.
func (ItemType) EnumDescriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{5}
}

type AuthType int32

const (
	AuthType_NotSupport AuthType = 0
	AuthType_WithPhone  AuthType = 1
	AuthType_WithEmail  AuthType = 2
)

// Enum value maps for AuthType.
var (
	AuthType_name = map[int32]string{
		0: "NotSupport",
		1: "WithPhone",
		2: "WithEmail",
	}
	AuthType_value = map[string]int32{
		"NotSupport": 0,
		"WithPhone":  1,
		"WithEmail":  2,
	}
)

func (x AuthType) Enum() *AuthType {
	p := new(AuthType)
	*p = x
	return p
}

func (x AuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_view_model_proto_enumTypes[6].Descriptor()
}

func (AuthType) Type() protoreflect.EnumType {
	return &file_view_model_proto_enumTypes[6]
}

func (x AuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthType.Descriptor instead.
func (AuthType) EnumDescriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{6}
}

type VisibleType int32

const (
	VisibleType_AllPublic VisibleType = 0
	VisibleType_Public    VisibleType = 1
	VisibleType_Private   VisibleType = 2
	VisibleType_Someone   VisibleType = 3
)

// Enum value maps for VisibleType.
var (
	VisibleType_name = map[int32]string{
		0: "AllPublic",
		1: "Public",
		2: "Private",
		3: "Someone",
	}
	VisibleType_value = map[string]int32{
		"AllPublic": 0,
		"Public":    1,
		"Private":   2,
		"Someone":   3,
	}
)

func (x VisibleType) Enum() *VisibleType {
	p := new(VisibleType)
	*p = x
	return p
}

func (x VisibleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VisibleType) Descriptor() protoreflect.EnumDescriptor {
	return file_view_model_proto_enumTypes[7].Descriptor()
}

func (VisibleType) Type() protoreflect.EnumType {
	return &file_view_model_proto_enumTypes[7]
}

func (x VisibleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VisibleType.Descriptor instead.
func (VisibleType) EnumDescriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{7}
}

type Tags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   uint64 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	CreatorID uint64 `protobuf:"varint,2,opt,name=creatorID,proto3" json:"creatorID,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Tags) Reset() {
	*x = Tags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tags) ProtoMessage() {}

func (x *Tags) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tags.ProtoReflect.Descriptor instead.
func (*Tags) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{0}
}

func (x *Tags) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Tags) GetCreatorID() uint64 {
	if x != nil {
		return x.CreatorID
	}
	return 0
}

func (x *Tags) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar   string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Email    string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Location string `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Desc     string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Ctime    int64  `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime    int64  `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{1}
}

func (x *UserInfo) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UserInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UserInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *UserInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint64    `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name    string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar  string    `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Desc    string    `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Creator *UserInfo `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	Owner   *UserInfo `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	Tags    []*Tags   `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Ctime   int64     `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime   int64     `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{2}
}

func (x *GroupInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GroupInfo) GetCreator() *UserInfo {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *GroupInfo) GetOwner() *UserInfo {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *GroupInfo) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GroupInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *GroupInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type ProjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId uint64      `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GroupId   uint32      `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Name      string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Avatar    string      `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Creator   *UserInfo   `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	Owner     *UserInfo   `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
	Tags      []*Tags     `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Visable   VisibleType `protobuf:"varint,8,opt,name=visable,proto3,enum=common.apis.VisibleType" json:"visable,omitempty"`
	IsAchieve bool        `protobuf:"varint,9,opt,name=isAchieve,proto3" json:"isAchieve,omitempty"`
	IsClose   bool        `protobuf:"varint,10,opt,name=isClose,proto3" json:"isClose,omitempty"`
	Ctime     int64       `protobuf:"varint,19,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime     int64       `protobuf:"varint,20,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *ProjectInfo) Reset() {
	*x = ProjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectInfo) ProtoMessage() {}

func (x *ProjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectInfo.ProtoReflect.Descriptor instead.
func (*ProjectInfo) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectInfo) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ProjectInfo) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ProjectInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ProjectInfo) GetCreator() *UserInfo {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ProjectInfo) GetOwner() *UserInfo {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *ProjectInfo) GetTags() []*Tags {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ProjectInfo) GetVisable() VisibleType {
	if x != nil {
		return x.Visable
	}
	return VisibleType_AllPublic
}

func (x *ProjectInfo) GetIsAchieve() bool {
	if x != nil {
		return x.IsAchieve
	}
	return false
}

func (x *ProjectInfo) GetIsClose() bool {
	if x != nil {
		return x.IsClose
	}
	return false
}

func (x *ProjectInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ProjectInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type ProjectProfileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId     uint64      `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GroupId       uint32      `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Description   string      `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	WatchingCount uint64      `protobuf:"varint,5,opt,name=WatchingCount,proto3" json:"WatchingCount,omitempty"`
	InvolvedCount uint64      `protobuf:"varint,6,opt,name=InvolvedCount,proto3" json:"InvolvedCount,omitempty"`
	Avatar        string      `protobuf:"bytes,7,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Visable       VisibleType `protobuf:"varint,8,opt,name=visable,proto3,enum=common.apis.VisibleType" json:"visable,omitempty"`
	IsAchieve     bool        `protobuf:"varint,9,opt,name=isAchieve,proto3" json:"isAchieve,omitempty"`
	IsClose       bool        `protobuf:"varint,10,opt,name=isClose,proto3" json:"isClose,omitempty"`
	IsPrivate     bool        `protobuf:"varint,11,opt,name=isPrivate,proto3" json:"isPrivate,omitempty"`
	Ctime         int64       `protobuf:"varint,19,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime         int64       `protobuf:"varint,20,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *ProjectProfileInfo) Reset() {
	*x = ProjectProfileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectProfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectProfileInfo) ProtoMessage() {}

func (x *ProjectProfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectProfileInfo.ProtoReflect.Descriptor instead.
func (*ProjectProfileInfo) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectProfileInfo) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ProjectProfileInfo) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ProjectProfileInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectProfileInfo) GetWatchingCount() uint64 {
	if x != nil {
		return x.WatchingCount
	}
	return 0
}

func (x *ProjectProfileInfo) GetInvolvedCount() uint64 {
	if x != nil {
		return x.InvolvedCount
	}
	return 0
}

func (x *ProjectProfileInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ProjectProfileInfo) GetVisable() VisibleType {
	if x != nil {
		return x.Visable
	}
	return VisibleType_AllPublic
}

func (x *ProjectProfileInfo) GetIsAchieve() bool {
	if x != nil {
		return x.IsAchieve
	}
	return false
}

func (x *ProjectProfileInfo) GetIsClose() bool {
	if x != nil {
		return x.IsClose
	}
	return false
}

func (x *ProjectProfileInfo) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *ProjectProfileInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ProjectProfileInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type ActiveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        *UserInfo    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	ActiveType  ActiveType   `protobuf:"varint,2,opt,name=activeType,proto3,enum=common.apis.ActiveType" json:"activeType,omitempty"`
	ItemInfo    *ItemInfo    `protobuf:"bytes,3,opt,name=itemInfo,proto3" json:"itemInfo,omitempty"`
	ProjectInfo *ProjectInfo `protobuf:"bytes,4,opt,name=projectInfo,proto3" json:"projectInfo,omitempty"`
	GroupInfo   *GroupInfo   `protobuf:"bytes,5,opt,name=groupInfo,proto3" json:"groupInfo,omitempty"`
	Ctime       int64        `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime       int64        `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *ActiveInfo) Reset() {
	*x = ActiveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveInfo) ProtoMessage() {}

func (x *ActiveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveInfo.ProtoReflect.Descriptor instead.
func (*ActiveInfo) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{5}
}

func (x *ActiveInfo) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ActiveInfo) GetActiveType() ActiveType {
	if x != nil {
		return x.ActiveType
	}
	return ActiveType_AllActive
}

func (x *ActiveInfo) GetItemInfo() *ItemInfo {
	if x != nil {
		return x.ItemInfo
	}
	return nil
}

func (x *ActiveInfo) GetProjectInfo() *ProjectInfo {
	if x != nil {
		return x.ProjectInfo
	}
	return nil
}

func (x *ActiveInfo) GetGroupInfo() *GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *ActiveInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ActiveInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type WordDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Length  uint64 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *WordDetail) Reset() {
	*x = WordDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WordDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordDetail) ProtoMessage() {}

func (x *WordDetail) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordDetail.ProtoReflect.Descriptor instead.
func (*WordDetail) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{6}
}

func (x *WordDetail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *WordDetail) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type PictureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceUrl string `protobuf:"bytes,1,opt,name=resource_url,json=resourceUrl,proto3" json:"resource_url,omitempty"`
	Size        uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PictureInfo) Reset() {
	*x = PictureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureInfo) ProtoMessage() {}

func (x *PictureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureInfo.ProtoReflect.Descriptor instead.
func (*PictureInfo) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{7}
}

func (x *PictureInfo) GetResourceUrl() string {
	if x != nil {
		return x.ResourceUrl
	}
	return ""
}

func (x *PictureInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PictureDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*PictureInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Num  uint64         `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *PictureDetail) Reset() {
	*x = PictureDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureDetail) ProtoMessage() {}

func (x *PictureDetail) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureDetail.ProtoReflect.Descriptor instead.
func (*PictureDetail) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{8}
}

func (x *PictureDetail) GetList() []*PictureInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *PictureDetail) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type VideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceUrl string `protobuf:"bytes,1,opt,name=resource_url,json=resourceUrl,proto3" json:"resource_url,omitempty"`
	Size        uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	TimeLength  uint64 `protobuf:"varint,3,opt,name=timeLength,proto3" json:"timeLength,omitempty"`
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{9}
}

func (x *VideoInfo) GetResourceUrl() string {
	if x != nil {
		return x.ResourceUrl
	}
	return ""
}

func (x *VideoInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *VideoInfo) GetTimeLength() uint64 {
	if x != nil {
		return x.TimeLength
	}
	return 0
}

type VideoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*VideoInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Num   uint64       `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Ctime int64        `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime int64        `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *VideoDetail) Reset() {
	*x = VideoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDetail) ProtoMessage() {}

func (x *VideoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoDetail.ProtoReflect.Descriptor instead.
func (*VideoDetail) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{10}
}

func (x *VideoDetail) GetList() []*VideoInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *VideoDetail) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *VideoDetail) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *VideoDetail) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type MusicShareDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceUrl string `protobuf:"bytes,1,opt,name=resourceUrl,proto3" json:"resourceUrl,omitempty"`
	Source      uint64 `protobuf:"varint,2,opt,name=source,proto3" json:"source,omitempty"`
	Ctime       int64  `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime       int64  `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *MusicShareDetail) Reset() {
	*x = MusicShareDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MusicShareDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicShareDetail) ProtoMessage() {}

func (x *MusicShareDetail) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicShareDetail.ProtoReflect.Descriptor instead.
func (*MusicShareDetail) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{11}
}

func (x *MusicShareDetail) GetResourceUrl() string {
	if x != nil {
		return x.ResourceUrl
	}
	return ""
}

func (x *MusicShareDetail) GetSource() uint64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *MusicShareDetail) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *MusicShareDetail) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type VoiceDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceUrl string `protobuf:"bytes,1,opt,name=resourceUrl,proto3" json:"resourceUrl,omitempty"`
	Size        uint64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	TimeLength  uint64 `protobuf:"varint,3,opt,name=timeLength,proto3" json:"timeLength,omitempty"`
	Ctime       int64  `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime       int64  `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *VoiceDetail) Reset() {
	*x = VoiceDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceDetail) ProtoMessage() {}

func (x *VoiceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceDetail.ProtoReflect.Descriptor instead.
func (*VoiceDetail) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{12}
}

func (x *VoiceDetail) GetResourceUrl() string {
	if x != nil {
		return x.ResourceUrl
	}
	return ""
}

func (x *VoiceDetail) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *VoiceDetail) GetTimeLength() uint64 {
	if x != nil {
		return x.TimeLength
	}
	return 0
}

func (x *VoiceDetail) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *VoiceDetail) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type ShareDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceUrl string `protobuf:"bytes,1,opt,name=resourceUrl,proto3" json:"resourceUrl,omitempty"`
	Source      uint64 `protobuf:"varint,2,opt,name=source,proto3" json:"source,omitempty"`
	Ctime       int64  `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime       int64  `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *ShareDetail) Reset() {
	*x = ShareDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareDetail) ProtoMessage() {}

func (x *ShareDetail) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareDetail.ProtoReflect.Descriptor instead.
func (*ShareDetail) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{13}
}

func (x *ShareDetail) GetResourceUrl() string {
	if x != nil {
		return x.ResourceUrl
	}
	return ""
}

func (x *ShareDetail) GetSource() uint64 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *ShareDetail) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ShareDetail) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type ItemDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Detail:
	//
	//	*ItemDetail_Word
	//	*ItemDetail_Pictures
	//	*ItemDetail_Video
	//	*ItemDetail_Music
	//	*ItemDetail_Voice
	//	*ItemDetail_Share
	Detail isItemDetail_Detail `protobuf_oneof:"detail"`
}

func (x *ItemDetail) Reset() {
	*x = ItemDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDetail) ProtoMessage() {}

func (x *ItemDetail) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDetail.ProtoReflect.Descriptor instead.
func (*ItemDetail) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{14}
}

func (m *ItemDetail) GetDetail() isItemDetail_Detail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (x *ItemDetail) GetWord() *WordDetail {
	if x, ok := x.GetDetail().(*ItemDetail_Word); ok {
		return x.Word
	}
	return nil
}

func (x *ItemDetail) GetPictures() *PictureDetail {
	if x, ok := x.GetDetail().(*ItemDetail_Pictures); ok {
		return x.Pictures
	}
	return nil
}

func (x *ItemDetail) GetVideo() *VideoDetail {
	if x, ok := x.GetDetail().(*ItemDetail_Video); ok {
		return x.Video
	}
	return nil
}

func (x *ItemDetail) GetMusic() *MusicShareDetail {
	if x, ok := x.GetDetail().(*ItemDetail_Music); ok {
		return x.Music
	}
	return nil
}

func (x *ItemDetail) GetVoice() *VoiceDetail {
	if x, ok := x.GetDetail().(*ItemDetail_Voice); ok {
		return x.Voice
	}
	return nil
}

func (x *ItemDetail) GetShare() *ShareDetail {
	if x, ok := x.GetDetail().(*ItemDetail_Share); ok {
		return x.Share
	}
	return nil
}

type isItemDetail_Detail interface {
	isItemDetail_Detail()
}

type ItemDetail_Word struct {
	Word *WordDetail `protobuf:"bytes,1,opt,name=word,proto3,oneof"`
}

type ItemDetail_Pictures struct {
	Pictures *PictureDetail `protobuf:"bytes,2,opt,name=pictures,proto3,oneof"`
}

type ItemDetail_Video struct {
	Video *VideoDetail `protobuf:"bytes,3,opt,name=video,proto3,oneof"`
}

type ItemDetail_Music struct {
	Music *MusicShareDetail `protobuf:"bytes,4,opt,name=music,proto3,oneof"`
}

type ItemDetail_Voice struct {
	Voice *VoiceDetail `protobuf:"bytes,5,opt,name=voice,proto3,oneof"`
}

type ItemDetail_Share struct {
	Share *ShareDetail `protobuf:"bytes,6,opt,name=share,proto3,oneof"`
}

func (*ItemDetail_Word) isItemDetail_Detail() {}

func (*ItemDetail_Pictures) isItemDetail_Detail() {}

func (*ItemDetail_Video) isItemDetail_Detail() {}

func (*ItemDetail_Music) isItemDetail_Detail() {}

func (*ItemDetail_Voice) isItemDetail_Detail() {}

func (*ItemDetail_Share) isItemDetail_Detail() {}

type ItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   uint64      `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ProjectId uint64      `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	UserId    uint64      `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title     string      `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Content   *ItemDetail `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Itype     ItemType    `protobuf:"varint,6,opt,name=itype,proto3,enum=common.apis.ItemType" json:"itype,omitempty"`
	Ctime     int64       `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime     int64       `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *ItemInfo) Reset() {
	*x = ItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemInfo) ProtoMessage() {}

func (x *ItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemInfo.ProtoReflect.Descriptor instead.
func (*ItemInfo) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{15}
}

func (x *ItemInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ItemInfo) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ItemInfo) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ItemInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ItemInfo) GetContent() *ItemDetail {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ItemInfo) GetItype() ItemType {
	if x != nil {
		return x.Itype
	}
	return ItemType_AllItem
}

func (x *ItemInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ItemInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type UserProfileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ctime       int64  `protobuf:"varint,2,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Avatar      string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Mtime       int64  `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *UserProfileInfo) Reset() {
	*x = UserProfileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileInfo) ProtoMessage() {}

func (x *UserProfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileInfo.ProtoReflect.Descriptor instead.
func (*UserProfileInfo) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{16}
}

func (x *UserProfileInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserProfileInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *UserProfileInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserProfileInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserProfileInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type GroupProfileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int64 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Ctime   int64 `protobuf:"varint,9,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime   int64 `protobuf:"varint,10,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *GroupProfileInfo) Reset() {
	*x = GroupProfileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupProfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupProfileInfo) ProtoMessage() {}

func (x *GroupProfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupProfileInfo.ProtoReflect.Descriptor instead.
func (*GroupProfileInfo) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{17}
}

func (x *GroupProfileInfo) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupProfileInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *GroupProfileInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

type UserPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectType int64 `protobuf:"varint,1,opt,name=ConnectType,proto3" json:"ConnectType,omitempty"`
	Ctime       int64 `protobuf:"varint,2,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Mtime       int64 `protobuf:"varint,3,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
}

func (x *UserPrivate) Reset() {
	*x = UserPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_view_model_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrivate) ProtoMessage() {}

func (x *UserPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_view_model_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrivate.ProtoReflect.Descriptor instead.
func (*UserPrivate) Descriptor() ([]byte, []int) {
	return file_view_model_proto_rawDescGZIP(), []int{18}
}

func (x *UserPrivate) GetConnectType() int64 {
	if x != nil {
		return x.ConnectType
	}
	return 0
}

func (x *UserPrivate) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *UserPrivate) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

var File_view_model_proto protoreflect.FileDescriptor

var file_view_model_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x22,
	0x53, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x09, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0x90, 0x03, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x32, 0x0a,
	0x07, 0x76, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x76, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x8a, 0x03, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x07,
	0x76, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x76, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0xc1, 0x02, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x29, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x64, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x44, 0x0a, 0x0b, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x4f, 0x0a, 0x0d,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x62, 0x0a,
	0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x22, 0x77, 0x0a, 0x0b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x10, 0x4d, 0x75,
	0x73, 0x69, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x0b, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x73, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xcc, 0x02, 0x0a, 0x0a,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x48, 0x00, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x35, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x30, 0x0a, 0x05,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x30,
	0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xff, 0x01, 0x0a, 0x08, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22,
	0x59, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x4d, 0x74, 0x69, 0x6d, 0x65, 0x2a, 0x38, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4c, 0x65, 0x66, 0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x69,
	0x64, 0x64, 0x6c, 0x65, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x10,
	0x03, 0x2a, 0x36, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x61, 0x6e,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x6f, 0x6d, 0x65, 0x6e, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x10, 0x03, 0x2a, 0x51, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x74, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x74, 0x75, 0x64, 0x79, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x42, 0x75, 0x73, 0x79, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x05, 0x2a, 0x42, 0x0a, 0x0b,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x4e,
	0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x6e, 0x6c,
	0x79, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x10, 0x03,
	0x2a, 0x58, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x69, 0x6b, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x03, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x69, 0x73, 0x41, 0x67, 0x72, 0x65, 0x65, 0x10, 0x05, 0x2a, 0x6c, 0x0a, 0x08, 0x49, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x64,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x61, 0x70, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x10, 0x05,
	0x12, 0x08, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x2a, 0x38, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x10, 0x02, 0x2a, 0x42, 0x0a, 0x0b, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x6f, 0x6d,
	0x65, 0x6f, 0x6e, 0x65, 0x10, 0x03, 0x42, 0x92, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x42, 0x0e, 0x56, 0x69, 0x65, 0x77,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x22, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x65, 0x72, 0x79,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e,
	0xa2, 0x02, 0x03, 0x43, 0x41, 0x58, 0xaa, 0x02, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x70, 0x69, 0x73, 0xca, 0x02, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x41, 0x70,
	0x69, 0x73, 0xe2, 0x02, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x41, 0x70, 0x69, 0x73,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_view_model_proto_rawDescOnce sync.Once
	file_view_model_proto_rawDescData = file_view_model_proto_rawDesc
)

func file_view_model_proto_rawDescGZIP() []byte {
	file_view_model_proto_rawDescOnce.Do(func() {
		file_view_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_view_model_proto_rawDescData)
	})
	return file_view_model_proto_rawDescData
}

var file_view_model_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_view_model_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_view_model_proto_goTypes = []interface{}{
	(LikeType)(0),              // 0: common.apis.LikeType
	(GenderType)(0),            // 1: common.apis.GenderType
	(UserStatus)(0),            // 2: common.apis.UserStatus
	(GroupStatus)(0),           // 3: common.apis.GroupStatus
	(ActiveType)(0),            // 4: common.apis.ActiveType
	(ItemType)(0),              // 5: common.apis.ItemType
	(AuthType)(0),              // 6: common.apis.AuthType
	(VisibleType)(0),           // 7: common.apis.VisibleType
	(*Tags)(nil),               // 8: common.apis.Tags
	(*UserInfo)(nil),           // 9: common.apis.UserInfo
	(*GroupInfo)(nil),          // 10: common.apis.GroupInfo
	(*ProjectInfo)(nil),        // 11: common.apis.ProjectInfo
	(*ProjectProfileInfo)(nil), // 12: common.apis.ProjectProfileInfo
	(*ActiveInfo)(nil),         // 13: common.apis.ActiveInfo
	(*WordDetail)(nil),         // 14: common.apis.WordDetail
	(*PictureInfo)(nil),        // 15: common.apis.PictureInfo
	(*PictureDetail)(nil),      // 16: common.apis.PictureDetail
	(*VideoInfo)(nil),          // 17: common.apis.VideoInfo
	(*VideoDetail)(nil),        // 18: common.apis.VideoDetail
	(*MusicShareDetail)(nil),   // 19: common.apis.MusicShareDetail
	(*VoiceDetail)(nil),        // 20: common.apis.VoiceDetail
	(*ShareDetail)(nil),        // 21: common.apis.ShareDetail
	(*ItemDetail)(nil),         // 22: common.apis.ItemDetail
	(*ItemInfo)(nil),           // 23: common.apis.ItemInfo
	(*UserProfileInfo)(nil),    // 24: common.apis.UserProfileInfo
	(*GroupProfileInfo)(nil),   // 25: common.apis.GroupProfileInfo
	(*UserPrivate)(nil),        // 26: common.apis.UserPrivate
}
var file_view_model_proto_depIdxs = []int32{
	9,  // 0: common.apis.GroupInfo.creator:type_name -> common.apis.UserInfo
	9,  // 1: common.apis.GroupInfo.owner:type_name -> common.apis.UserInfo
	8,  // 2: common.apis.GroupInfo.tags:type_name -> common.apis.Tags
	9,  // 3: common.apis.ProjectInfo.creator:type_name -> common.apis.UserInfo
	9,  // 4: common.apis.ProjectInfo.owner:type_name -> common.apis.UserInfo
	8,  // 5: common.apis.ProjectInfo.tags:type_name -> common.apis.Tags
	7,  // 6: common.apis.ProjectInfo.visable:type_name -> common.apis.VisibleType
	7,  // 7: common.apis.ProjectProfileInfo.visable:type_name -> common.apis.VisibleType
	9,  // 8: common.apis.ActiveInfo.user:type_name -> common.apis.UserInfo
	4,  // 9: common.apis.ActiveInfo.activeType:type_name -> common.apis.ActiveType
	23, // 10: common.apis.ActiveInfo.itemInfo:type_name -> common.apis.ItemInfo
	11, // 11: common.apis.ActiveInfo.projectInfo:type_name -> common.apis.ProjectInfo
	10, // 12: common.apis.ActiveInfo.groupInfo:type_name -> common.apis.GroupInfo
	15, // 13: common.apis.PictureDetail.list:type_name -> common.apis.PictureInfo
	17, // 14: common.apis.VideoDetail.list:type_name -> common.apis.VideoInfo
	14, // 15: common.apis.ItemDetail.word:type_name -> common.apis.WordDetail
	16, // 16: common.apis.ItemDetail.pictures:type_name -> common.apis.PictureDetail
	18, // 17: common.apis.ItemDetail.video:type_name -> common.apis.VideoDetail
	19, // 18: common.apis.ItemDetail.music:type_name -> common.apis.MusicShareDetail
	20, // 19: common.apis.ItemDetail.voice:type_name -> common.apis.VoiceDetail
	21, // 20: common.apis.ItemDetail.share:type_name -> common.apis.ShareDetail
	22, // 21: common.apis.ItemInfo.content:type_name -> common.apis.ItemDetail
	5,  // 22: common.apis.ItemInfo.itype:type_name -> common.apis.ItemType
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_view_model_proto_init() }
func file_view_model_proto_init() {
	if File_view_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_view_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectProfileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WordDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PictureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PictureDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MusicShareDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupProfileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_view_model_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_view_model_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ItemDetail_Word)(nil),
		(*ItemDetail_Pictures)(nil),
		(*ItemDetail_Video)(nil),
		(*ItemDetail_Music)(nil),
		(*ItemDetail_Voice)(nil),
		(*ItemDetail_Share)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_view_model_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_view_model_proto_goTypes,
		DependencyIndexes: file_view_model_proto_depIdxs,
		EnumInfos:         file_view_model_proto_enumTypes,
		MessageInfos:      file_view_model_proto_msgTypes,
	}.Build()
	File_view_model_proto = out.File
	file_view_model_proto_rawDesc = nil
	file_view_model_proto_goTypes = nil
	file_view_model_proto_depIdxs = nil
}
