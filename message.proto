syntax = "proto3";
package common;

import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "user.proto";
import "story.proto";
import "error.proto";
import "google/protobuf/timestamp.proto";

enum MsgType {
  TEXT = 0;
  IMAGE = 1;
  VIDEO = 2;
  AUDIO = 3;
  SYSTEM = 4;
}

message ChatMessage {
  int64 id = 1;
  int64 role_id = 2;
  int64 user_id = 3;
  int32 sender = 4; 
  string message = 5;
  int64 chat_id = 6;
  int64 timestamp = 7;
  UserInfo user = 8;
  StoryRole role = 9;
  string uuid = 10;
}

message StreamChatMessage {
  int64 role_id = 1;
  int64 user_id = 2;
  repeated ChatMessage messages = 3;
}

message StreamChatMessageRequest {
  StreamChatMessage message = 1;
  int64 timestamp = 2;
  string request_id = 3;
  string token = 4;
}

message StreamChatMessageResponse {
  ResponseCode code = 1;
  string message = 2;
  int64 timestamp = 3;
  string request_id = 4;
  repeated StreamChatMessage reply_messages = 5;
}

// 使用 stream 发送、接收消息
service StreamMessageService {
  rpc StreamChatMessage(stream StreamChatMessageRequest) returns (stream StreamChatMessageResponse) {
    option (google.api.http) = {
      post: "/v1/chat/messages/stream"
      body: "*"
    };
  }
}
